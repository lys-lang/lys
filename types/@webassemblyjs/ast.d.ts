export const assertBinaryModule: any;
export const assertBlockComment: any;
export const assertBlockInstruction: any;
export const assertByteArray: any;
export const assertCallIndirectInstruction: any;
export const assertCallInstruction: any;
export const assertData: any;
export const assertElem: any;
export const assertFloatLiteral: any;
export const assertFunc: any;
export const assertFuncImportDescr: any;
export const assertFunctionNameMetadata: any;
export const assertGlobal: any;
export const assertGlobalType: any;
export const assertHasLoc: any;
export const assertIdentifier: any;
export const assertIfInstruction: any;
export const assertIndexInFuncSection: any;
export const assertInstr: any;
export const assertInternalBrUnless: any;
export const assertInternalCallExtern: any;
export const assertInternalEndAndReturn: any;
export const assertInternalGoto: any;
export const assertLeadingComment: any;
export const assertLimit: any;
export const assertLocalNameMetadata: any;
export const assertLongNumberLiteral: any;
export const assertLoopInstruction: any;
export const assertMemory: any;
export const assertModule: any;
export const assertModuleExport: any;
export const assertModuleExportDescr: any;
export const assertModuleImport: any;
export const assertModuleMetadata: any;
export const assertModuleNameMetadata: any;
export const assertNumberLiteral: any;
export const assertProducerMetadata: any;
export const assertProducerMetadataVersionedName: any;
export const assertProducersSectionMetadata: any;
export const assertProgram: any;
export const assertQuoteModule: any;
export const assertSectionMetadata: any;
export const assertSignature: any;
export const assertStart: any;
export const assertStringLiteral: any;
export const assertTable: any;
export const assertTypeInstruction: any;
export const assertValtypeLiteral: any;
export const binaryModule: any;
export const blockComment: any;
export const blockInstruction: any;
export const byteArray: any;
export const callIndirectInstruction: any;
export const callInstruction: any;
export const cloneNode: any;
export const data: any;
export const elem: any;
export const floatLiteral: any;
export const func: any;
export const funcImportDescr: any;
export const funcParam: any;
export const functionNameMetadata: any;
export const getEndBlockByteOffset: any;
export const getEndByteOffset: any;
export const getEndOfSection: any;
export const getFunctionBeginingByteOffset: any;
export const getSectionMetadata: any;
export const getSectionMetadatas: any;
export const getStartBlockByteOffset: any;
export const getStartByteOffset: any;
export const getUniqueNameGenerator: any;
export const global: any;
export const globalType: any;
export const identifier: any;
export const ifInstruction: any;
export const indexInFuncSection: any;
export const indexLiteral: any;
export const instr: any;
export const instruction: any;
export const internalBrUnless: any;
export const internalCallExtern: any;
export const internalEndAndReturn: any;
export const internalGoto: any;
export const isAnonymous: any;
export const isBinaryModule: any;
export const isBlock: any;
export const isBlockComment: any;
export const isBlockInstruction: any;
export const isByteArray: any;
export const isCallIndirectInstruction: any;
export const isCallInstruction: any;
export const isData: any;
export const isElem: any;
export const isExpression: any;
export const isFloatLiteral: any;
export const isFunc: any;
export const isFuncImportDescr: any;
export const isFunctionNameMetadata: any;
export const isGlobal: any;
export const isGlobalType: any;
export const isIdentifier: any;
export const isIfInstruction: any;
export const isImportDescr: any;
export const isIndexInFuncSection: any;
export const isInstr: any;
export const isInstruction: any;
export const isInternalBrUnless: any;
export const isInternalCallExtern: any;
export const isInternalEndAndReturn: any;
export const isInternalGoto: any;
export const isIntrinsic: any;
export const isLeadingComment: any;
export const isLimit: any;
export const isLocalNameMetadata: any;
export const isLongNumberLiteral: any;
export const isLoopInstruction: any;
export const isMemory: any;
export const isModule: any;
export const isModuleExport: any;
export const isModuleExportDescr: any;
export const isModuleImport: any;
export const isModuleMetadata: any;
export const isModuleNameMetadata: any;
export const isNode: any;
export const isNumberLiteral: any;
export const isNumericLiteral: any;
export const isProducerMetadata: any;
export const isProducerMetadataVersionedName: any;
export const isProducersSectionMetadata: any;
export const isProgram: any;
export const isQuoteModule: any;
export const isSectionMetadata: any;
export const isSignature: any;
export const isStart: any;
export const isStringLiteral: any;
export const isTable: any;
export const isTypeInstruction: any;
export const isValtypeLiteral: any;
export const leadingComment: any;
export const limit: any;
export const localNameMetadata: any;
export const longNumberLiteral: any;
export const loopInstruction: any;
export const memIndexLiteral: any;
export const memory: any;
export const module: any;
export const moduleExport: any;
export const moduleExportDescr: any;
export const moduleImport: any;
export const moduleMetadata: any;
export const moduleNameMetadata: any;
export const nodeAndUnionTypes: any;
export const numberLiteral: any;
export const numberLiteralFromRaw: any;
export const objectInstruction: any;
export const orderedInsertNode: any;
export const producerMetadata: any;
export const producerMetadataVersionedName: any;
export const producersSectionMetadata: any;
export const program: any;
export const quoteModule: any;
export const sectionMetadata: any;
export const shiftLoc: any;
export const shiftSection: any;
export const signature: any;
export const signatureForOpcode: any;
export const signatures: any;
export const sortSectionMetadata: any;
export const start: any;
export const stringLiteral: any;
export const table: any;
export const traverse: any;
export const typeInstruction: any;
export const unionTypesMap: any;
export const valtypeLiteral: any;
export const withLoc: any;
export const withRaw: any;
