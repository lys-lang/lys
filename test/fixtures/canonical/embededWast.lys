#[inline]
private fun test(): void = %wasm {

}

#[inline]
private fun test(): void = %wasm { }
#[inline]
private fun test(): void =%wasm{}

var freeblock = 0

fun malloc(size: i32): i32 = %wasm {
  (local $address i32)
  (set_local $address (get_global freeblock))
  (set_global
    $freeblock
    (i32.add
      (get_local $address)
      (get_local $size)
    )
  )
  (get_local $address)
}

fun strAdd(a: i32, b: i32): i32 = %wasm {
  (local $sum i32)
  (local $aSize i32)
  (local $newStr i32)
  (return
    (set_local $aSize (i32.load8_u a))
    (set_local $sum
      (i32.sub
        (i32.add
          (get_local $aSize)
          (i32.load8_u b)
        )
        (i32.const 1)
      )
    )
    (set_local $newStr
      (call malloc
        (i32.add
          (get_local $sum)
          (i32.const 1)
        )
      )
    )
    (i32.store8
      (get_local $newStr)
      (get_local $sum)
    )
    (call string_copy (get_local $a) (get_local $newStr))
    (call string_copy
      (get_local $b)
      (i32.sub
        (i32.add
          (get_local $newStr)
          (get_local $aSize)
        )
        (i32.const 1)
      )
    )
    (get_local $newStr)
  )
}
