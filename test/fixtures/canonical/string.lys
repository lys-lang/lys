
struct String(data: bytes)

impl String {
  fun property_length(str: String): i32 = str.data.length / 2

  fun +(lhs: String, rhs: String): String = {
    val lhsData = lhs.data
    val rhsData = rhs.data

    val lhsLen = lhsData.length
    val rhsLen = rhsData.length

    var newData = system::core::memory::allocBytes(lhsLen + rhsLen)

    system::core::memory::memcpy(newData.ptr, lhsData.ptr, lhsLen)
    system::core::memory::memcpy(newData.ptr + lhsLen, rhs.data.ptr, rhsLen)

    String(newData)
  }

  fun charAt(str: String, at: i32): u16 = {
    if (at > str.length) {
      panic()
    }
    u16.load(str.data.ptr as ref, at * 2)
  }
}