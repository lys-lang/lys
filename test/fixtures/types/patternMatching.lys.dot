digraph LYS {
  node [shape=box,fontsize=10];
  subgraph "cluster_test/fixtures/types/patternMatching.lys" {
    1 [label="Name: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))))", fillcolor=grey];
    2 [label="Name: None\n(type (alias None (struct)))", fillcolor=grey];
    3 [label="Name: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
    4 [label="FunOverload: test\n(fun 'test' ((alias i32)) (alias boolean))", fillcolor=grey];
    5 [label="FunNode: test\n(fun 'test' ((alias i32)) (alias boolean))", fillcolor=grey];
    6 [label="Name: a\n(alias i32 (native i32))", fillcolor=grey];
    7 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    8 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    9 [label="Name: test\n(fun 'test' ((alias i32)) (alias boolean))", fillcolor=grey];
    10 [label="FunOverload: test2\n(fun 'test2' ((alias i32)) (alias i32))", fillcolor=grey];
    11 [label="FunNode: test2\n(fun 'test2' ((alias i32)) (alias i32))", fillcolor=grey];
    12 [label="Name: a\n(alias i32 (native i32))", fillcolor=grey];
    13 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    14 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    15 [label="Name: test2\n(fun 'test2' ((alias i32)) (alias i32))", fillcolor=grey];
    16 [label="FunOverload: test3\n(fun 'test3' ((alias Maybe)) (alias boolean))", fillcolor=grey];
    17 [label="FunNode: test3\n(fun 'test3' ((alias Maybe)) (alias boolean))", fillcolor=grey];
    18 [label="Name: a\n(alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>))))", fillcolor=grey];
    19 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))))", fillcolor=grey];
    20 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    21 [label="Name: test3\n(fun 'test3' ((alias Maybe)) (alias boolean))", fillcolor=grey];
    22 [label="FunOverload: test4\n(fun 'test4' ((alias Maybe)) (alias Some))", fillcolor=grey];
    23 [label="FunNode: test4\n(fun 'test4' ((alias Maybe)) (alias Some))", fillcolor=grey];
    24 [label="Name: a\n(alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>))))", fillcolor=grey];
    25 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))))", fillcolor=grey];
    26 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
    27 [label="Name: test4\n(fun 'test4' ((alias Maybe)) (alias Some))", fillcolor=grey];
    subgraph "cluster_test/fixtures/types/patternMatching.lys_0" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      28 [label="PatternMatcherNode\n(alias boolean (native boolean))", fillcolor=grey];
      29 [label="Ref: a\n(alias i32 (native i32))", fillcolor=grey];
      30 [label="MatchLiteralNode\n(alias boolean (native boolean))", fillcolor=grey];
      31 [label="Int: 1\n(alias i32 (native i32))", fillcolor=grey];
      32 [label="BooleanLiteral\n(alias boolean (native boolean))", fillcolor=grey];
      33 [label="MatchDefaultNode\n(alias boolean (native boolean))", fillcolor=grey];
      34 [label="BooleanLiteral\n(alias boolean (native boolean))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::test(i32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys_1" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      35 [label="PatternMatcherNode\n(alias i32 (native i32))", fillcolor=grey];
      36 [label="Ref: a\n(alias i32 (native i32))", fillcolor=grey];
      37 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
      38 [label="Int: 10\n(alias i32 (native i32))", fillcolor=grey];
      39 [label="Int: 1\n(alias i32 (native i32))", fillcolor=grey];
      40 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
      41 [label="Int: 20\n(alias i32 (native i32))", fillcolor=grey];
      42 [label="Int: 2\n(alias i32 (native i32))", fillcolor=grey];
      43 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
      44 [label="Int: 30\n(alias i32 (native i32))", fillcolor=grey];
      45 [label="Int: 3\n(alias i32 (native i32))", fillcolor=grey];
      46 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
      47 [label="Int: 40\n(alias i32 (native i32))", fillcolor=grey];
      48 [label="Int: 4\n(alias i32 (native i32))", fillcolor=grey];
      49 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
      50 [label="Int: 50\n(alias i32 (native i32))", fillcolor=grey];
      51 [label="Int: 5\n(alias i32 (native i32))", fillcolor=grey];
      52 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
      53 [label="Int: 60\n(alias i32 (native i32))", fillcolor=grey];
      54 [label="Int: 6\n(alias i32 (native i32))", fillcolor=grey];
      55 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
      56 [label="Int: 70\n(alias i32 (native i32))", fillcolor=grey];
      57 [label="Int: 7\n(alias i32 (native i32))", fillcolor=grey];
      58 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
      59 [label="Int: 80\n(alias i32 (native i32))", fillcolor=grey];
      60 [label="Int: 8\n(alias i32 (native i32))", fillcolor=grey];
      61 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
      62 [label="Int: 90\n(alias i32 (native i32))", fillcolor=grey];
      63 [label="Int: 9\n(alias i32 (native i32))", fillcolor=grey];
      64 [label="MatchDefaultNode\n(alias i32 (native i32))", fillcolor=grey];
      65 [label="Int: 0\n(alias i32 (native i32))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::test2(i32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys_2" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      66 [label="PatternMatcherNode\n(alias boolean (native boolean))", fillcolor=grey];
      67 [label="Ref: a\n(alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>))))", fillcolor=grey];
      68 [label="MatchCaseIsNode\n(alias boolean (native boolean))", fillcolor=grey];
      69 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
      70 [label="BooleanLiteral\n(alias boolean (native boolean))", fillcolor=grey];
      71 [label="MatchCaseIsNode\n(alias boolean (native boolean))", fillcolor=grey];
      72 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
      73 [label="BooleanLiteral\n(alias boolean (native boolean))", fillcolor=grey];
      74 [label="TypeReducerNode\n(never)", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::test3(Maybe)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys_3" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      75 [label="PatternMatcherNode\n(alias Some (struct value:<null>))", fillcolor=grey];
      76 [label="Ref: a\n(alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>))))", fillcolor=grey];
      77 [label="MatchCaseIsNode\n(alias Some (struct value:<null>))", fillcolor=grey];
      78 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
      79 [label="Ref: x\n(alias Some (struct value:<null>))", fillcolor=grey];
      80 [label="Name: x\n(alias Some (struct value:<null>))", fillcolor=grey];
      81 [label="MatchCaseIsNode\n(alias Some (struct value:<null>))", fillcolor=grey];
      82 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
      83 [label="FunctionCallNode\n(alias Some (struct value:<null>))", fillcolor=grey];
      84 [label="MemberNode\n(fun 'apply' ((alias i32)) (alias Some))", fillcolor=grey];
      85 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
      86 [label="Int: 0\n(alias i32 (native i32))", fillcolor=grey];
      87 [label="TypeReducerNode\n(never)", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::test4(Maybe)";
    }
    label="test/fixtures/types/patternMatching.lys";
  }
  subgraph "cluster_<no-document>" {
    88 [label="UnionTypeNode\n(type (union (alias None (struct)) (alias Some (struct value:<null>))))", fillcolor=grey];
    89 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
    90 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
    subgraph "cluster_<no-document>_0" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      91 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      92 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::test(i32)";
    }
    subgraph "cluster_<no-document>_1" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      93 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      94 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      95 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      96 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      97 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      98 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      99 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      100 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      101 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      102 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::test2(i32)";
    }
    subgraph "cluster_<no-document>_2" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      103 [label="Name: $\n(alias Some (struct value:<null>))", fillcolor=grey];
      104 [label="TypeReducerNode\n(union (alias None (struct)) (alias Some (struct value:<null>)))", fillcolor=grey];
      105 [label="Name: $\n(alias None (struct))", fillcolor=grey];
      106 [label="TypeReducerNode\n(alias None (struct))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::test3(Maybe)";
    }
    subgraph "cluster_<no-document>_3" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      107 [label="TypeReducerNode\n(union (alias None (struct)) (alias Some (struct value:<null>)))", fillcolor=grey];
      108 [label="Name: $\n(alias None (struct))", fillcolor=grey];
      109 [label="TypeReducerNode\n(alias None (struct))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::test4(Maybe)";
    }
    label="<no-document>";
  }
  subgraph "cluster_test/fixtures/types/patternMatching.lys#Maybe" {
    110 [label="FunOverload: is\n(fun 'is' ((union (alias Maybe) (alias ref))) (alias boolean))", fillcolor=grey];
    111 [label="FunNode: is\n(fun 'is' ((union (alias Maybe) (alias ref))) (alias boolean))", fillcolor=grey];
    112 [label="Name: a\n(union (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))) (alias ref (ref ?)))", fillcolor=grey];
    113 [label="UnionTypeNode\n(type (union (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))) (alias ref (ref ?))))", fillcolor=grey];
    114 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))))", fillcolor=grey];
    115 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    116 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    117 [label="Name: is\n(fun 'is' ((union (alias Maybe) (alias ref))) (alias boolean))", fillcolor=grey];
    118 [label="FunOverload: as\n(fun 'as' ((alias Maybe)) (alias ref))", fillcolor=grey];
    119 [label="FunNode: as\n(fun 'as' ((alias Maybe)) (alias ref))", fillcolor=grey];
    120 [label="Name: a\n(alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>))))", fillcolor=grey];
    121 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))))", fillcolor=grey];
    122 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    123 [label="Name: as\n(fun 'as' ((alias Maybe)) (alias ref))", fillcolor=grey];
    124 [label="FunOverload: ==\n(fun '==' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
    125 [label="FunNode: ==\n(fun '==' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
    126 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    127 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    128 [label="Name: rhs\n(alias ref (ref ?))", fillcolor=grey];
    129 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    130 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    131 [label="Name: ==\n(fun '==' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
    132 [label="FunOverload: !=\n(fun '!=' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
    133 [label="FunNode: !=\n(fun '!=' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
    134 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    135 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    136 [label="Name: rhs\n(alias ref (ref ?))", fillcolor=grey];
    137 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    138 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    139 [label="Name: !=\n(fun '!=' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
    140 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias Maybe) (alias u32)) (alias void))", fillcolor=grey];
    141 [label="FunNode: store\n(fun 'store' ((alias ref) (alias Maybe) (alias u32)) (alias void))", fillcolor=grey];
    142 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    143 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    144 [label="Name: rhs\n(alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>))))", fillcolor=grey];
    145 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))))", fillcolor=grey];
    146 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
    147 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    148 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    149 [label="Name: store\n(fun 'store' ((alias ref) (alias Maybe) (alias u32)) (alias void))", fillcolor=grey];
    150 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias u32)) (alias Maybe))", fillcolor=grey];
    151 [label="FunNode: load\n(fun 'load' ((alias ref) (alias u32)) (alias Maybe))", fillcolor=grey];
    152 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    153 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    154 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
    155 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    156 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))))", fillcolor=grey];
    157 [label="Name: load\n(fun 'load' ((alias ref) (alias u32)) (alias Maybe))", fillcolor=grey];
    158 [label="FunOverload: as\n(intersection (fun 'as' ((alias None)) (alias Maybe)) (fun 'as' ((alias None)) (alias ref)))", fillcolor=grey];
    159 [label="FunNode: as\n(fun 'as' ((alias None)) (alias Maybe))", fillcolor=grey];
    160 [label="Name: lhs\n(alias None (struct))", fillcolor=grey];
    161 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
    162 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))))", fillcolor=grey];
    163 [label="Name: as\n(intersection (fun 'as' ((alias None)) (alias Maybe)) (fun 'as' ((alias None)) (alias ref)))", fillcolor=grey];
    164 [label="FunOverload: as\n(intersection (fun 'as' ((alias Some)) (alias Maybe)) (fun 'as' ((alias Some)) (alias ref)))", fillcolor=grey];
    165 [label="FunNode: as\n(fun 'as' ((alias Some)) (alias Maybe))", fillcolor=grey];
    166 [label="Name: lhs\n(alias Some (struct value:<null>))", fillcolor=grey];
    167 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
    168 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))))", fillcolor=grey];
    169 [label="Name: as\n(intersection (fun 'as' ((alias Some)) (alias Maybe)) (fun 'as' ((alias Some)) (alias ref)))", fillcolor=grey];
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Maybe_0" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      170 [label="BinOp: ==\n(alias boolean (native boolean))", fillcolor=grey];
      171 [label="Ref: lhs\n(alias ref (ref ?))", fillcolor=grey];
      172 [label="Ref: rhs\n(alias ref (ref ?))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Maybe.==(ref,ref)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Maybe_1" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      173 [label="BinOp: !=\n(alias boolean (native boolean))", fillcolor=grey];
      174 [label="Ref: lhs\n(alias ref (ref ?))", fillcolor=grey];
      175 [label="Ref: rhs\n(alias ref (ref ?))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Maybe.!=(ref,ref)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Maybe_2" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      176 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      177 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Maybe.load(ref,u32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Maybe_3" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      178 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::None.as(None)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Maybe_4" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      179 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.as(Some)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Maybe_5" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      180 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Maybe.as(Maybe)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Maybe_6" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      181 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      182 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Maybe.store(ref,Maybe,u32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Maybe_7" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::test3(Maybe)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Maybe_8" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      183 [label="BlockNode\n(alias boolean (native boolean))", fillcolor=grey];
      184 [label="BinOp: ||\n(alias boolean (native boolean))", fillcolor=grey];
      185 [label="IsExpressionNode\n(alias boolean (native boolean))", fillcolor=grey];
      186 [label="Ref: a\n(union (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))) (alias ref (ref ?)))", fillcolor=grey];
      187 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
      188 [label="IsExpressionNode\n(alias boolean (native boolean))", fillcolor=grey];
      189 [label="Ref: a\n(union (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))) (alias ref (ref ?)))", fillcolor=grey];
      190 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Maybe.is(Maybe | ref)";
    }
    label="test/fixtures/types/patternMatching.lys#Maybe";
  }
  subgraph "cluster_test/fixtures/types/patternMatching.lys#None" {
    191 [label="FunNode: as\n(fun 'as' ((alias None)) (alias ref))", fillcolor=grey];
    192 [label="Name: lhs\n(alias None (struct))", fillcolor=grey];
    193 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
    194 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    195 [label="FunOverload: None$discriminant\n(fun 'None$discriminant' () (alias i64))", fillcolor=grey];
    196 [label="FunNode: None$discriminant\n(fun 'None$discriminant' () (alias i64))", fillcolor=grey];
    197 [label="Ref: i64\n(type (alias i64 (native i64)))", fillcolor=grey];
    198 [label="Name: None$discriminant\n(fun 'None$discriminant' () (alias i64))", fillcolor=grey];
    199 [label="FunOverload: apply\n(fun 'apply' () (alias None))", fillcolor=grey];
    200 [label="FunNode: apply\n(fun 'apply' () (alias None))", fillcolor=grey];
    201 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
    202 [label="Name: apply\n(fun 'apply' () (alias None))", fillcolor=grey];
    203 [label="FunOverload: is\n(fun 'is' ((union (alias None) (alias ref))) (alias boolean))", fillcolor=grey];
    204 [label="FunNode: is\n(fun 'is' ((union (alias None) (alias ref))) (alias boolean))", fillcolor=grey];
    205 [label="Name: a\n(union (alias None (struct)) (alias ref (ref ?)))", fillcolor=grey];
    206 [label="UnionTypeNode\n(type (union (alias None (struct)) (alias ref (ref ?))))", fillcolor=grey];
    207 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
    208 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    209 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    210 [label="Name: is\n(fun 'is' ((union (alias None) (alias ref))) (alias boolean))", fillcolor=grey];
    211 [label="FunOverload: ==\n(fun '==' ((alias None) (alias ref)) (alias boolean))", fillcolor=grey];
    212 [label="FunNode: ==\n(fun '==' ((alias None) (alias ref)) (alias boolean))", fillcolor=grey];
    213 [label="Name: a\n(alias None (struct))", fillcolor=grey];
    214 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
    215 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
    216 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    217 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    218 [label="Name: ==\n(fun '==' ((alias None) (alias ref)) (alias boolean))", fillcolor=grey];
    219 [label="FunOverload: !=\n(fun '!=' ((alias None) (alias ref)) (alias boolean))", fillcolor=grey];
    220 [label="FunNode: !=\n(fun '!=' ((alias None) (alias ref)) (alias boolean))", fillcolor=grey];
    221 [label="Name: a\n(alias None (struct))", fillcolor=grey];
    222 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
    223 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
    224 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    225 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    226 [label="Name: !=\n(fun '!=' ((alias None) (alias ref)) (alias boolean))", fillcolor=grey];
    227 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias None) (alias u32)) (alias void))", fillcolor=grey];
    228 [label="FunNode: store\n(fun 'store' ((alias ref) (alias None) (alias u32)) (alias void))", fillcolor=grey];
    229 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    230 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    231 [label="Name: rhs\n(alias None (struct))", fillcolor=grey];
    232 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
    233 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
    234 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    235 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    236 [label="Name: store\n(fun 'store' ((alias ref) (alias None) (alias u32)) (alias void))", fillcolor=grey];
    237 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias u32)) (alias None))", fillcolor=grey];
    238 [label="FunNode: load\n(fun 'load' ((alias ref) (alias u32)) (alias None))", fillcolor=grey];
    239 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    240 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    241 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
    242 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    243 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
    244 [label="Name: load\n(fun 'load' ((alias ref) (alias u32)) (alias None))", fillcolor=grey];
    subgraph "cluster_test/fixtures/types/patternMatching.lys#None_0" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      245 [label="BlockNode\n(alias i64 (native i64))", fillcolor=grey];
      246 [label="ValDecl: discriminant\n(native void)", fillcolor=grey];
      247 [label="Name: discriminant\n(alias u32 (native u32))", fillcolor=grey];
      248 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
      249 [label="MemberNode\n(native u32)", fillcolor=grey];
      250 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
      251 [label="BinOp: <<\n(alias i64 (native i64))", fillcolor=grey];
      252 [label="AsExpressionNode\n(alias i64 (native i64))", fillcolor=grey];
      253 [label="Ref: discriminant\n(alias u32 (native u32))", fillcolor=grey];
      254 [label="Ref: i64\n(type (alias i64 (native i64)))", fillcolor=grey];
      255 [label="Int: 32\n(alias i32 (native i32))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::None.None$discriminant()";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#None_1" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      256 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      257 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::None.load(ref,u32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#None_2" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      258 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      259 [label="Ref: None$discriminant\n(fun 'None$discriminant' () (alias i64))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::None.apply()";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#None_3" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      260 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::None.as_1(None)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#None_4" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      261 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::None.==(None,ref)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#None_5" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      262 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::None.!=(None,ref)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#None_6" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      263 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      264 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::None.store(ref,None,u32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#None_7" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      265 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      266 [label="Ref: None$discriminant\n(fun 'None$discriminant' () (alias i64))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::None.is(None | ref)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#None_8" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::test3(Maybe)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#None_9" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      label="child";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#None_10" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      label="expression";
    }
    label="test/fixtures/types/patternMatching.lys#None";
  }
  subgraph "cluster_test/fixtures/types/patternMatching.lys#Some" {
    267 [label="FunNode: as\n(fun 'as' ((alias Some)) (alias ref))", fillcolor=grey];
    268 [label="Name: lhs\n(alias Some (struct value:<null>))", fillcolor=grey];
    269 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
    270 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    271 [label="FunOverload: Some$discriminant\n(fun 'Some$discriminant' () (alias u64))", fillcolor=grey];
    272 [label="FunNode: Some$discriminant\n(fun 'Some$discriminant' () (alias u64))", fillcolor=grey];
    273 [label="Ref: u64\n(type (alias u64 (native u64)))", fillcolor=grey];
    274 [label="Name: Some$discriminant\n(fun 'Some$discriminant' () (alias u64))", fillcolor=grey];
    275 [label="FunOverload: apply\n(fun 'apply' ((alias i32)) (alias Some))", fillcolor=grey];
    276 [label="FunNode: apply\n(fun 'apply' ((alias i32)) (alias Some))", fillcolor=grey];
    277 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
    278 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    279 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
    280 [label="Name: apply\n(fun 'apply' ((alias i32)) (alias Some))", fillcolor=grey];
    281 [label="FunOverload: fromPointer\n(fun 'fromPointer' ((alias u32)) (alias Some))", fillcolor=grey];
    282 [label="FunNode: fromPointer\n(fun 'fromPointer' ((alias u32)) (alias Some))", fillcolor=grey];
    283 [label="Name: ptr\n(alias u32 (native u32))", fillcolor=grey];
    284 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    285 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
    286 [label="Name: fromPointer\n(fun 'fromPointer' ((alias u32)) (alias Some))", fillcolor=grey];
    287 [label="FunOverload: ==\n(fun '==' ((alias Some) (alias Some)) (alias boolean))", fillcolor=grey];
    288 [label="FunNode: ==\n(fun '==' ((alias Some) (alias Some)) (alias boolean))", fillcolor=grey];
    289 [label="Name: a\n(alias Some (struct value:<null>))", fillcolor=grey];
    290 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
    291 [label="Name: b\n(alias Some (struct value:<null>))", fillcolor=grey];
    292 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
    293 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    294 [label="Name: ==\n(fun '==' ((alias Some) (alias Some)) (alias boolean))", fillcolor=grey];
    295 [label="FunOverload: !=\n(fun '!=' ((alias Some) (alias Some)) (alias boolean))", fillcolor=grey];
    296 [label="FunNode: !=\n(fun '!=' ((alias Some) (alias Some)) (alias boolean))", fillcolor=grey];
    297 [label="Name: a\n(alias Some (struct value:<null>))", fillcolor=grey];
    298 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
    299 [label="Name: b\n(alias Some (struct value:<null>))", fillcolor=grey];
    300 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
    301 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    302 [label="Name: !=\n(fun '!=' ((alias Some) (alias Some)) (alias boolean))", fillcolor=grey];
    303 [label="FunOverload: property_value\n(intersection (fun 'property_value' ((alias Some)) (alias i32)) (fun 'property_value' ((alias Some) (alias i32)) (alias void)))", fillcolor=grey];
    304 [label="FunNode: property_value\n(fun 'property_value' ((alias Some)) (alias i32))", fillcolor=grey];
    305 [label="Name: self\n(alias Some (struct value:<null>))", fillcolor=grey];
    306 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
    307 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    308 [label="FunNode: property_value\n(fun 'property_value' ((alias Some) (alias i32)) (alias void))", fillcolor=grey];
    309 [label="Name: self\n(alias Some (struct value:<null>))", fillcolor=grey];
    310 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
    311 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
    312 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    313 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    314 [label="Name: property_value\n(intersection (fun 'property_value' ((alias Some)) (alias i32)) (fun 'property_value' ((alias Some) (alias i32)) (alias void)))", fillcolor=grey];
    315 [label="FunOverload: property$0\n(intersection (fun 'property$0' ((alias Some)) (alias i32)) (fun 'property$0' ((alias Some) (alias i32)) (alias void)))", fillcolor=grey];
    316 [label="FunNode: property$0\n(fun 'property$0' ((alias Some)) (alias i32))", fillcolor=grey];
    317 [label="Name: self\n(alias Some (struct value:<null>))", fillcolor=grey];
    318 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
    319 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    320 [label="FunNode: property$0\n(fun 'property$0' ((alias Some) (alias i32)) (alias void))", fillcolor=grey];
    321 [label="Name: self\n(alias Some (struct value:<null>))", fillcolor=grey];
    322 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
    323 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
    324 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    325 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    326 [label="Name: property$0\n(intersection (fun 'property$0' ((alias Some)) (alias i32)) (fun 'property$0' ((alias Some) (alias i32)) (alias void)))", fillcolor=grey];
    327 [label="FunOverload: is\n(fun 'is' ((union (alias Some) (alias ref))) (alias boolean))", fillcolor=grey];
    328 [label="FunNode: is\n(fun 'is' ((union (alias Some) (alias ref))) (alias boolean))", fillcolor=grey];
    329 [label="Name: a\n(union (alias Some (struct value:<null>)) (alias ref (ref ?)))", fillcolor=grey];
    330 [label="UnionTypeNode\n(type (union (alias Some (struct value:<null>)) (alias ref (ref ?))))", fillcolor=grey];
    331 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
    332 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    333 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    334 [label="Name: is\n(fun 'is' ((union (alias Some) (alias ref))) (alias boolean))", fillcolor=grey];
    335 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias Some) (alias u32)) (alias void))", fillcolor=grey];
    336 [label="FunNode: store\n(fun 'store' ((alias ref) (alias Some) (alias u32)) (alias void))", fillcolor=grey];
    337 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    338 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    339 [label="Name: rhs\n(alias Some (struct value:<null>))", fillcolor=grey];
    340 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
    341 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
    342 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    343 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    344 [label="Name: store\n(fun 'store' ((alias ref) (alias Some) (alias u32)) (alias void))", fillcolor=grey];
    345 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias u32)) (alias Some))", fillcolor=grey];
    346 [label="FunNode: load\n(fun 'load' ((alias ref) (alias u32)) (alias Some))", fillcolor=grey];
    347 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    348 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    349 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
    350 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    351 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
    352 [label="Name: load\n(fun 'load' ((alias ref) (alias u32)) (alias Some))", fillcolor=grey];
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_0" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      353 [label="BlockNode\n(alias u64 (native u64))", fillcolor=grey];
      354 [label="ValDecl: discriminant\n(native void)", fillcolor=grey];
      355 [label="Name: discriminant\n(alias u32 (native u32))", fillcolor=grey];
      356 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
      357 [label="MemberNode\n(native u32)", fillcolor=grey];
      358 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
      359 [label="BinOp: <<\n(alias u64 (native u64))", fillcolor=grey];
      360 [label="AsExpressionNode\n(alias u64 (native u64))", fillcolor=grey];
      361 [label="Ref: discriminant\n(alias u32 (native u32))", fillcolor=grey];
      362 [label="Ref: u64\n(type (alias u64 (native u64)))", fillcolor=grey];
      363 [label="Int: 32\n(alias i32 (native i32))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.Some$discriminant()";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_1" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      364 [label="BlockNode\n(alias Some (struct value:<null>))", fillcolor=grey];
      365 [label="VarDecl: $ref\n(native void)", fillcolor=grey];
      366 [label="Name: $ref\n(alias Some (struct value:<null>))", fillcolor=grey];
      367 [label="FunctionCallNode\n(alias Some (struct value:<null>))", fillcolor=grey];
      368 [label="Ref: fromPointer\n(fun 'fromPointer' ((alias u32)) (alias Some))", fillcolor=grey];
      369 [label="FunctionCallNode\n(alias u32 (native u32))", fillcolor=grey];
      370 [label="Ref: system::memory::calloc\n(fun 'calloc' ((alias u32) (alias u32)) (alias u32))", fillcolor=grey];
      371 [label="AsExpressionNode\n(alias u32 (native u32))", fillcolor=grey];
      372 [label="Int: 1\n(alias i32 (native i32))", fillcolor=grey];
      373 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
      374 [label="MemberNode\n(native u32)", fillcolor=grey];
      375 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
      376 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
      377 [label="Ref: property$0\n(intersection (fun 'property$0' ((alias Some)) (alias i32)) (fun 'property$0' ((alias Some) (alias i32)) (alias void)))", fillcolor=grey];
      378 [label="Ref: $ref\n(alias Some (struct value:<null>))", fillcolor=grey];
      379 [label="Ref: value\n(alias i32 (native i32))", fillcolor=grey];
      380 [label="Ref: $ref\n(alias Some (struct value:<null>))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.apply(i32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_2" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      381 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      382 [label="Ref: Some$discriminant\n(fun 'Some$discriminant' () (alias u64))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.fromPointer(u32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_3" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      383 [label="FunctionCallNode\n(alias i32 (native i32))", fillcolor=grey];
      384 [label="MemberNode\n(intersection (fun 'load' ((alias ref)) (alias i32)) (fun 'load' ((alias ref) (alias u32)) (alias i32)))", fillcolor=grey];
      385 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
      386 [label="Ref: self\n(alias Some (struct value:<null>))", fillcolor=grey];
      387 [label="MemberNode\n(native u32)", fillcolor=grey];
      388 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.property$0(Some)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_4" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      389 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
      390 [label="MemberNode\n(intersection (fun 'store' ((alias ref) (alias i32)) (alias void)) (fun 'store' ((alias ref) (alias i32) (alias u32)) (alias void)))", fillcolor=grey];
      391 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
      392 [label="Ref: self\n(alias Some (struct value:<null>))", fillcolor=grey];
      393 [label="Ref: value\n(alias i32 (native i32))", fillcolor=grey];
      394 [label="MemberNode\n(native u32)", fillcolor=grey];
      395 [label="Ref: Some\n(type (alias Some (struct value:<null>)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.property$0_1(Some,i32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_5" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      396 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      397 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.load(ref,u32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_6" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      398 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.as_1(Some)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_7" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      399 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.==(Some,Some)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_8" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      400 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.!=(Some,Some)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_9" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      401 [label="FunctionCallNode\n(alias i32 (native i32))", fillcolor=grey];
      402 [label="Ref: property$0\n(intersection (fun 'property$0' ((alias Some)) (alias i32)) (fun 'property$0' ((alias Some) (alias i32)) (alias void)))", fillcolor=grey];
      403 [label="Ref: self\n(alias Some (struct value:<null>))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.property_value(Some)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_10" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      404 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
      405 [label="Ref: property$0\n(intersection (fun 'property$0' ((alias Some)) (alias i32)) (fun 'property$0' ((alias Some) (alias i32)) (alias void)))", fillcolor=grey];
      406 [label="Ref: self\n(alias Some (struct value:<null>))", fillcolor=grey];
      407 [label="Ref: value\n(alias i32 (native i32))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.property_value_1(Some,i32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_11" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      408 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      409 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.store(ref,Some,u32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_12" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      410 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      411 [label="Ref: Some$discriminant\n(fun 'Some$discriminant' () (alias u64))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.is(Some | ref)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_13" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::test3(Maybe)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_14" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      label="child";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_15" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      label="expression";
    }
    label="test/fixtures/types/patternMatching.lys#Some";
  }
  1 -> 114[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 121[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 145[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 156[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 162[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 168[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 19[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 25[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  88 -> 1[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  89 -> 88[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  90 -> 88[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  110 -> 117[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  111 -> 110[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  112 -> 111[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  112 -> 186[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  112 -> 189[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  113 -> 112[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  114 -> 113[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  115 -> 113[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  116 -> 111[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  118 -> 123[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  119 -> 118[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  120 -> 119[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  121 -> 120[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  122 -> 119[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  124 -> 131[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  125 -> 124[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  126 -> 125[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  126 -> 171[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  127 -> 126[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  128 -> 125[taillabel="[rhs]" fontsize=7 fontname="times" color="black" ];
  128 -> 172[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  129 -> 128[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  130 -> 125[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  132 -> 139[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  133 -> 132[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  134 -> 133[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  134 -> 174[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  135 -> 134[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  136 -> 133[taillabel="[rhs]" fontsize=7 fontname="times" color="black" ];
  136 -> 175[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  137 -> 136[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  138 -> 133[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  140 -> 149[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  141 -> 140[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  142 -> 141[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  143 -> 142[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  144 -> 141[taillabel="[rhs]" fontsize=7 fontname="times" color="black" ];
  145 -> 144[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  146 -> 141[taillabel="[offset]" fontsize=7 fontname="times" color="black" ];
  147 -> 146[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  148 -> 141[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  150 -> 157[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  151 -> 150[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  152 -> 151[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  153 -> 152[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  154 -> 151[taillabel="[offset]" fontsize=7 fontname="times" color="black" ];
  155 -> 154[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  156 -> 151[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  158 -> 163[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  159 -> 158[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  160 -> 159[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  161 -> 160[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  162 -> 159[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  191 -> 158[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  192 -> 191[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  193 -> 192[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  194 -> 191[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  195 -> 198[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  196 -> 195[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  197 -> 196[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  198 -> 259[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  198 -> 266[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  199 -> 202[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  200 -> 199[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  201 -> 200[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  203 -> 210[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  204 -> 203[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  205 -> 204[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  206 -> 205[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  207 -> 206[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  208 -> 206[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  209 -> 204[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  211 -> 218[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  212 -> 211[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  213 -> 212[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  214 -> 213[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  215 -> 212[taillabel="[b]" fontsize=7 fontname="times" color="black" ];
  216 -> 215[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  217 -> 212[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  219 -> 226[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  220 -> 219[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  221 -> 220[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  222 -> 221[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  223 -> 220[taillabel="[b]" fontsize=7 fontname="times" color="black" ];
  224 -> 223[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  225 -> 220[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  227 -> 236[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  228 -> 227[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  229 -> 228[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  230 -> 229[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  231 -> 228[taillabel="[rhs]" fontsize=7 fontname="times" color="black" ];
  232 -> 231[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  233 -> 228[taillabel="[offset]" fontsize=7 fontname="times" color="black" ];
  234 -> 233[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  235 -> 228[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  237 -> 244[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  238 -> 237[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  239 -> 238[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  240 -> 239[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  241 -> 238[taillabel="[offset]" fontsize=7 fontname="times" color="black" ];
  242 -> 241[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  243 -> 238[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  164 -> 169[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  165 -> 164[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  166 -> 165[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  167 -> 166[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  168 -> 165[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  267 -> 164[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  268 -> 267[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  269 -> 268[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  270 -> 267[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  271 -> 274[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  272 -> 271[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  273 -> 272[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  274 -> 382[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  274 -> 411[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  275 -> 280[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  276 -> 275[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  277 -> 276[taillabel="[value]" fontsize=7 fontname="times" color="black" ];
  277 -> 379[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  278 -> 277[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  279 -> 276[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  281 -> 286[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  282 -> 281[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  283 -> 282[taillabel="[ptr]" fontsize=7 fontname="times" color="black" ];
  284 -> 283[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  285 -> 282[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  286 -> 368[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  287 -> 294[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  288 -> 287[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  289 -> 288[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  290 -> 289[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  291 -> 288[taillabel="[b]" fontsize=7 fontname="times" color="black" ];
  292 -> 291[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  293 -> 288[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  295 -> 302[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  296 -> 295[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  297 -> 296[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  298 -> 297[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  299 -> 296[taillabel="[b]" fontsize=7 fontname="times" color="black" ];
  300 -> 299[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  301 -> 296[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  303 -> 314[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  304 -> 303[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  305 -> 304[taillabel="[self]" fontsize=7 fontname="times" color="black" ];
  305 -> 403[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  306 -> 305[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  307 -> 304[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  308 -> 303[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  309 -> 308[taillabel="[self]" fontsize=7 fontname="times" color="black" ];
  309 -> 406[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  310 -> 309[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  311 -> 308[taillabel="[value]" fontsize=7 fontname="times" color="black" ];
  311 -> 407[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  312 -> 311[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  313 -> 308[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  315 -> 326[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  316 -> 315[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  317 -> 316[taillabel="[self]" fontsize=7 fontname="times" color="black" ];
  317 -> 386[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  318 -> 317[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  319 -> 316[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  320 -> 315[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  321 -> 320[taillabel="[self]" fontsize=7 fontname="times" color="black" ];
  321 -> 392[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  322 -> 321[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  323 -> 320[taillabel="[value]" fontsize=7 fontname="times" color="black" ];
  323 -> 393[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  324 -> 323[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  325 -> 320[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  326 -> 377[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  326 -> 402[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  326 -> 405[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  327 -> 334[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  328 -> 327[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  329 -> 328[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  330 -> 329[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  331 -> 330[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  332 -> 330[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  333 -> 328[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  335 -> 344[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  336 -> 335[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  337 -> 336[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  338 -> 337[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  339 -> 336[taillabel="[rhs]" fontsize=7 fontname="times" color="black" ];
  340 -> 339[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  341 -> 336[taillabel="[offset]" fontsize=7 fontname="times" color="black" ];
  342 -> 341[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  343 -> 336[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  345 -> 352[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  346 -> 345[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  347 -> 346[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  348 -> 347[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  349 -> 346[taillabel="[offset]" fontsize=7 fontname="times" color="black" ];
  350 -> 349[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  351 -> 346[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  2 -> 89[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 161[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 193[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 201[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 207[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 214[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 222[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 232[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 243[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 250[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 72[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 82[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 187[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 90[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 167[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 269[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 279[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 285[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 290[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 292[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 298[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 300[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 306[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 310[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 318[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 322[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 331[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 340[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 351[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 26[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 358[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 375[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 388[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 395[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 69[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 78[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 85[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 190[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  4 -> 9[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  5 -> 4[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  6 -> 5[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  6 -> 29[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  7 -> 6[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  8 -> 5[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  10 -> 15[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  11 -> 10[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  12 -> 11[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  12 -> 36[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  13 -> 12[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  14 -> 11[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  16 -> 21[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  17 -> 16[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  18 -> 17[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  18 -> 67[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  19 -> 18[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  20 -> 17[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  22 -> 27[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  23 -> 22[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  24 -> 23[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  24 -> 76[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  25 -> 24[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  26 -> 23[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  171 -> 170[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  172 -> 170[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  174 -> 173[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  175 -> 173[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  246 -> 245[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  247 -> 253[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  248 -> 247[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  249 -> 247[taillabel="[DEFAULT_VALUE]" fontsize=7 fontname="times" color="black" ];
  250 -> 249[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  251 -> 245[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  252 -> 251[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  253 -> 252[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  254 -> 252[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  255 -> 251[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  354 -> 353[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  355 -> 361[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  356 -> 355[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  357 -> 355[taillabel="[DEFAULT_VALUE]" fontsize=7 fontname="times" color="black" ];
  358 -> 357[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  359 -> 353[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  360 -> 359[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  361 -> 360[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  362 -> 360[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  363 -> 359[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  29 -> 28[taillabel="[PATTERN_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  29 -> 91[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  30 -> 28[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  31 -> 30[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  32 -> 30[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  91 -> 30[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  91 -> 92[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  33 -> 28[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  34 -> 33[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  92 -> 33[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  36 -> 35[taillabel="[PATTERN_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  36 -> 93[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  37 -> 35[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  38 -> 37[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  39 -> 37[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  93 -> 37[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  93 -> 94[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  40 -> 35[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  41 -> 40[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  42 -> 40[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  94 -> 40[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  94 -> 95[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  43 -> 35[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  44 -> 43[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  45 -> 43[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  95 -> 43[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  95 -> 96[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  46 -> 35[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  47 -> 46[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  48 -> 46[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  96 -> 46[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  96 -> 97[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  49 -> 35[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  50 -> 49[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  51 -> 49[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  97 -> 49[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  97 -> 98[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  52 -> 35[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  53 -> 52[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  54 -> 52[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  98 -> 52[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  98 -> 99[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  55 -> 35[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  56 -> 55[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  57 -> 55[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  99 -> 55[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  99 -> 100[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  58 -> 35[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  59 -> 58[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  60 -> 58[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  100 -> 58[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  100 -> 101[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  61 -> 35[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  62 -> 61[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  63 -> 61[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  101 -> 61[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  101 -> 102[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  64 -> 35[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  65 -> 64[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  102 -> 64[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  365 -> 364[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  366 -> 378[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  366 -> 380[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  367 -> 366[taillabel="[DEFAULT_VALUE]" fontsize=7 fontname="times" color="black" ];
  368 -> 367[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  369 -> 367[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  370 -> 369[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  371 -> 369[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  372 -> 371[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  373 -> 371[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  374 -> 369[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  375 -> 374[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  376 -> 364[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  377 -> 376[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  378 -> 376[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  379 -> 376[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  380 -> 364[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  384 -> 383[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  385 -> 384[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  386 -> 383[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  387 -> 383[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  388 -> 387[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  390 -> 389[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  391 -> 390[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  392 -> 389[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  393 -> 389[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  394 -> 389[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  395 -> 394[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  402 -> 401[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  403 -> 401[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  405 -> 404[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  406 -> 404[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  407 -> 404[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  67 -> 66[taillabel="[PATTERN_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  67 -> 104[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  68 -> 66[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  69 -> 68[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  69 -> 103[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  69 -> 106[taillabel="[REMOVED_TYPE]" fontsize=7 fontname="times" color="black" ];
  70 -> 68[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  104 -> 68[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  104 -> 106[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  71 -> 66[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  72 -> 71[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  72 -> 105[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  72 -> 74[taillabel="[REMOVED_TYPE]" fontsize=7 fontname="times" color="black" ];
  73 -> 71[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  106 -> 71[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  106 -> 74[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  74 -> 66[taillabel="[REST_TYPE]" fontsize=7 fontname="times" color="black" ];
  76 -> 75[taillabel="[PATTERN_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  76 -> 107[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  77 -> 75[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  78 -> 77[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  78 -> 80[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  78 -> 109[taillabel="[REMOVED_TYPE]" fontsize=7 fontname="times" color="black" ];
  79 -> 77[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  80 -> 79[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  107 -> 77[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  107 -> 109[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  81 -> 75[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  82 -> 81[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  82 -> 108[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  82 -> 87[taillabel="[REMOVED_TYPE]" fontsize=7 fontname="times" color="black" ];
  83 -> 81[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  84 -> 83[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  85 -> 84[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  86 -> 83[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  109 -> 81[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  109 -> 87[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  87 -> 75[taillabel="[REST_TYPE]" fontsize=7 fontname="times" color="black" ];
  184 -> 183[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  185 -> 184[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  186 -> 185[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  187 -> 185[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  188 -> 184[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  189 -> 188[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  190 -> 188[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  label="LYS";
}
