digraph LYS {
  node [shape=box,fontsize=10];
  subgraph "cluster_test/fixtures/types/patternMatching.lys" {
    1 [label="Name: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32))))))))", fillcolor=grey];
    2 [label="Name: None\n(type (alias None (struct)))", fillcolor=grey];
    3 [label="Name: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
    4 [label="Name: value\n(type (alias i32 (native i32)))", fillcolor=grey];
    5 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    6 [label="FunOverload: test\n(fun 'test' ((alias i32)) (alias boolean))", fillcolor=grey];
    7 [label="FunNode: test\n(fun 'test' ((alias i32)) (alias boolean))", fillcolor=grey];
    8 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    9 [label="Name: a\n(alias i32 (native i32))", fillcolor=grey];
    10 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    11 [label="Name: test\n(fun 'test' ((alias i32)) (alias boolean))", fillcolor=grey];
    12 [label="FunOverload: test2\n(fun 'test2' ((alias i32)) (alias i32))", fillcolor=grey];
    13 [label="FunNode: test2\n(fun 'test2' ((alias i32)) (alias i32))", fillcolor=grey];
    14 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    15 [label="Name: a\n(alias i32 (native i32))", fillcolor=grey];
    16 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    17 [label="Name: test2\n(fun 'test2' ((alias i32)) (alias i32))", fillcolor=grey];
    18 [label="FunOverload: test3\n(fun 'test3' ((alias Maybe)) (alias boolean))", fillcolor=grey];
    19 [label="FunNode: test3\n(fun 'test3' ((alias Maybe)) (alias boolean))", fillcolor=grey];
    20 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32))))))))", fillcolor=grey];
    21 [label="Name: a\n(alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32)))))))", fillcolor=grey];
    22 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    23 [label="Name: test3\n(fun 'test3' ((alias Maybe)) (alias boolean))", fillcolor=grey];
    24 [label="FunOverload: test4\n(fun 'test4' ((alias Maybe)) (alias Some))", fillcolor=grey];
    25 [label="FunNode: test4\n(fun 'test4' ((alias Maybe)) (alias Some))", fillcolor=grey];
    26 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32))))))))", fillcolor=grey];
    27 [label="Name: a\n(alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32)))))))", fillcolor=grey];
    28 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
    29 [label="Name: test4\n(fun 'test4' ((alias Maybe)) (alias Some))", fillcolor=grey];
    subgraph "cluster_test/fixtures/types/patternMatching.lys_0" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      30 [label="Name: a\n(alias i32 (native i32))", fillcolor=grey];
      31 [label="PatternMatcherNode\n(alias boolean (native boolean))", fillcolor=grey];
      32 [label="Ref: a\n(alias i32 (native i32))", fillcolor=grey];
      33 [label="MatchLiteralNode\n(alias boolean (native boolean))", fillcolor=grey];
      34 [label="Int: 1\n(alias i32 (native i32))", fillcolor=grey];
      35 [label="BooleanLiteral\n(alias boolean (native boolean))", fillcolor=grey];
      36 [label="MatchDefaultNode\n(alias boolean (native boolean))", fillcolor=grey];
      37 [label="BooleanLiteral\n(alias boolean (native boolean))", fillcolor=grey];
      38 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::test(i32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys_1" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      39 [label="Name: a\n(alias i32 (native i32))", fillcolor=grey];
      40 [label="PatternMatcherNode\n(alias i32 (native i32))", fillcolor=grey];
      41 [label="Ref: a\n(alias i32 (native i32))", fillcolor=grey];
      42 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
      43 [label="Int: 10\n(alias i32 (native i32))", fillcolor=grey];
      44 [label="Int: 1\n(alias i32 (native i32))", fillcolor=grey];
      45 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
      46 [label="Int: 20\n(alias i32 (native i32))", fillcolor=grey];
      47 [label="Int: 2\n(alias i32 (native i32))", fillcolor=grey];
      48 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
      49 [label="Int: 30\n(alias i32 (native i32))", fillcolor=grey];
      50 [label="Int: 3\n(alias i32 (native i32))", fillcolor=grey];
      51 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
      52 [label="Int: 40\n(alias i32 (native i32))", fillcolor=grey];
      53 [label="Int: 4\n(alias i32 (native i32))", fillcolor=grey];
      54 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
      55 [label="Int: 50\n(alias i32 (native i32))", fillcolor=grey];
      56 [label="Int: 5\n(alias i32 (native i32))", fillcolor=grey];
      57 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
      58 [label="Int: 60\n(alias i32 (native i32))", fillcolor=grey];
      59 [label="Int: 6\n(alias i32 (native i32))", fillcolor=grey];
      60 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
      61 [label="Int: 70\n(alias i32 (native i32))", fillcolor=grey];
      62 [label="Int: 7\n(alias i32 (native i32))", fillcolor=grey];
      63 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
      64 [label="Int: 80\n(alias i32 (native i32))", fillcolor=grey];
      65 [label="Int: 8\n(alias i32 (native i32))", fillcolor=grey];
      66 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
      67 [label="Int: 90\n(alias i32 (native i32))", fillcolor=grey];
      68 [label="Int: 9\n(alias i32 (native i32))", fillcolor=grey];
      69 [label="MatchDefaultNode\n(alias i32 (native i32))", fillcolor=grey];
      70 [label="Int: 0\n(alias i32 (native i32))", fillcolor=grey];
      71 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::test2(i32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys_2" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      72 [label="Name: a\n(alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32)))))))", fillcolor=grey];
      73 [label="PatternMatcherNode\n(alias boolean (native boolean))", fillcolor=grey];
      74 [label="Ref: a\n(alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32)))))))", fillcolor=grey];
      75 [label="MatchCaseIsNode\n(alias boolean (native boolean))", fillcolor=grey];
      76 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
      77 [label="BooleanLiteral\n(alias boolean (native boolean))", fillcolor=grey];
      78 [label="MatchCaseIsNode\n(alias boolean (native boolean))", fillcolor=grey];
      79 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
      80 [label="BooleanLiteral\n(alias boolean (native boolean))", fillcolor=grey];
      81 [label="TypeReducerNode\n(never)", fillcolor=grey];
      82 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::test3(Maybe)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys_3" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      83 [label="Name: a\n(alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32)))))))", fillcolor=grey];
      84 [label="PatternMatcherNode\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      85 [label="Ref: a\n(alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32)))))))", fillcolor=grey];
      86 [label="MatchCaseIsNode\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      87 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
      88 [label="Ref: x\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      89 [label="Name: x\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      90 [label="MatchCaseIsNode\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      91 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
      92 [label="FunctionCallNode\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      93 [label="MemberNode\n(fun 'apply' ((alias i32)) (alias Some))", fillcolor=grey];
      94 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
      95 [label="Int: 0\n(alias i32 (native i32))", fillcolor=grey];
      96 [label="TypeReducerNode\n(never)", fillcolor=grey];
      97 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::test4(Maybe)";
    }
    label="test/fixtures/types/patternMatching.lys";
  }
  subgraph "cluster_<no-document>" {
    98 [label="UnionTypeNode\n(type (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32)))))))", fillcolor=grey];
    99 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
    100 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
    101 [label="StructTypeNode\n(type (struct))", fillcolor=grey];
    102 [label="StructTypeNode\n(type (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
    subgraph "cluster_<no-document>_0" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      103 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      104 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::test(i32)";
    }
    subgraph "cluster_<no-document>_1" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      105 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      106 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      107 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      108 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      109 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      110 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      111 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      112 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      113 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      114 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::test2(i32)";
    }
    subgraph "cluster_<no-document>_2" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      115 [label="Name: $\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      116 [label="TypeReducerNode\n(union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
      117 [label="Name: $\n(alias None (struct))", fillcolor=grey];
      118 [label="TypeReducerNode\n(alias None (struct))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::test3(Maybe)";
    }
    subgraph "cluster_<no-document>_3" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      119 [label="TypeReducerNode\n(union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
      120 [label="Name: $\n(alias None (struct))", fillcolor=grey];
      121 [label="TypeReducerNode\n(alias None (struct))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::test4(Maybe)";
    }
    label="<no-document>";
  }
  subgraph "cluster_test/fixtures/types/patternMatching.lys#Maybe" {
    122 [label="FunOverload: is\n(fun 'is' ((alias Maybe)) (alias boolean))", fillcolor=grey];
    123 [label="FunNode: is\n(fun 'is' ((alias Maybe)) (alias boolean))", fillcolor=grey];
    124 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32))))))))", fillcolor=grey];
    125 [label="Name: a\n(alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32)))))))", fillcolor=grey];
    126 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    127 [label="Name: is\n(fun 'is' ((alias Maybe)) (alias boolean))", fillcolor=grey];
    128 [label="FunOverload: ==\n(fun '==' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
    129 [label="FunNode: ==\n(fun '==' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
    130 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    131 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    132 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    133 [label="Name: rhs\n(alias ref (ref ?))", fillcolor=grey];
    134 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    135 [label="Name: ==\n(fun '==' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
    136 [label="FunOverload: !=\n(fun '!=' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
    137 [label="FunNode: !=\n(fun '!=' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
    138 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    139 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    140 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    141 [label="Name: rhs\n(alias ref (ref ?))", fillcolor=grey];
    142 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    143 [label="Name: !=\n(fun '!=' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
    144 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias Maybe) (alias u32)) (alias void))", fillcolor=grey];
    145 [label="FunNode: store\n(fun 'store' ((alias ref) (alias Maybe) (alias u32)) (alias void))", fillcolor=grey];
    146 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    147 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    148 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32))))))))", fillcolor=grey];
    149 [label="Name: rhs\n(alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32)))))))", fillcolor=grey];
    150 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    151 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
    152 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    153 [label="Name: store\n(fun 'store' ((alias ref) (alias Maybe) (alias u32)) (alias void))", fillcolor=grey];
    154 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias u32)) (alias Maybe))", fillcolor=grey];
    155 [label="FunNode: load\n(fun 'load' ((alias ref) (alias u32)) (alias Maybe))", fillcolor=grey];
    156 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    157 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    158 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    159 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
    160 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32))))))))", fillcolor=grey];
    161 [label="Name: load\n(fun 'load' ((alias ref) (alias u32)) (alias Maybe))", fillcolor=grey];
    162 [label="FunOverload: as\n(fun 'as' ((alias Maybe)) (alias ref))", fillcolor=grey];
    163 [label="FunNode: as\n(fun 'as' ((alias Maybe)) (alias ref))", fillcolor=grey];
    164 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32))))))))", fillcolor=grey];
    165 [label="Name: a\n(alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32)))))))", fillcolor=grey];
    166 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    167 [label="Name: as\n(fun 'as' ((alias Maybe)) (alias ref))", fillcolor=grey];
    168 [label="FunOverload: as\n(fun 'as' ((alias None)) (alias Maybe))", fillcolor=grey];
    169 [label="FunNode: as\n(fun 'as' ((alias None)) (alias Maybe))", fillcolor=grey];
    170 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
    171 [label="Name: a\n(alias None (struct))", fillcolor=grey];
    172 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32))))))))", fillcolor=grey];
    173 [label="Name: as\n(fun 'as' ((alias None)) (alias Maybe))", fillcolor=grey];
    174 [label="FunOverload: as\n(fun 'as' ((alias Some)) (alias Maybe))", fillcolor=grey];
    175 [label="FunNode: as\n(fun 'as' ((alias Some)) (alias Maybe))", fillcolor=grey];
    176 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
    177 [label="Name: a\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
    178 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32))))))))", fillcolor=grey];
    179 [label="Name: as\n(fun 'as' ((alias Some)) (alias Maybe))", fillcolor=grey];
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Maybe_0" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      180 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
      181 [label="Name: rhs\n(alias ref (ref ?))", fillcolor=grey];
      182 [label="BinOp: ==\n(alias boolean (native boolean))", fillcolor=grey];
      183 [label="Ref: lhs\n(alias ref (ref ?))", fillcolor=grey];
      184 [label="Ref: rhs\n(alias ref (ref ?))", fillcolor=grey];
      185 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Maybe.==(ref,ref)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Maybe_1" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      186 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
      187 [label="Name: rhs\n(alias ref (ref ?))", fillcolor=grey];
      188 [label="BinOp: !=\n(alias boolean (native boolean))", fillcolor=grey];
      189 [label="Ref: lhs\n(alias ref (ref ?))", fillcolor=grey];
      190 [label="Ref: rhs\n(alias ref (ref ?))", fillcolor=grey];
      191 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Maybe.!=(ref,ref)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Maybe_2" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      192 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
      193 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
      194 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      195 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
      196 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32))))))))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Maybe.load(ref,u32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Maybe_3" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      197 [label="Name: a\n(alias None (struct))", fillcolor=grey];
      198 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      199 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32))))))))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::None.as(None)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Maybe_4" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      200 [label="Name: a\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      201 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      202 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32))))))))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.as(Some)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Maybe_5" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      203 [label="Name: a\n(alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32)))))))", fillcolor=grey];
      204 [label="BlockNode\n(alias boolean (native boolean))", fillcolor=grey];
      205 [label="BinOp: ||\n(alias boolean (native boolean))", fillcolor=grey];
      206 [label="IsExpressionNode\n(alias boolean (native boolean))", fillcolor=grey];
      207 [label="Ref: a\n(alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32)))))))", fillcolor=grey];
      208 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
      209 [label="IsExpressionNode\n(alias boolean (native boolean))", fillcolor=grey];
      210 [label="Ref: a\n(alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32)))))))", fillcolor=grey];
      211 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
      212 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Maybe.is(Maybe)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Maybe_6" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      213 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
      214 [label="Name: rhs\n(alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32)))))))", fillcolor=grey];
      215 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
      216 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      217 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
      218 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Maybe.store(ref,Maybe,u32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Maybe_7" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      219 [label="Name: a\n(alias Maybe (union (alias None (struct)) (alias Some (struct value:(type (alias i32 (native i32)))))))", fillcolor=grey];
      220 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      221 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Maybe.as(Maybe)";
    }
    label="test/fixtures/types/patternMatching.lys#Maybe";
  }
  subgraph "cluster_test/fixtures/types/patternMatching.lys#None" {
    222 [label="FunOverload: None$discriminant\n(fun 'None$discriminant' () (alias i64))", fillcolor=grey];
    223 [label="FunNode: None$discriminant\n(fun 'None$discriminant' () (alias i64))", fillcolor=grey];
    224 [label="Ref: i64\n(type (alias i64 (native i64)))", fillcolor=grey];
    225 [label="Name: None$discriminant\n(fun 'None$discriminant' () (alias i64))", fillcolor=grey];
    226 [label="FunOverload: apply\n(fun 'apply' () (alias None))", fillcolor=grey];
    227 [label="FunNode: apply\n(fun 'apply' () (alias None))", fillcolor=grey];
    228 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
    229 [label="Name: apply\n(fun 'apply' () (alias None))", fillcolor=grey];
    230 [label="FunOverload: is\n(fun 'is' ((alias None)) (alias boolean))", fillcolor=grey];
    231 [label="FunNode: is\n(fun 'is' ((alias None)) (alias boolean))", fillcolor=grey];
    232 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
    233 [label="Name: a\n(alias None (struct))", fillcolor=grey];
    234 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    235 [label="Name: is\n(fun 'is' ((alias None)) (alias boolean))", fillcolor=grey];
    236 [label="FunOverload: ==\n(fun '==' ((alias None) (alias ref)) (alias boolean))", fillcolor=grey];
    237 [label="FunNode: ==\n(fun '==' ((alias None) (alias ref)) (alias boolean))", fillcolor=grey];
    238 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
    239 [label="Name: a\n(alias None (struct))", fillcolor=grey];
    240 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    241 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
    242 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    243 [label="Name: ==\n(fun '==' ((alias None) (alias ref)) (alias boolean))", fillcolor=grey];
    244 [label="FunOverload: !=\n(fun '!=' ((alias None) (alias ref)) (alias boolean))", fillcolor=grey];
    245 [label="FunNode: !=\n(fun '!=' ((alias None) (alias ref)) (alias boolean))", fillcolor=grey];
    246 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
    247 [label="Name: a\n(alias None (struct))", fillcolor=grey];
    248 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    249 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
    250 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    251 [label="Name: !=\n(fun '!=' ((alias None) (alias ref)) (alias boolean))", fillcolor=grey];
    252 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias None) (alias u32)) (alias void))", fillcolor=grey];
    253 [label="FunNode: store\n(fun 'store' ((alias ref) (alias None) (alias u32)) (alias void))", fillcolor=grey];
    254 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    255 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    256 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
    257 [label="Name: rhs\n(alias None (struct))", fillcolor=grey];
    258 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    259 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
    260 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    261 [label="Name: store\n(fun 'store' ((alias ref) (alias None) (alias u32)) (alias void))", fillcolor=grey];
    262 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias u32)) (alias None))", fillcolor=grey];
    263 [label="FunNode: load\n(fun 'load' ((alias ref) (alias u32)) (alias None))", fillcolor=grey];
    264 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    265 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    266 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    267 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
    268 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
    269 [label="Name: load\n(fun 'load' ((alias ref) (alias u32)) (alias None))", fillcolor=grey];
    subgraph "cluster_test/fixtures/types/patternMatching.lys#None_0" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      270 [label="BlockNode\n(alias i64 (native i64))", fillcolor=grey];
      271 [label="ValDecl: discriminant\n(native void)", fillcolor=grey];
      272 [label="Name: discriminant\n(alias u32 (native u32))", fillcolor=grey];
      273 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
      274 [label="MemberNode\n(native u32)", fillcolor=grey];
      275 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
      276 [label="BinOp: <<\n(alias i64 (native i64))", fillcolor=grey];
      277 [label="AsExpressionNode\n(alias i64 (native i64))", fillcolor=grey];
      278 [label="Ref: discriminant\n(alias u32 (native u32))", fillcolor=grey];
      279 [label="Ref: i64\n(type (alias i64 (native i64)))", fillcolor=grey];
      280 [label="Int: 32\n(alias i32 (native i32))", fillcolor=grey];
      281 [label="Ref: i64\n(type (alias i64 (native i64)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::None.None$discriminant()";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#None_1" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      282 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
      283 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
      284 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      285 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
      286 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::None.load(ref,u32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#None_2" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      287 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      288 [label="Ref: None$discriminant\n(fun 'None$discriminant' () (alias i64))", fillcolor=grey];
      289 [label="Ref: None\n(type (alias None (struct)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::None.apply()";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#None_3" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      290 [label="Name: a\n(alias None (struct))", fillcolor=grey];
      291 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      292 [label="Ref: None$discriminant\n(fun 'None$discriminant' () (alias i64))", fillcolor=grey];
      293 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::None.is(None)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#None_4" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      294 [label="Name: a\n(alias None (struct))", fillcolor=grey];
      295 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
      296 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      297 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::None.==(None,ref)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#None_5" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      298 [label="Name: a\n(alias None (struct))", fillcolor=grey];
      299 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
      300 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      301 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::None.!=(None,ref)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#None_6" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      302 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
      303 [label="Name: rhs\n(alias None (struct))", fillcolor=grey];
      304 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
      305 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      306 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
      307 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::None.store(ref,None,u32)";
    }
    label="test/fixtures/types/patternMatching.lys#None";
  }
  subgraph "cluster_test/fixtures/types/patternMatching.lys#Some" {
    308 [label="FunOverload: Some$discriminant\n(fun 'Some$discriminant' () (alias u64))", fillcolor=grey];
    309 [label="FunNode: Some$discriminant\n(fun 'Some$discriminant' () (alias u64))", fillcolor=grey];
    310 [label="Ref: u64\n(type (alias u64 (native u64)))", fillcolor=grey];
    311 [label="Name: Some$discriminant\n(fun 'Some$discriminant' () (alias u64))", fillcolor=grey];
    312 [label="FunOverload: apply\n(fun 'apply' ((alias i32)) (alias Some))", fillcolor=grey];
    313 [label="FunNode: apply\n(fun 'apply' ((alias i32)) (alias Some))", fillcolor=grey];
    314 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    315 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
    316 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
    317 [label="Name: apply\n(fun 'apply' ((alias i32)) (alias Some))", fillcolor=grey];
    318 [label="FunOverload: fromPointer\n(fun 'fromPointer' ((alias u32)) (alias Some))", fillcolor=grey];
    319 [label="FunNode: fromPointer\n(fun 'fromPointer' ((alias u32)) (alias Some))", fillcolor=grey];
    320 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    321 [label="Name: ptr\n(alias u32 (native u32))", fillcolor=grey];
    322 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
    323 [label="Name: fromPointer\n(fun 'fromPointer' ((alias u32)) (alias Some))", fillcolor=grey];
    324 [label="FunOverload: ==\n(fun '==' ((alias Some) (alias Some)) (alias boolean))", fillcolor=grey];
    325 [label="FunNode: ==\n(fun '==' ((alias Some) (alias Some)) (alias boolean))", fillcolor=grey];
    326 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
    327 [label="Name: a\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
    328 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
    329 [label="Name: b\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
    330 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    331 [label="Name: ==\n(fun '==' ((alias Some) (alias Some)) (alias boolean))", fillcolor=grey];
    332 [label="FunOverload: !=\n(fun '!=' ((alias Some) (alias Some)) (alias boolean))", fillcolor=grey];
    333 [label="FunNode: !=\n(fun '!=' ((alias Some) (alias Some)) (alias boolean))", fillcolor=grey];
    334 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
    335 [label="Name: a\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
    336 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
    337 [label="Name: b\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
    338 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    339 [label="Name: !=\n(fun '!=' ((alias Some) (alias Some)) (alias boolean))", fillcolor=grey];
    340 [label="FunOverload: property_value\n(intersection (fun 'property_value' ((alias Some)) (alias i32)) (fun 'property_value' ((alias Some) (alias i32)) (alias void)))", fillcolor=grey];
    341 [label="FunNode: property_value\n(fun 'property_value' ((alias Some)) (alias i32))", fillcolor=grey];
    342 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
    343 [label="Name: self\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
    344 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    345 [label="FunNode: property_value\n(fun 'property_value' ((alias Some) (alias i32)) (alias void))", fillcolor=grey];
    346 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
    347 [label="Name: self\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
    348 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    349 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
    350 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    351 [label="Name: property_value\n(intersection (fun 'property_value' ((alias Some)) (alias i32)) (fun 'property_value' ((alias Some) (alias i32)) (alias void)))", fillcolor=grey];
    352 [label="FunOverload: property$0\n(intersection (fun 'property$0' ((alias Some)) (alias i32)) (fun 'property$0' ((alias Some) (alias i32)) (alias void)))", fillcolor=grey];
    353 [label="FunNode: property$0\n(fun 'property$0' ((alias Some)) (alias i32))", fillcolor=grey];
    354 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
    355 [label="Name: self\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
    356 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    357 [label="FunNode: property$0\n(fun 'property$0' ((alias Some) (alias i32)) (alias void))", fillcolor=grey];
    358 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
    359 [label="Name: self\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
    360 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    361 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
    362 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    363 [label="Name: property$0\n(intersection (fun 'property$0' ((alias Some)) (alias i32)) (fun 'property$0' ((alias Some) (alias i32)) (alias void)))", fillcolor=grey];
    364 [label="FunOverload: is\n(fun 'is' ((alias Some)) (alias boolean))", fillcolor=grey];
    365 [label="FunNode: is\n(fun 'is' ((alias Some)) (alias boolean))", fillcolor=grey];
    366 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
    367 [label="Name: a\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
    368 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    369 [label="Name: is\n(fun 'is' ((alias Some)) (alias boolean))", fillcolor=grey];
    370 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias Some) (alias u32)) (alias void))", fillcolor=grey];
    371 [label="FunNode: store\n(fun 'store' ((alias ref) (alias Some) (alias u32)) (alias void))", fillcolor=grey];
    372 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    373 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    374 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
    375 [label="Name: rhs\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
    376 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    377 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
    378 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    379 [label="Name: store\n(fun 'store' ((alias ref) (alias Some) (alias u32)) (alias void))", fillcolor=grey];
    380 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias u32)) (alias Some))", fillcolor=grey];
    381 [label="FunNode: load\n(fun 'load' ((alias ref) (alias u32)) (alias Some))", fillcolor=grey];
    382 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    383 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    384 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    385 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
    386 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
    387 [label="Name: load\n(fun 'load' ((alias ref) (alias u32)) (alias Some))", fillcolor=grey];
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_0" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      388 [label="BlockNode\n(alias u64 (native u64))", fillcolor=grey];
      389 [label="ValDecl: discriminant\n(native void)", fillcolor=grey];
      390 [label="Name: discriminant\n(alias u32 (native u32))", fillcolor=grey];
      391 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
      392 [label="MemberNode\n(native u32)", fillcolor=grey];
      393 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
      394 [label="BinOp: <<\n(alias u64 (native u64))", fillcolor=grey];
      395 [label="AsExpressionNode\n(alias u64 (native u64))", fillcolor=grey];
      396 [label="Ref: discriminant\n(alias u32 (native u32))", fillcolor=grey];
      397 [label="Ref: u64\n(type (alias u64 (native u64)))", fillcolor=grey];
      398 [label="Int: 32\n(alias i32 (native i32))", fillcolor=grey];
      399 [label="Ref: u64\n(type (alias u64 (native u64)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.Some$discriminant()";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_1" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      400 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
      401 [label="BlockNode\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      402 [label="VarDecl: $ref\n(native void)", fillcolor=grey];
      403 [label="Name: $ref\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      404 [label="FunctionCallNode\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      405 [label="Ref: fromPointer\n(fun 'fromPointer' ((alias u32)) (alias Some))", fillcolor=grey];
      406 [label="FunctionCallNode\n(alias u32 (native u32))", fillcolor=grey];
      407 [label="Ref: system::memory::calloc\n(fun 'calloc' ((alias u32) (alias u32)) (alias u32))", fillcolor=grey];
      408 [label="AsExpressionNode\n(alias u32 (native u32))", fillcolor=grey];
      409 [label="Int: 1\n(alias i32 (native i32))", fillcolor=grey];
      410 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
      411 [label="MemberNode\n(native u32)", fillcolor=grey];
      412 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
      413 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
      414 [label="Ref: property$0\n(intersection (fun 'property$0' ((alias Some)) (alias i32)) (fun 'property$0' ((alias Some) (alias i32)) (alias void)))", fillcolor=grey];
      415 [label="Ref: $ref\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      416 [label="Ref: value\n(alias i32 (native i32))", fillcolor=grey];
      417 [label="Ref: $ref\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      418 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.apply(i32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_2" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      419 [label="Name: ptr\n(alias u32 (native u32))", fillcolor=grey];
      420 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      421 [label="Ref: Some$discriminant\n(fun 'Some$discriminant' () (alias u64))", fillcolor=grey];
      422 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.fromPointer(u32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_3" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      423 [label="Name: self\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
      424 [label="FunctionCallNode\n(alias i32 (native i32))", fillcolor=grey];
      425 [label="MemberNode\n(intersection (fun 'load' ((alias ref)) (alias i32)) (fun 'load' ((alias ref) (alias u32)) (alias i32)))", fillcolor=grey];
      426 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
      427 [label="Ref: self\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      428 [label="MemberNode\n(native u32)", fillcolor=grey];
      429 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
      430 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.property$0(Some)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_4" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      431 [label="Name: self\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
      432 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
      433 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
      434 [label="MemberNode\n(intersection (fun 'store' ((alias ref) (alias i32)) (alias void)) (fun 'store' ((alias ref) (alias i32) (alias u32)) (alias void)))", fillcolor=grey];
      435 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
      436 [label="Ref: self\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      437 [label="Ref: value\n(alias i32 (native i32))", fillcolor=grey];
      438 [label="MemberNode\n(native u32)", fillcolor=grey];
      439 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
      440 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.property$0_1(Some,i32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_5" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      441 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
      442 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
      443 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      444 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
      445 [label="Ref: Some\n(type (alias Some (struct value:(type (alias i32 (native i32))))))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.load(ref,u32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_6" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      446 [label="Name: a\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      447 [label="Name: b\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      448 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      449 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.==(Some,Some)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_7" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      450 [label="Name: a\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      451 [label="Name: b\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      452 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      453 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.!=(Some,Some)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_8" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      454 [label="Name: self\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      455 [label="FunctionCallNode\n(alias i32 (native i32))", fillcolor=grey];
      456 [label="Ref: property$0\n(intersection (fun 'property$0' ((alias Some)) (alias i32)) (fun 'property$0' ((alias Some) (alias i32)) (alias void)))", fillcolor=grey];
      457 [label="Ref: self\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      458 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.property_value(Some)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_9" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      459 [label="Name: self\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      460 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
      461 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
      462 [label="Ref: property$0\n(intersection (fun 'property$0' ((alias Some)) (alias i32)) (fun 'property$0' ((alias Some) (alias i32)) (alias void)))", fillcolor=grey];
      463 [label="Ref: self\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      464 [label="Ref: value\n(alias i32 (native i32))", fillcolor=grey];
      465 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.property_value_1(Some,i32)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_10" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      466 [label="Name: a\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      467 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      468 [label="Ref: Some$discriminant\n(fun 'Some$discriminant' () (alias u64))", fillcolor=grey];
      469 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.is(Some)";
    }
    subgraph "cluster_test/fixtures/types/patternMatching.lys#Some_11" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      470 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
      471 [label="Name: rhs\n(alias Some (struct value:(type (alias i32 (native i32)))))", fillcolor=grey];
      472 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
      473 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      474 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
      475 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
      label="test/fixtures/types/patternMatching.lys::Some.store(ref,Some,u32)";
    }
    label="test/fixtures/types/patternMatching.lys#Some";
  }
  1 -> 124[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 148[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 160[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 164[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 172[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 178[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 20[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 26[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 196[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 199[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 202[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  98 -> 1[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  99 -> 98[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  100 -> 98[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  122 -> 127[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  123 -> 122[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  124 -> 125[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  125 -> 123[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  126 -> 123[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  128 -> 135[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  129 -> 128[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  130 -> 131[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  131 -> 129[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  132 -> 133[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  133 -> 129[taillabel="[rhs]" fontsize=7 fontname="times" color="black" ];
  134 -> 129[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  136 -> 143[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  137 -> 136[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  138 -> 139[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  139 -> 137[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  140 -> 141[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  141 -> 137[taillabel="[rhs]" fontsize=7 fontname="times" color="black" ];
  142 -> 137[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  144 -> 153[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  145 -> 144[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  146 -> 147[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  147 -> 145[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  148 -> 149[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  149 -> 145[taillabel="[rhs]" fontsize=7 fontname="times" color="black" ];
  150 -> 151[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  151 -> 145[taillabel="[offset]" fontsize=7 fontname="times" color="black" ];
  152 -> 145[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  154 -> 161[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  155 -> 154[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  156 -> 157[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  157 -> 155[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  158 -> 159[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  159 -> 155[taillabel="[offset]" fontsize=7 fontname="times" color="black" ];
  160 -> 155[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  162 -> 167[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  163 -> 162[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  164 -> 165[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  165 -> 163[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  166 -> 163[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  168 -> 173[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  169 -> 168[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  170 -> 171[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  171 -> 169[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  172 -> 169[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  174 -> 179[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  175 -> 174[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  176 -> 177[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  177 -> 175[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  178 -> 175[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  2 -> 99[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 170[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 228[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 232[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 238[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 246[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 256[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 268[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 275[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 286[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 289[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 208[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 79[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 91[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  101 -> 2[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  3 -> 100[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 176[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 316[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 322[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 326[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 328[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 334[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 336[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 342[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 346[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 354[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 358[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 366[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 374[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 386[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 28[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 393[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 412[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 418[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 422[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 429[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 439[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 445[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 211[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 76[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 87[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 94[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 97[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  102 -> 3[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  5 -> 4[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  222 -> 225[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  223 -> 222[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  224 -> 223[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  225 -> 288[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  225 -> 292[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  226 -> 229[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  227 -> 226[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  228 -> 227[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  230 -> 235[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  231 -> 230[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  232 -> 233[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  233 -> 231[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  234 -> 231[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  236 -> 243[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  237 -> 236[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  238 -> 239[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  239 -> 237[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  240 -> 241[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  241 -> 237[taillabel="[b]" fontsize=7 fontname="times" color="black" ];
  242 -> 237[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  244 -> 251[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  245 -> 244[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  246 -> 247[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  247 -> 245[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  248 -> 249[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  249 -> 245[taillabel="[b]" fontsize=7 fontname="times" color="black" ];
  250 -> 245[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  252 -> 261[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  253 -> 252[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  254 -> 255[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  255 -> 253[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  256 -> 257[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  257 -> 253[taillabel="[rhs]" fontsize=7 fontname="times" color="black" ];
  258 -> 259[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  259 -> 253[taillabel="[offset]" fontsize=7 fontname="times" color="black" ];
  260 -> 253[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  262 -> 269[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  263 -> 262[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  264 -> 265[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  265 -> 263[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  266 -> 267[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  267 -> 263[taillabel="[offset]" fontsize=7 fontname="times" color="black" ];
  268 -> 263[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  308 -> 311[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  309 -> 308[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  310 -> 309[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  311 -> 421[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  311 -> 468[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  312 -> 317[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  313 -> 312[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  314 -> 315[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  315 -> 313[taillabel="[value]" fontsize=7 fontname="times" color="black" ];
  316 -> 313[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  318 -> 323[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  319 -> 318[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  320 -> 321[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  321 -> 319[taillabel="[ptr]" fontsize=7 fontname="times" color="black" ];
  322 -> 319[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  323 -> 405[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  324 -> 331[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  325 -> 324[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  326 -> 327[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  327 -> 325[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  328 -> 329[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  329 -> 325[taillabel="[b]" fontsize=7 fontname="times" color="black" ];
  330 -> 325[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  332 -> 339[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  333 -> 332[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  334 -> 335[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  335 -> 333[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  336 -> 337[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  337 -> 333[taillabel="[b]" fontsize=7 fontname="times" color="black" ];
  338 -> 333[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  340 -> 351[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  341 -> 340[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  342 -> 343[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  343 -> 341[taillabel="[self]" fontsize=7 fontname="times" color="black" ];
  344 -> 341[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  345 -> 340[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  346 -> 347[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  347 -> 345[taillabel="[self]" fontsize=7 fontname="times" color="black" ];
  348 -> 349[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  349 -> 345[taillabel="[value]" fontsize=7 fontname="times" color="black" ];
  350 -> 345[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  352 -> 363[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  353 -> 352[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  354 -> 355[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  355 -> 353[taillabel="[self]" fontsize=7 fontname="times" color="black" ];
  356 -> 353[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  357 -> 352[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  358 -> 359[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  359 -> 357[taillabel="[self]" fontsize=7 fontname="times" color="black" ];
  360 -> 361[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  361 -> 357[taillabel="[value]" fontsize=7 fontname="times" color="black" ];
  362 -> 357[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  363 -> 414[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  363 -> 456[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  363 -> 462[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  364 -> 369[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  365 -> 364[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  366 -> 367[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  367 -> 365[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  368 -> 365[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  370 -> 379[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  371 -> 370[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  372 -> 373[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  373 -> 371[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  374 -> 375[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  375 -> 371[taillabel="[rhs]" fontsize=7 fontname="times" color="black" ];
  376 -> 377[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  377 -> 371[taillabel="[offset]" fontsize=7 fontname="times" color="black" ];
  378 -> 371[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  380 -> 387[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  381 -> 380[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  382 -> 383[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  383 -> 381[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  384 -> 385[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  385 -> 381[taillabel="[offset]" fontsize=7 fontname="times" color="black" ];
  386 -> 381[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  6 -> 11[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  7 -> 6[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  8 -> 9[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  9 -> 7[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  10 -> 7[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  12 -> 17[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  13 -> 12[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  14 -> 15[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  15 -> 13[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  16 -> 13[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  18 -> 23[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  19 -> 18[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  20 -> 21[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  21 -> 19[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  22 -> 19[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  24 -> 29[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  25 -> 24[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  26 -> 27[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  27 -> 25[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  28 -> 25[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  180 -> 183[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  181 -> 184[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  183 -> 182[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  184 -> 182[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  186 -> 189[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  187 -> 190[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  189 -> 188[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  190 -> 188[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  271 -> 270[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  272 -> 278[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  273 -> 272[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  274 -> 272[taillabel="[DEFAULT_VALUE]" fontsize=7 fontname="times" color="black" ];
  275 -> 274[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  276 -> 270[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  277 -> 276[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  278 -> 277[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  279 -> 277[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  280 -> 276[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  389 -> 388[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  390 -> 396[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  391 -> 390[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  392 -> 390[taillabel="[DEFAULT_VALUE]" fontsize=7 fontname="times" color="black" ];
  393 -> 392[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  394 -> 388[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  395 -> 394[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  396 -> 395[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  397 -> 395[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  398 -> 394[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  30 -> 32[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  32 -> 31[taillabel="[PATTERN_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  32 -> 103[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  33 -> 31[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  34 -> 33[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  35 -> 33[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  103 -> 33[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  103 -> 104[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  36 -> 31[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  37 -> 36[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  104 -> 36[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  39 -> 41[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  41 -> 40[taillabel="[PATTERN_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  41 -> 105[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  42 -> 40[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  43 -> 42[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  44 -> 42[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  105 -> 42[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  105 -> 106[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  45 -> 40[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  46 -> 45[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  47 -> 45[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  106 -> 45[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  106 -> 107[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  48 -> 40[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  49 -> 48[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  50 -> 48[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  107 -> 48[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  107 -> 108[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  51 -> 40[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  52 -> 51[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  53 -> 51[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  108 -> 51[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  108 -> 109[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  54 -> 40[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  55 -> 54[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  56 -> 54[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  109 -> 54[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  109 -> 110[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  57 -> 40[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  58 -> 57[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  59 -> 57[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  110 -> 57[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  110 -> 111[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  60 -> 40[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  61 -> 60[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  62 -> 60[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  111 -> 60[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  111 -> 112[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  63 -> 40[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  64 -> 63[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  65 -> 63[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  112 -> 63[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  112 -> 113[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  66 -> 40[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  67 -> 66[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  68 -> 66[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  113 -> 66[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  113 -> 114[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  69 -> 40[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  70 -> 69[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  114 -> 69[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  400 -> 416[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  402 -> 401[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  403 -> 415[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  403 -> 417[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  404 -> 403[taillabel="[DEFAULT_VALUE]" fontsize=7 fontname="times" color="black" ];
  405 -> 404[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  406 -> 404[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  407 -> 406[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  408 -> 406[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  409 -> 408[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  410 -> 408[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  411 -> 406[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  412 -> 411[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  413 -> 401[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  414 -> 413[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  415 -> 413[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  416 -> 413[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  417 -> 401[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  423 -> 427[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  425 -> 424[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  426 -> 425[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  427 -> 424[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  428 -> 424[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  429 -> 428[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  431 -> 436[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  432 -> 437[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  434 -> 433[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  435 -> 434[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  436 -> 433[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  437 -> 433[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  438 -> 433[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  439 -> 438[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  454 -> 457[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  456 -> 455[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  457 -> 455[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  459 -> 463[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  460 -> 464[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  462 -> 461[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  463 -> 461[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  464 -> 461[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  203 -> 207[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  203 -> 210[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  205 -> 204[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  206 -> 205[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  207 -> 206[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  208 -> 206[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  209 -> 205[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  210 -> 209[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  211 -> 209[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  72 -> 74[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  74 -> 73[taillabel="[PATTERN_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  74 -> 116[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  75 -> 73[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  76 -> 75[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  76 -> 115[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  76 -> 118[taillabel="[REMOVED_TYPE]" fontsize=7 fontname="times" color="black" ];
  77 -> 75[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  116 -> 75[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  116 -> 118[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  78 -> 73[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  79 -> 78[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  79 -> 117[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  79 -> 81[taillabel="[REMOVED_TYPE]" fontsize=7 fontname="times" color="black" ];
  80 -> 78[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  118 -> 78[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  118 -> 81[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  81 -> 73[taillabel="[REST_TYPE]" fontsize=7 fontname="times" color="black" ];
  83 -> 85[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  85 -> 84[taillabel="[PATTERN_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  85 -> 119[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  86 -> 84[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  87 -> 86[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  87 -> 89[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  87 -> 121[taillabel="[REMOVED_TYPE]" fontsize=7 fontname="times" color="black" ];
  88 -> 86[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  89 -> 88[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  119 -> 86[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  119 -> 121[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  90 -> 84[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  91 -> 90[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  91 -> 120[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  91 -> 96[taillabel="[REMOVED_TYPE]" fontsize=7 fontname="times" color="black" ];
  92 -> 90[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  93 -> 92[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  94 -> 93[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  95 -> 92[taillabel="[PARAMETER]" fontsize=7 fontname="times" color="black" ];
  121 -> 90[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  121 -> 96[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  96 -> 84[taillabel="[REST_TYPE]" fontsize=7 fontname="times" color="black" ];
  label="LYS";
}
