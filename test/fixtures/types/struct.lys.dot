digraph Document {
  node [shape=box,fontsize=10]; rankdir=LR;
  1 [label="Name: Simple\n(type (alias Simple (struct Simple)))", fillcolor=grey];
  2 [label="FunOverload: apply\n(fun 'apply' () (alias Simple))", fillcolor=grey];
  3 [label="FunNode: apply\n(fun 'apply' () (alias Simple))", fillcolor=grey];
  4 [label="Ref: Simple\n(type (alias Simple (struct Simple)))", fillcolor=grey];
  5 [label="Name: apply\n(fun 'apply' () (alias Simple))", fillcolor=grey];
  6 [label="FunOverload: is\n(fun 'is' ((alias Simple)) (alias boolean))", fillcolor=grey];
  7 [label="FunNode: is\n(fun 'is' ((alias Simple)) (alias boolean))", fillcolor=grey];
  8 [label="Ref: Simple\n(type (alias Simple (struct Simple)))", fillcolor=grey];
  9 [label="Name: a\n(alias Simple (struct Simple))", fillcolor=grey];
  10 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  11 [label="Name: is\n(fun 'is' ((alias Simple)) (alias boolean))", fillcolor=grey];
  12 [label="FunOverload: ==\n(fun '==' ((alias Simple) (alias ref)) (alias boolean))", fillcolor=grey];
  13 [label="FunNode: ==\n(fun '==' ((alias Simple) (alias ref)) (alias boolean))", fillcolor=grey];
  14 [label="Ref: Simple\n(type (alias Simple (struct Simple)))", fillcolor=grey];
  15 [label="Name: a\n(alias Simple (struct Simple))", fillcolor=grey];
  16 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  17 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
  18 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  19 [label="Name: ==\n(fun '==' ((alias Simple) (alias ref)) (alias boolean))", fillcolor=grey];
  20 [label="FunOverload: !=\n(fun '!=' ((alias Simple) (alias ref)) (alias boolean))", fillcolor=grey];
  21 [label="FunNode: !=\n(fun '!=' ((alias Simple) (alias ref)) (alias boolean))", fillcolor=grey];
  22 [label="Ref: Simple\n(type (alias Simple (struct Simple)))", fillcolor=grey];
  23 [label="Name: a\n(alias Simple (struct Simple))", fillcolor=grey];
  24 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  25 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
  26 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  27 [label="Name: !=\n(fun '!=' ((alias Simple) (alias ref)) (alias boolean))", fillcolor=grey];
  28 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias Simple) (alias i32)) (alias void))", fillcolor=grey];
  29 [label="FunNode: store\n(fun 'store' ((alias ref) (alias Simple) (alias i32)) (alias void))", fillcolor=grey];
  30 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  31 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  32 [label="Ref: Simple\n(type (alias Simple (struct Simple)))", fillcolor=grey];
  33 [label="Name: rhs\n(alias Simple (struct Simple))", fillcolor=grey];
  34 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  35 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  36 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  37 [label="Name: store\n(fun 'store' ((alias ref) (alias Simple) (alias i32)) (alias void))", fillcolor=grey];
  38 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias i32)) (alias Simple))", fillcolor=grey];
  39 [label="FunNode: load\n(fun 'load' ((alias ref) (alias i32)) (alias Simple))", fillcolor=grey];
  40 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  41 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  42 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  43 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  44 [label="Ref: Simple\n(type (alias Simple (struct Simple)))", fillcolor=grey];
  45 [label="Name: load\n(fun 'load' ((alias ref) (alias i32)) (alias Simple))", fillcolor=grey];
  46 [label="Name: WithInt\n(type (alias WithInt (struct WithInt)))", fillcolor=grey];
  47 [label="FunOverload: discriminant\n(fun 'discriminant' () (alias u64))", fillcolor=grey];
  48 [label="FunNode: discriminant\n(fun 'discriminant' () (alias u64))", fillcolor=grey];
  49 [label="Ref: u64\n(type (alias u64 (native u64)))", fillcolor=grey];
  50 [label="Name: discriminant\n(fun 'discriminant' () (alias u64))", fillcolor=grey];
  51 [label="FunOverload: sizeOf\n(fun 'sizeOf' () (alias i32))", fillcolor=grey];
  52 [label="FunNode: sizeOf\n(fun 'sizeOf' () (alias i32))", fillcolor=grey];
  53 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  54 [label="Name: sizeOf\n(fun 'sizeOf' () (alias i32))", fillcolor=grey];
  55 [label="FunOverload: allocationSize\n(fun 'allocationSize' () (alias u32))", fillcolor=grey];
  56 [label="FunNode: allocationSize\n(fun 'allocationSize' () (alias u32))", fillcolor=grey];
  57 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
  58 [label="Name: allocationSize\n(fun 'allocationSize' () (alias u32))", fillcolor=grey];
  59 [label="FunOverload: apply\n(fun 'apply' ((alias i32)) (alias WithInt))", fillcolor=grey];
  60 [label="FunNode: apply\n(fun 'apply' ((alias i32)) (alias WithInt))", fillcolor=grey];
  61 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  62 [label="Name: a\n(alias i32 (native i32))", fillcolor=grey];
  63 [label="Ref: WithInt\n(type (alias WithInt (struct WithInt)))", fillcolor=grey];
  64 [label="Name: apply\n(fun 'apply' ((alias i32)) (alias WithInt))", fillcolor=grey];
  65 [label="FunOverload: fromPointer\n(fun 'fromPointer' ((union (alias i32) (alias u32))) (alias WithInt))", fillcolor=grey];
  66 [label="FunNode: fromPointer\n(fun 'fromPointer' ((union (alias i32) (alias u32))) (alias WithInt))", fillcolor=grey];
  67 [label="UnionTypeNode\n(type (union (alias i32 (native i32)) (alias u32 (native u32))))", fillcolor=grey];
  68 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  69 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
  70 [label="Name: ptr\n(type (union (alias i32 (native i32)) (alias u32 (native u32))))", fillcolor=grey];
  71 [label="Ref: WithInt\n(type (alias WithInt (struct WithInt)))", fillcolor=grey];
  72 [label="Name: fromPointer\n(fun 'fromPointer' ((union (alias i32) (alias u32))) (alias WithInt))", fillcolor=grey];
  73 [label="FunOverload: property_a\n(intersection (fun 'property_a' ((alias WithInt)) (alias i32)) (fun 'property_a' ((alias WithInt) (alias i32)) (alias void)))", fillcolor=grey];
  74 [label="FunNode: property_a\n(fun 'property_a' ((alias WithInt)) (alias i32))", fillcolor=grey];
  75 [label="Ref: WithInt\n(type (alias WithInt (struct WithInt)))", fillcolor=grey];
  76 [label="Name: target\n(alias WithInt (struct WithInt))", fillcolor=grey];
  77 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  78 [label="FunNode: property_a\n(fun 'property_a' ((alias WithInt) (alias i32)) (alias void))", fillcolor=grey];
  79 [label="Ref: WithInt\n(type (alias WithInt (struct WithInt)))", fillcolor=grey];
  80 [label="Name: target\n(alias WithInt (struct WithInt))", fillcolor=grey];
  81 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  82 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
  83 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  84 [label="Name: property_a\n(intersection (fun 'property_a' ((alias WithInt)) (alias i32)) (fun 'property_a' ((alias WithInt) (alias i32)) (alias void)))", fillcolor=grey];
  85 [label="FunOverload: set$a\n(fun 'set$a' ((alias WithInt) (alias i32)) (alias void))", fillcolor=grey];
  86 [label="FunNode: set$a\n(fun 'set$a' ((alias WithInt) (alias i32)) (alias void))", fillcolor=grey];
  87 [label="Ref: WithInt\n(type (alias WithInt (struct WithInt)))", fillcolor=grey];
  88 [label="Name: target\n(type (alias WithInt (struct WithInt)))", fillcolor=grey];
  89 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  90 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
  91 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  92 [label="Name: set$a\n(fun 'set$a' ((alias WithInt) (alias i32)) (alias void))", fillcolor=grey];
  93 [label="FunOverload: is\n(fun 'is' ((alias WithInt)) (alias boolean))", fillcolor=grey];
  94 [label="FunNode: is\n(fun 'is' ((alias WithInt)) (alias boolean))", fillcolor=grey];
  95 [label="Ref: WithInt\n(type (alias WithInt (struct WithInt)))", fillcolor=grey];
  96 [label="Name: a\n(alias WithInt (struct WithInt))", fillcolor=grey];
  97 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  98 [label="Name: is\n(fun 'is' ((alias WithInt)) (alias boolean))", fillcolor=grey];
  99 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias WithInt) (alias i32)) (alias void))", fillcolor=grey];
  100 [label="FunNode: store\n(fun 'store' ((alias ref) (alias WithInt) (alias i32)) (alias void))", fillcolor=grey];
  101 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  102 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  103 [label="Ref: WithInt\n(type (alias WithInt (struct WithInt)))", fillcolor=grey];
  104 [label="Name: rhs\n(alias WithInt (struct WithInt))", fillcolor=grey];
  105 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  106 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  107 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  108 [label="Name: store\n(fun 'store' ((alias ref) (alias WithInt) (alias i32)) (alias void))", fillcolor=grey];
  109 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias i32)) (alias WithInt))", fillcolor=grey];
  110 [label="FunNode: load\n(fun 'load' ((alias ref) (alias i32)) (alias WithInt))", fillcolor=grey];
  111 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  112 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  113 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  114 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  115 [label="Ref: WithInt\n(type (alias WithInt (struct WithInt)))", fillcolor=grey];
  116 [label="Name: load\n(fun 'load' ((alias ref) (alias i32)) (alias WithInt))", fillcolor=grey];
  subgraph cluster0 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    117 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    118 [label="Ref: u64\n(type (alias u64 (native u64)))", fillcolor=grey];
  label="test/fixtures/types/struct.ro::WithInt.discriminant()";
}
  subgraph cluster1 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    119 [label="Int: 8\n(alias i32 (native i32))", fillcolor=grey];
    120 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  label="test/fixtures/types/struct.ro::WithInt.sizeOf()";
}
  subgraph cluster2 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    121 [label="FunctionCallNode\n(alias u32 (native u32))", fillcolor=grey];
    122 [label="MemberNode\n(fun 'allocationSize' () (alias u32))", fillcolor=grey];
    123 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    124 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    122 -> 121[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    123 -> 122[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/struct.ro::WithInt.allocationSize()";
}
  subgraph cluster3 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    125 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    126 [label="Ref: Simple\n(type (alias Simple (struct Simple)))", fillcolor=grey];
  label="test/fixtures/types/struct.ro::Simple.apply()";
}
  subgraph cluster4 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    127 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    128 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    129 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    130 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    131 [label="Ref: Simple\n(type (alias Simple (struct Simple)))", fillcolor=grey];
  label="test/fixtures/types/struct.ro::Simple.load(ref,i32)";
}
  subgraph cluster5 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    132 [label="Name: a\n(alias i32 (native i32))", fillcolor=grey];
    133 [label="BlockNode\n(alias WithInt (struct WithInt))", fillcolor=grey];
    134 [label="VarDecl: $ref\n(native void)", fillcolor=grey];
    135 [label="Name: $ref\n(alias WithInt (struct WithInt))", fillcolor=grey];
    136 [label="FunctionCallNode\n(alias WithInt (struct WithInt))", fillcolor=grey];
    137 [label="Ref: fromPointer\n(fun 'fromPointer' ((union (alias i32) (alias u32))) (alias WithInt))", fillcolor=grey];
    138 [label="FunctionCallNode\n(alias i32 (native i32))", fillcolor=grey];
    139 [label="Ref: system::memory::calloc\n(fun 'calloc' ((alias i32) (alias i32)) (alias i32))", fillcolor=grey];
    140 [label="Int: 1\n(alias i32 (native i32))", fillcolor=grey];
    141 [label="FunctionCallNode\n(alias i32 (native i32))", fillcolor=grey];
    142 [label="Ref: sizeOf\n(fun 'sizeOf' () (alias i32))", fillcolor=grey];
    143 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
    144 [label="Ref: set$a\n(fun 'set$a' ((alias WithInt) (alias i32)) (alias void))", fillcolor=grey];
    145 [label="Ref: $ref\n(alias WithInt (struct WithInt))", fillcolor=grey];
    146 [label="Ref: a\n(alias i32 (native i32))", fillcolor=grey];
    147 [label="Ref: $ref\n(alias WithInt (struct WithInt))", fillcolor=grey];
    148 [label="Ref: WithInt\n(type (alias WithInt (struct WithInt)))", fillcolor=grey];
    132 -> 146[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    134 -> 133[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
    135 -> 145[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    135 -> 147[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    136 -> 135[taillabel="[DEFAULT_VALUE]" fontname="times" fontsize = 7 color="black" ];
    137 -> 136[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    138 -> 136[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    139 -> 138[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    140 -> 138[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    141 -> 138[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    142 -> 141[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    143 -> 133[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
    144 -> 143[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    145 -> 143[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    146 -> 143[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    147 -> 133[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/struct.ro::WithInt.apply(i32)";
}
  subgraph cluster6 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    149 [label="Name: ptr\n(type (union (alias i32 (native i32)) (alias u32 (native u32))))", fillcolor=grey];
    150 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    151 [label="Ref: WithInt\n(type (alias WithInt (struct WithInt)))", fillcolor=grey];
  label="test/fixtures/types/struct.ro::WithInt.fromPointer(i32 | u32)";
}
  subgraph cluster7 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    152 [label="Name: target\n(type (alias WithInt (struct WithInt)))", fillcolor=grey];
    153 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
    154 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
    155 [label="MemberNode\n(intersection (fun 'store' ((alias ref) (alias i32)) (alias void)) (fun 'store' ((alias ref) (alias i32) (alias i32)) (alias void)))", fillcolor=grey];
    156 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    157 [label="Ref: target\n(alias WithInt (struct WithInt))", fillcolor=grey];
    158 [label="Ref: value\n(alias i32 (native i32))", fillcolor=grey];
    159 [label="Int: 0\n(alias i32 (native i32))", fillcolor=grey];
    160 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    152 -> 157[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    153 -> 158[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    155 -> 154[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    156 -> 155[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    157 -> 154[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    158 -> 154[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    159 -> 154[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/struct.ro::WithInt.set$a(WithInt,i32)";
}
  subgraph cluster8 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    161 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    162 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    163 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    164 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    165 [label="Ref: WithInt\n(type (alias WithInt (struct WithInt)))", fillcolor=grey];
  label="test/fixtures/types/struct.ro::WithInt.load(ref,i32)";
}
  subgraph cluster9 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    166 [label="Name: a\n(alias Simple (struct Simple))", fillcolor=grey];
    167 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    168 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/struct.ro::Simple.is(Simple)";
}
  subgraph cluster10 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    169 [label="Name: a\n(alias Simple (struct Simple))", fillcolor=grey];
    170 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
    171 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    172 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/struct.ro::Simple.==(Simple,ref)";
}
  subgraph cluster11 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    173 [label="Name: a\n(alias Simple (struct Simple))", fillcolor=grey];
    174 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
    175 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    176 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/struct.ro::Simple.!=(Simple,ref)";
}
  subgraph cluster12 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    177 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    178 [label="Name: rhs\n(alias Simple (struct Simple))", fillcolor=grey];
    179 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    180 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    181 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    182 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  label="test/fixtures/types/struct.ro::Simple.store(ref,Simple,i32)";
}
  subgraph cluster13 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    183 [label="Name: target\n(alias WithInt (struct WithInt))", fillcolor=grey];
    184 [label="FunctionCallNode\n(alias i32 (native i32))", fillcolor=grey];
    185 [label="MemberNode\n(intersection (fun 'load' ((alias ref)) (alias i32)) (fun 'load' ((alias ref) (alias i32)) (alias i32)))", fillcolor=grey];
    186 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    187 [label="Ref: target\n(alias WithInt (struct WithInt))", fillcolor=grey];
    188 [label="Int: 0\n(alias i32 (native i32))", fillcolor=grey];
    189 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    183 -> 187[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    185 -> 184[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    186 -> 185[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    187 -> 184[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    188 -> 184[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/struct.ro::WithInt.property_a(WithInt)";
}
  subgraph cluster14 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    190 [label="Name: target\n(alias WithInt (struct WithInt))", fillcolor=grey];
    191 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
    192 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
    193 [label="Ref: set$a\n(fun 'set$a' ((alias WithInt) (alias i32)) (alias void))", fillcolor=grey];
    194 [label="Ref: target\n(alias WithInt (struct WithInt))", fillcolor=grey];
    195 [label="Ref: value\n(alias i32 (native i32))", fillcolor=grey];
    196 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    190 -> 194[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    191 -> 195[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    193 -> 192[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    194 -> 192[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    195 -> 192[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/struct.ro::WithInt.property_a_1(WithInt,i32)";
}
  subgraph cluster15 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    197 [label="Name: a\n(alias WithInt (struct WithInt))", fillcolor=grey];
    198 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    199 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/struct.ro::WithInt.is(WithInt)";
}
  subgraph cluster16 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    200 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    201 [label="Name: rhs\n(alias WithInt (struct WithInt))", fillcolor=grey];
    202 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    203 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    204 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    205 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  label="test/fixtures/types/struct.ro::WithInt.store(ref,WithInt,i32)";
}
  1 -> 4[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 8[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 14[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 22[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 32[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 44[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 126[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 131[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  2 -> 5[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  3 -> 2[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  4 -> 3[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  6 -> 11[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  7 -> 6[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  8 -> 9[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  9 -> 7[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  10 -> 7[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  12 -> 19[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  13 -> 12[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  14 -> 15[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  15 -> 13[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  16 -> 17[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  17 -> 13[taillabel="[b]" fontname="times" fontsize = 7 color="black" ];
  18 -> 13[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  20 -> 27[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  21 -> 20[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  22 -> 23[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  23 -> 21[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  24 -> 25[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  25 -> 21[taillabel="[b]" fontname="times" fontsize = 7 color="black" ];
  26 -> 21[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  28 -> 37[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  29 -> 28[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  30 -> 31[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  31 -> 29[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  32 -> 33[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  33 -> 29[taillabel="[rhs]" fontname="times" fontsize = 7 color="black" ];
  34 -> 35[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  35 -> 29[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  36 -> 29[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  38 -> 45[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  39 -> 38[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  40 -> 41[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  41 -> 39[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  42 -> 43[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  43 -> 39[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  44 -> 39[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  46 -> 63[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 71[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 75[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 79[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 87[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 95[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 103[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 115[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 148[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 151[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 165[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  47 -> 50[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  48 -> 47[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  49 -> 48[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  51 -> 54[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  52 -> 51[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  53 -> 52[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  54 -> 142[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  55 -> 58[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  56 -> 55[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  57 -> 56[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  59 -> 64[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  60 -> 59[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  61 -> 62[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  62 -> 60[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  63 -> 60[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  65 -> 72[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  66 -> 65[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  67 -> 70[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  68 -> 67[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  69 -> 67[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  70 -> 66[taillabel="[ptr]" fontname="times" fontsize = 7 color="black" ];
  71 -> 66[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  72 -> 137[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  73 -> 84[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  74 -> 73[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  75 -> 76[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  76 -> 74[taillabel="[target]" fontname="times" fontsize = 7 color="black" ];
  77 -> 74[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  78 -> 73[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  79 -> 80[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  80 -> 78[taillabel="[target]" fontname="times" fontsize = 7 color="black" ];
  81 -> 82[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  82 -> 78[taillabel="[value]" fontname="times" fontsize = 7 color="black" ];
  83 -> 78[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  85 -> 92[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  86 -> 85[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  87 -> 88[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  88 -> 86[taillabel="[target]" fontname="times" fontsize = 7 color="black" ];
  89 -> 90[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  90 -> 86[taillabel="[value]" fontname="times" fontsize = 7 color="black" ];
  91 -> 86[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  92 -> 144[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  92 -> 193[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  93 -> 98[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  94 -> 93[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  95 -> 96[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  96 -> 94[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  97 -> 94[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  99 -> 108[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  100 -> 99[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  101 -> 102[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  102 -> 100[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  103 -> 104[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  104 -> 100[taillabel="[rhs]" fontname="times" fontsize = 7 color="black" ];
  105 -> 106[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  106 -> 100[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  107 -> 100[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  109 -> 116[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  110 -> 109[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  111 -> 112[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  112 -> 110[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  113 -> 114[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  114 -> 110[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  115 -> 110[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  label="";
}
