digraph Document {
  node [shape=box,fixedsize=shape fontsize=10]
  1 [label="Name: i32\n⟨Type<i32>⟩", fillcolor=grey];
  2 [label="Name: f32\n⟨Type<f32>⟩", fillcolor=grey];
  3 [label="Name: boolean\n⟨Type<boolean>⟩", fillcolor=grey];
  4 [label="Name: Number\n⟨Type<Number>⟩", fillcolor=grey];
  5 [label="StructDeclarationNode\n⟨Type<Infinity>⟩", fillcolor=grey];
  6 [label="Name: Infinity\n⟨Type<Infinity>⟩", fillcolor=grey];
  7 [label="StructDeclarationNode\n⟨Type<NDet>⟩", fillcolor=grey];
  8 [label="Name: NDet\n⟨Type<NDet>⟩", fillcolor=grey];
  9 [label="StructDeclarationNode\n⟨Type<Real>⟩", fillcolor=grey];
  10 [label="TypeRef: f32\n⟨f32⟩", fillcolor=grey];
  11 [label="Name: number\n⟨f32⟩", fillcolor=grey];
  12 [label="Name: Real\n⟨Type<Real>⟩", fillcolor=grey];
  13 [label="StructDeclarationNode\n⟨Type<Natural>⟩", fillcolor=grey];
  14 [label="TypeRef: i32\n⟨i32⟩", fillcolor=grey];
  15 [label="Name: number\n⟨i32⟩", fillcolor=grey];
  16 [label="Name: Natural\n⟨Type<Natural>⟩", fillcolor=grey];
  17 [label="StructDeclarationNode\n⟨Type<Complex>⟩", fillcolor=grey];
  18 [label="TypeRef: f32\n⟨f32⟩", fillcolor=grey];
  19 [label="Name: real\n⟨f32⟩", fillcolor=grey];
  20 [label="TypeRef: f32\n⟨f32⟩", fillcolor=grey];
  21 [label="Name: imaginary\n⟨f32⟩", fillcolor=grey];
  22 [label="Name: Complex\n⟨Type<Complex>⟩", fillcolor=grey];
  23 [label="StructDeclarationNode\n⟨Type<TestStruct>⟩", fillcolor=grey];
  24 [label="Name: TestStruct\n⟨Type<TestStruct>⟩", fillcolor=grey];
  25 [label="FunOverload: isComplex\n⟨fun(number: Number) -> boolean⟩", fillcolor=grey];
  26 [label="FunDirective: isComplex\n⟨fun(number: Number) -> boolean⟩", fillcolor=grey];
  27 [label="FunNode: isComplex\n⟨fun(number: Number) -> boolean⟩", fillcolor=grey];
  28 [label="TypeRef: Number\n⟨Number⟩", fillcolor=grey];
  29 [label="Name: number\n⟨Number⟩", fillcolor=grey];
  30 [label="TypeRef: boolean\n⟨boolean⟩", fillcolor=grey];
  31 [label="Name: isComplex\n⟨fun(number: Number) -> boolean⟩", fillcolor=grey];
  32 [label="Name: isComplex\n⟨fun(number: Number) -> boolean⟩", fillcolor=grey];
  33 [label="FunOverload: main\n⟨fun() -> void⟩", fillcolor=grey];
  34 [label="FunDirective: main\n⟨fun() -> void⟩", fillcolor=grey];
  35 [label="FunNode: main\n⟨void⟩", fillcolor=grey];
  36 [label="TypeRef: void\n⟨void⟩", fillcolor=grey];
  37 [label="Name: main\n⟨fun() -> void⟩", fillcolor=grey];
  38 [label="Name: main\n⟨fun() -> void⟩", fillcolor=grey];
  39 [label="FunOverload: InfinityAllocator\n⟨fun() -> Infinity⟩", fillcolor=grey];
  40 [label="FunDirective: InfinityAllocator\n⟨fun() -> Infinity⟩", fillcolor=grey];
  41 [label="FunNode: InfinityAllocator\n⟨fun() -> Infinity⟩", fillcolor=grey];
  42 [label="TypeRef: Infinity\n⟨Infinity⟩", fillcolor=grey];
  43 [label="Name: InfinityAllocator\n⟨fun() -> Infinity⟩", fillcolor=grey];
  44 [label="Name: InfinityAllocator\n⟨fun() -> Infinity⟩", fillcolor=grey];
  45 [label="FunOverload: is\n⟨fun(a: Infinity) -> boolean & fun(a: NDet) -> boolean & fun(a: Real) -> boolean & fun(a: Natural) -> boolean & fun(a: Complex) -> boolean & fun(a: TestStruct) -> boolean⟩
Amount: 7", fillcolor=magenta];
  46 [label="FunDirective: is\n⟨fun(a: Infinity) -> boolean⟩", fillcolor=grey];
  47 [label="FunNode: is\n⟨fun(a: Infinity) -> boolean⟩", fillcolor=grey];
  48 [label="TypeRef: Infinity\n⟨Infinity⟩", fillcolor=grey];
  49 [label="Name: a\n⟨Infinity⟩", fillcolor=grey];
  50 [label="TypeRef: boolean\n⟨boolean⟩", fillcolor=grey];
  51 [label="Name: is\n⟨fun(a: Infinity) -> boolean⟩", fillcolor=grey];
  52 [label="FunDirective: is\n⟨fun(a: NDet) -> boolean⟩", fillcolor=grey];
  53 [label="FunNode: is\n⟨fun(a: NDet) -> boolean⟩", fillcolor=grey];
  54 [label="TypeRef: NDet\n⟨NDet⟩", fillcolor=grey];
  55 [label="Name: a\n⟨NDet⟩", fillcolor=grey];
  56 [label="TypeRef: boolean\n⟨boolean⟩", fillcolor=grey];
  57 [label="Name: is\n⟨fun(a: NDet) -> boolean⟩", fillcolor=grey];
  58 [label="FunDirective: is\n⟨fun(a: Real) -> boolean⟩", fillcolor=grey];
  59 [label="FunNode: is\n⟨fun(a: Real) -> boolean⟩", fillcolor=grey];
  60 [label="TypeRef: Real\n⟨Real⟩", fillcolor=grey];
  61 [label="Name: a\n⟨Real⟩", fillcolor=grey];
  62 [label="TypeRef: boolean\n⟨boolean⟩", fillcolor=grey];
  63 [label="Name: is\n⟨fun(a: Real) -> boolean⟩", fillcolor=grey];
  64 [label="FunDirective: is\n⟨fun(a: Natural) -> boolean⟩", fillcolor=grey];
  65 [label="FunNode: is\n⟨fun(a: Natural) -> boolean⟩", fillcolor=grey];
  66 [label="TypeRef: Natural\n⟨Natural⟩", fillcolor=grey];
  67 [label="Name: a\n⟨Natural⟩", fillcolor=grey];
  68 [label="TypeRef: boolean\n⟨boolean⟩", fillcolor=grey];
  69 [label="Name: is\n⟨fun(a: Natural) -> boolean⟩", fillcolor=grey];
  70 [label="FunDirective: is\n⟨fun(a: Complex) -> boolean⟩", fillcolor=grey];
  71 [label="FunNode: is\n⟨fun(a: Complex) -> boolean⟩", fillcolor=grey];
  72 [label="TypeRef: Complex\n⟨Complex⟩", fillcolor=grey];
  73 [label="Name: a\n⟨Complex⟩", fillcolor=grey];
  74 [label="TypeRef: boolean\n⟨boolean⟩", fillcolor=grey];
  75 [label="Name: is\n⟨fun(a: Complex) -> boolean⟩", fillcolor=grey];
  76 [label="FunDirective: is\n⟨fun(a: TestStruct) -> boolean⟩", fillcolor=grey];
  77 [label="FunNode: is\n⟨fun(a: TestStruct) -> boolean⟩", fillcolor=grey];
  78 [label="TypeRef: TestStruct\n⟨TestStruct⟩", fillcolor=grey];
  79 [label="Name: a\n⟨TestStruct⟩", fillcolor=grey];
  80 [label="TypeRef: boolean\n⟨boolean⟩", fillcolor=grey];
  81 [label="Name: is\n⟨fun(a: TestStruct) -> boolean⟩", fillcolor=grey];
  82 [label="Name: is\n⟨fun(a: Infinity) -> boolean & fun(a: NDet) -> boolean & fun(a: Real) -> boolean & fun(a: Natural) -> boolean & fun(a: Complex) -> boolean & fun(a: TestStruct) -> boolean⟩
Amount: 7", fillcolor=magenta];
  83 [label="FunOverload: NDetAllocator\n⟨fun() -> NDet⟩", fillcolor=grey];
  84 [label="FunDirective: NDetAllocator\n⟨fun() -> NDet⟩", fillcolor=grey];
  85 [label="FunNode: NDetAllocator\n⟨fun() -> NDet⟩", fillcolor=grey];
  86 [label="TypeRef: NDet\n⟨NDet⟩", fillcolor=grey];
  87 [label="Name: NDetAllocator\n⟨fun() -> NDet⟩", fillcolor=grey];
  88 [label="Name: NDetAllocator\n⟨fun() -> NDet⟩", fillcolor=grey];
  89 [label="FunOverload: RealAllocator\n⟨fun(number: f32) -> Real⟩", fillcolor=grey];
  90 [label="FunDirective: RealAllocator\n⟨fun(number: f32) -> Real⟩", fillcolor=grey];
  91 [label="FunNode: RealAllocator\n⟨fun(number: f32) -> Real⟩", fillcolor=grey];
  92 [label="TypeRef: f32\n⟨f32⟩", fillcolor=grey];
  93 [label="Name: number\n⟨f32⟩", fillcolor=grey];
  94 [label="TypeRef: Real\n⟨Real⟩", fillcolor=grey];
  95 [label="Name: RealAllocator\n⟨fun(number: f32) -> Real⟩", fillcolor=grey];
  96 [label="Name: RealAllocator\n⟨fun(number: f32) -> Real⟩", fillcolor=grey];
  97 [label="FunOverload: NaturalAllocator\n⟨fun(number: i32) -> Natural⟩", fillcolor=grey];
  98 [label="FunDirective: NaturalAllocator\n⟨fun(number: i32) -> Natural⟩", fillcolor=grey];
  99 [label="FunNode: NaturalAllocator\n⟨fun(number: i32) -> Natural⟩", fillcolor=grey];
  100 [label="TypeRef: i32\n⟨i32⟩", fillcolor=grey];
  101 [label="Name: number\n⟨i32⟩", fillcolor=grey];
  102 [label="TypeRef: Natural\n⟨Natural⟩", fillcolor=grey];
  103 [label="Name: NaturalAllocator\n⟨fun(number: i32) -> Natural⟩", fillcolor=grey];
  104 [label="Name: NaturalAllocator\n⟨fun(number: i32) -> Natural⟩", fillcolor=grey];
  105 [label="FunOverload: ComplexAllocator\n⟨fun(real: f32, imaginary: f32) -> Complex⟩", fillcolor=grey];
  106 [label="FunDirective: ComplexAllocator\n⟨fun(real: f32, imaginary: f32) -> Complex⟩", fillcolor=grey];
  107 [label="FunNode: ComplexAllocator\n⟨fun(real: f32, imaginary: f32) -> Complex⟩", fillcolor=grey];
  108 [label="TypeRef: f32\n⟨f32⟩", fillcolor=grey];
  109 [label="Name: real\n⟨f32⟩", fillcolor=grey];
  110 [label="TypeRef: f32\n⟨f32⟩", fillcolor=grey];
  111 [label="Name: imaginary\n⟨f32⟩", fillcolor=grey];
  112 [label="TypeRef: Complex\n⟨Complex⟩", fillcolor=grey];
  113 [label="Name: ComplexAllocator\n⟨fun(real: f32, imaginary: f32) -> Complex⟩", fillcolor=grey];
  114 [label="Name: ComplexAllocator\n⟨fun(real: f32, imaginary: f32) -> Complex⟩", fillcolor=grey];
  115 [label="FunOverload: TestStructAllocator\n⟨fun() -> TestStruct⟩", fillcolor=grey];
  116 [label="FunDirective: TestStructAllocator\n⟨fun() -> TestStruct⟩", fillcolor=grey];
  117 [label="FunNode: TestStructAllocator\n⟨fun() -> TestStruct⟩", fillcolor=grey];
  118 [label="TypeRef: TestStruct\n⟨TestStruct⟩", fillcolor=grey];
  119 [label="Name: TestStructAllocator\n⟨fun() -> TestStruct⟩", fillcolor=grey];
  120 [label="Name: TestStructAllocator\n⟨fun() -> TestStruct⟩", fillcolor=grey];
  subgraph cluster0 {
    node [style=filled, fillcolor=grey];
    121 [label="BlockNode\n⟨void⟩", fillcolor=grey];
    122 [label="FunctionCallNode\n⟨boolean⟩", fillcolor=grey];
    123 [label="VarRef: isComplex\n⟨fun(number: Number) -> boolean⟩", fillcolor=grey];
    124 [label="VarRef: Infinity\n⟨Infinity⟩", fillcolor=grey];
    125 [label="FunctionCallNode\n⟨boolean⟩", fillcolor=grey];
    126 [label="VarRef: isComplex\n⟨fun(number: Number) -> boolean⟩", fillcolor=grey];
    127 [label="FunctionCallNode\n⟨Real⟩", fillcolor=grey];
    128 [label="VarRef: Real\n⟨Type<Real>⟩", fillcolor=grey];
    129 [label="Float: 0.00000\n⟨f32⟩", fillcolor=grey];
    130 [label="FunctionCallNode\n⟨boolean⟩", fillcolor=grey];
    131 [label="VarRef: isComplex\n⟨fun(number: Number) -> boolean⟩", fillcolor=grey];
    132 [label="FunctionCallNode\n⟨Natural⟩", fillcolor=grey];
    133 [label="VarRef: Natural\n⟨Type<Natural>⟩", fillcolor=grey];
    134 [label="Int: 123\n⟨i32⟩", fillcolor=grey];
    135 [label="FunctionCallNode\n⟨boolean⟩", fillcolor=grey];
    136 [label="VarRef: isComplex\n⟨fun(number: Number) -> boolean⟩", fillcolor=grey];
    137 [label="FunctionCallNode\n⟨Complex⟩", fillcolor=grey];
    138 [label="VarRef: Complex\n⟨Type<Complex>⟩", fillcolor=grey];
    139 [label="Float: 0.00000\n⟨f32⟩", fillcolor=grey];
    140 [label="Float: 99.10000\n⟨f32⟩", fillcolor=grey];
    141 [label="FunNode: main\n⟨void⟩", fillcolor=grey];
    142 [label="TypeRef: void\n⟨void⟩", fillcolor=grey];
    121 -> 141[taillabel="void" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    122 -> 121[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    123 -> 122[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    124 -> 122[taillabel="Infinity" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    125 -> 121[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    126 -> 125[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    127 -> 125[taillabel="Real" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    128 -> 127[taillabel="Type<Real>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    129 -> 127[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    130 -> 121[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    131 -> 130[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    132 -> 130[taillabel="Natural" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    133 -> 132[taillabel="Type<Natural>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    134 -> 132[taillabel="i32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    135 -> 121[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    136 -> 135[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    137 -> 135[taillabel="Complex" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    138 -> 137[taillabel="Type<Complex>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    139 -> 137[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    140 -> 137[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  label = "main()";
}
  subgraph cluster1 {
    node [style=filled, fillcolor=grey];
    143 [label="Name: number\n⟨Number⟩", fillcolor=grey];
    144 [label="PatternMatcherNode", fillcolor=grey, color=red];
    145 [label="VarRef: number\n⟨Number⟩", fillcolor=grey];
    146 [label="MatchCaseIsNode\n⟨boolean⟩
Amount: 9", fillcolor=magenta];
    147 [label="TypeRef: Real\n⟨Real⟩", fillcolor=grey];
    148 [label="BooleanLiteralfalse\n⟨boolean⟩", fillcolor=grey];
    149 [label="MatchCaseIsNode\n⟨boolean⟩
Amount: 9", fillcolor=magenta];
    150 [label="TypeRef: Natural\n⟨Natural⟩", fillcolor=grey];
    151 [label="BooleanLiteralfalse\n⟨boolean⟩", fillcolor=grey];
    152 [label="MatchCaseIsNode", fillcolor=grey, color=red];
    153 [label="TypeRef: Complex\n⟨Complex⟩", fillcolor=grey];
    154 [label="BinOp: '!='", fillcolor=grey, color=red];
    155 [label="VarRef: imaginary", fillcolor=grey, color=red];
    156 [label="Float: 0.00000\n⟨f32⟩", fillcolor=grey];
    157 [label="Name: imaginary", fillcolor=grey, color=red];
    158 [label="MatchDefaultNode\n⟨boolean⟩", fillcolor=grey];
    159 [label="BooleanLiteralfalse\n⟨boolean⟩", fillcolor=grey];
    160 [label="FunNode: isComplex\n⟨fun(number: Number) -> boolean⟩", fillcolor=grey];
    161 [label="TypeRef: boolean\n⟨boolean⟩", fillcolor=grey];
    143 -> 145[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    144 -> 160[taillabel="Not Defined" labeldistance="1" fontname="times  italic" fontsize = 10 color="blue" ];
    145 -> 144[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    145 -> 146[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    145 -> 149[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    145 -> 152[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    145 -> 158[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    146 -> 144[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    147 -> 146[taillabel="Real" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    148 -> 146[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    149 -> 144[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    150 -> 149[taillabel="Natural" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    151 -> 149[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    152 -> 157[taillabel="Not Defined" labeldistance="1" fontname="times  italic" fontsize = 10 color="blue" ];
    152 -> 144[taillabel="[MATCH_EXPRESSION]" labeldistance="1" fontname="times  italic" fontsize = 10 color="blue" ];
    153 -> 152[taillabel="Complex" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    154 -> 152[taillabel="[RHS]" labeldistance="1" fontname="times  italic" fontsize = 10 color="blue" ];
    155 -> 154[taillabel="[LHS]" labeldistance="1" fontname="times  italic" fontsize = 10 color="blue" ];
    156 -> 154[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    157 -> 155[taillabel="[NAME]" labeldistance="1" fontname="times  italic" fontsize = 10 color="blue" ];
    158 -> 144[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
    159 -> 158[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  label = "isComplex(Number)";
}
  subgraph cluster2 {
    node [style=filled, fillcolor=grey];
    162 [label="WasmExpressionNode\n⟨UNKNOWN⟩", fillcolor=grey];
    163 [label="FunNode: InfinityAllocator\n⟨fun() -> Infinity⟩", fillcolor=grey];
    164 [label="TypeRef: Infinity\n⟨Infinity⟩", fillcolor=grey];
    162 -> 163[taillabel="UNKNOWN" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  label = "InfinityAllocator()";
}
  subgraph cluster3 {
    node [style=filled, fillcolor=grey];
    165 [label="WasmExpressionNode\n⟨UNKNOWN⟩", fillcolor=grey];
    166 [label="FunNode: NDetAllocator\n⟨fun() -> NDet⟩", fillcolor=grey];
    167 [label="TypeRef: NDet\n⟨NDet⟩", fillcolor=grey];
    165 -> 166[taillabel="UNKNOWN" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  label = "NDetAllocator()";
}
  subgraph cluster4 {
    node [style=filled, fillcolor=grey];
    168 [label="Name: a\n⟨TestStruct⟩", fillcolor=grey];
    169 [label="WasmExpressionNode\n⟨UNKNOWN⟩", fillcolor=grey];
    170 [label="FunNode: is\n⟨fun(a: TestStruct) -> boolean⟩", fillcolor=grey];
    171 [label="TypeRef: boolean\n⟨boolean⟩", fillcolor=grey];
    169 -> 170[taillabel="UNKNOWN" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  label = "is(TestStruct)";
}
  subgraph cluster5 {
    node [style=filled, fillcolor=grey];
    172 [label="Name: a\n⟨Infinity⟩", fillcolor=grey];
    173 [label="WasmExpressionNode\n⟨UNKNOWN⟩", fillcolor=grey];
    174 [label="FunNode: is\n⟨fun(a: Infinity) -> boolean⟩", fillcolor=grey];
    175 [label="TypeRef: boolean\n⟨boolean⟩", fillcolor=grey];
    173 -> 174[taillabel="UNKNOWN" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  label = "is(Infinity)";
}
  subgraph cluster6 {
    node [style=filled, fillcolor=grey];
    176 [label="Name: a\n⟨NDet⟩", fillcolor=grey];
    177 [label="WasmExpressionNode\n⟨UNKNOWN⟩", fillcolor=grey];
    178 [label="FunNode: is\n⟨fun(a: NDet) -> boolean⟩", fillcolor=grey];
    179 [label="TypeRef: boolean\n⟨boolean⟩", fillcolor=grey];
    177 -> 178[taillabel="UNKNOWN" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  label = "is(NDet)";
}
  subgraph cluster7 {
    node [style=filled, fillcolor=grey];
    180 [label="Name: a\n⟨Real⟩", fillcolor=grey];
    181 [label="WasmExpressionNode\n⟨UNKNOWN⟩", fillcolor=grey];
    182 [label="FunNode: is\n⟨fun(a: Real) -> boolean⟩", fillcolor=grey];
    183 [label="TypeRef: boolean\n⟨boolean⟩", fillcolor=grey];
    181 -> 182[taillabel="UNKNOWN" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  label = "is(Real)";
}
  subgraph cluster8 {
    node [style=filled, fillcolor=grey];
    184 [label="Name: a\n⟨Natural⟩", fillcolor=grey];
    185 [label="WasmExpressionNode\n⟨UNKNOWN⟩", fillcolor=grey];
    186 [label="FunNode: is\n⟨fun(a: Natural) -> boolean⟩", fillcolor=grey];
    187 [label="TypeRef: boolean\n⟨boolean⟩", fillcolor=grey];
    185 -> 186[taillabel="UNKNOWN" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  label = "is(Natural)";
}
  subgraph cluster9 {
    node [style=filled, fillcolor=grey];
    188 [label="Name: a\n⟨Complex⟩", fillcolor=grey];
    189 [label="WasmExpressionNode\n⟨UNKNOWN⟩", fillcolor=grey];
    190 [label="FunNode: is\n⟨fun(a: Complex) -> boolean⟩", fillcolor=grey];
    191 [label="TypeRef: boolean\n⟨boolean⟩", fillcolor=grey];
    189 -> 190[taillabel="UNKNOWN" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  label = "is(Complex)";
}
  subgraph cluster10 {
    node [style=filled, fillcolor=grey];
    192 [label="Name: number\n⟨i32⟩", fillcolor=grey];
    193 [label="WasmExpressionNode\n⟨UNKNOWN⟩", fillcolor=grey];
    194 [label="VarRef: system::memory::malloc\n⟨fun(size: i32) -> i32⟩", fillcolor=grey];
    195 [label="FunNode: NaturalAllocator\n⟨fun(number: i32) -> Natural⟩", fillcolor=grey];
    196 [label="TypeRef: Natural\n⟨Natural⟩", fillcolor=grey];
    193 -> 195[taillabel="UNKNOWN" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  label = "NaturalAllocator(i32)";
}
  subgraph cluster11 {
    node [style=filled, fillcolor=grey];
    197 [label="Name: number\n⟨f32⟩", fillcolor=grey];
    198 [label="WasmExpressionNode\n⟨UNKNOWN⟩", fillcolor=grey];
    199 [label="VarRef: system::memory::malloc\n⟨fun(size: i32) -> i32⟩", fillcolor=grey];
    200 [label="FunNode: RealAllocator\n⟨fun(number: f32) -> Real⟩", fillcolor=grey];
    201 [label="TypeRef: Real\n⟨Real⟩", fillcolor=grey];
    198 -> 200[taillabel="UNKNOWN" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  label = "RealAllocator(f32)";
}
  subgraph cluster12 {
    node [style=filled, fillcolor=grey];
    202 [label="Name: real\n⟨f32⟩", fillcolor=grey];
    203 [label="Name: imaginary\n⟨f32⟩", fillcolor=grey];
    204 [label="WasmExpressionNode\n⟨UNKNOWN⟩", fillcolor=grey];
    205 [label="VarRef: system::memory::malloc\n⟨fun(size: i32) -> i32⟩", fillcolor=grey];
    206 [label="FunNode: ComplexAllocator\n⟨fun(real: f32, imaginary: f32) -> Complex⟩", fillcolor=grey];
    207 [label="TypeRef: Complex\n⟨Complex⟩", fillcolor=grey];
    204 -> 206[taillabel="UNKNOWN" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  label = "ComplexAllocator(f32,f32)";
}
  subgraph cluster13 {
    node [style=filled, fillcolor=grey];
    208 [label="WasmExpressionNode\n⟨UNKNOWN⟩", fillcolor=grey];
    209 [label="FunNode: TestStructAllocator\n⟨fun() -> TestStruct⟩", fillcolor=grey];
    210 [label="TypeRef: TestStruct\n⟨TestStruct⟩", fillcolor=grey];
    208 -> 209[taillabel="UNKNOWN" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  label = "TestStructAllocator()";
}
  1 -> 14[taillabel="Type<i32>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  1 -> 100[taillabel="Type<i32>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  2 -> 10[taillabel="Type<f32>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  2 -> 18[taillabel="Type<f32>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  2 -> 20[taillabel="Type<f32>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  2 -> 92[taillabel="Type<f32>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  2 -> 108[taillabel="Type<f32>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  2 -> 110[taillabel="Type<f32>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  3 -> 30[taillabel="Type<boolean>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  3 -> 50[taillabel="Type<boolean>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  3 -> 56[taillabel="Type<boolean>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  3 -> 62[taillabel="Type<boolean>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  3 -> 68[taillabel="Type<boolean>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  3 -> 74[taillabel="Type<boolean>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  3 -> 80[taillabel="Type<boolean>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  3 -> 161[taillabel="Type<boolean>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  3 -> 171[taillabel="Type<boolean>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  3 -> 175[taillabel="Type<boolean>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  3 -> 179[taillabel="Type<boolean>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  3 -> 183[taillabel="Type<boolean>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  3 -> 187[taillabel="Type<boolean>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  3 -> 191[taillabel="Type<boolean>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  4 -> 5[taillabel="Type<Number>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  4 -> 7[taillabel="Type<Number>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  4 -> 9[taillabel="Type<Number>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  4 -> 13[taillabel="Type<Number>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  4 -> 17[taillabel="Type<Number>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  4 -> 28[taillabel="Type<Number>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  5 -> 6[taillabel="Type<Infinity>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  6 -> 42[taillabel="Type<Infinity>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  6 -> 48[taillabel="Type<Infinity>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  6 -> 124[taillabel="Type<Infinity>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  6 -> 164[taillabel="Type<Infinity>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  7 -> 8[taillabel="Type<NDet>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  8 -> 54[taillabel="Type<NDet>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  8 -> 86[taillabel="Type<NDet>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  8 -> 167[taillabel="Type<NDet>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  9 -> 12[taillabel="Type<Real>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  10 -> 11[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  11 -> 9[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  12 -> 60[taillabel="Type<Real>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  12 -> 94[taillabel="Type<Real>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  12 -> 128[taillabel="Type<Real>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  12 -> 147[taillabel="Type<Real>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  12 -> 201[taillabel="Type<Real>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  13 -> 16[taillabel="Type<Natural>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  14 -> 15[taillabel="i32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  15 -> 13[taillabel="i32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  16 -> 66[taillabel="Type<Natural>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  16 -> 102[taillabel="Type<Natural>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  16 -> 133[taillabel="Type<Natural>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  16 -> 150[taillabel="Type<Natural>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  16 -> 196[taillabel="Type<Natural>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  17 -> 22[taillabel="Type<Complex>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  18 -> 19[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  19 -> 17[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  20 -> 21[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  21 -> 17[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  22 -> 72[taillabel="Type<Complex>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  22 -> 112[taillabel="Type<Complex>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  22 -> 138[taillabel="Type<Complex>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  22 -> 153[taillabel="Type<Complex>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  22 -> 207[taillabel="Type<Complex>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  23 -> 24[taillabel="Type<TestStruct>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  24 -> 78[taillabel="Type<TestStruct>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  24 -> 118[taillabel="Type<TestStruct>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  24 -> 210[taillabel="Type<TestStruct>" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  25 -> 32[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  26 -> 25[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  27 -> 31[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  27 -> 26[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  28 -> 29[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  29 -> 27[taillabel="Number" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  30 -> 27[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  32 -> 123[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  32 -> 126[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  32 -> 131[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  32 -> 136[taillabel="fun(number: Number) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  33 -> 38[taillabel="fun() -> void" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  34 -> 33[taillabel="fun() -> void" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  35 -> 37[taillabel="fun() -> void" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  35 -> 34[taillabel="fun() -> void" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  36 -> 35[taillabel="void" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  39 -> 44[taillabel="fun() -> Infinity" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  40 -> 39[taillabel="fun() -> Infinity" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  41 -> 43[taillabel="fun() -> Infinity" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  41 -> 40[taillabel="fun() -> Infinity" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  42 -> 41[taillabel="Infinity" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  45 -> 82[taillabel="fun(a: Infinity) -> boolean & fun(a: NDet) -> boolean & fun(a: Real) -> boolean & fun(a: Natural) -> boolean & fun(a: Complex) -> boolean & fun(a: TestStruct) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  46 -> 45[taillabel="fun(a: Infinity) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  47 -> 51[taillabel="fun(a: Infinity) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  47 -> 46[taillabel="fun(a: Infinity) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  48 -> 49[taillabel="Infinity" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  49 -> 47[taillabel="Infinity" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  50 -> 47[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  52 -> 45[taillabel="fun(a: NDet) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  53 -> 57[taillabel="fun(a: NDet) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  53 -> 52[taillabel="fun(a: NDet) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  54 -> 55[taillabel="NDet" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  55 -> 53[taillabel="NDet" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  56 -> 53[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  58 -> 45[taillabel="fun(a: Real) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  59 -> 63[taillabel="fun(a: Real) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  59 -> 58[taillabel="fun(a: Real) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  60 -> 61[taillabel="Real" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  61 -> 59[taillabel="Real" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  62 -> 59[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  64 -> 45[taillabel="fun(a: Natural) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  65 -> 69[taillabel="fun(a: Natural) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  65 -> 64[taillabel="fun(a: Natural) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  66 -> 67[taillabel="Natural" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  67 -> 65[taillabel="Natural" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  68 -> 65[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  70 -> 45[taillabel="fun(a: Complex) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  71 -> 75[taillabel="fun(a: Complex) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  71 -> 70[taillabel="fun(a: Complex) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  72 -> 73[taillabel="Complex" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  73 -> 71[taillabel="Complex" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  74 -> 71[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  76 -> 45[taillabel="fun(a: TestStruct) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  77 -> 81[taillabel="fun(a: TestStruct) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  77 -> 76[taillabel="fun(a: TestStruct) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  78 -> 79[taillabel="TestStruct" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  79 -> 77[taillabel="TestStruct" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  80 -> 77[taillabel="boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  82 -> 146[taillabel="fun(a: Infinity) -> boolean & fun(a: NDet) -> boolean & fun(a: Real) -> boolean & fun(a: Natural) -> boolean & fun(a: Complex) -> boolean & fun(a: TestStruct) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  82 -> 149[taillabel="fun(a: Infinity) -> boolean & fun(a: NDet) -> boolean & fun(a: Real) -> boolean & fun(a: Natural) -> boolean & fun(a: Complex) -> boolean & fun(a: TestStruct) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  82 -> 152[taillabel="fun(a: Infinity) -> boolean & fun(a: NDet) -> boolean & fun(a: Real) -> boolean & fun(a: Natural) -> boolean & fun(a: Complex) -> boolean & fun(a: TestStruct) -> boolean" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  83 -> 88[taillabel="fun() -> NDet" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  84 -> 83[taillabel="fun() -> NDet" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  85 -> 87[taillabel="fun() -> NDet" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  85 -> 84[taillabel="fun() -> NDet" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  86 -> 85[taillabel="NDet" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  89 -> 96[taillabel="fun(number: f32) -> Real" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  90 -> 89[taillabel="fun(number: f32) -> Real" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  91 -> 95[taillabel="fun(number: f32) -> Real" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  91 -> 90[taillabel="fun(number: f32) -> Real" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  92 -> 93[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  93 -> 91[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  94 -> 91[taillabel="Real" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  97 -> 104[taillabel="fun(number: i32) -> Natural" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  98 -> 97[taillabel="fun(number: i32) -> Natural" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  99 -> 103[taillabel="fun(number: i32) -> Natural" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  99 -> 98[taillabel="fun(number: i32) -> Natural" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  100 -> 101[taillabel="i32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  101 -> 99[taillabel="i32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  102 -> 99[taillabel="Natural" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  105 -> 114[taillabel="fun(real: f32, imaginary: f32) -> Complex" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  106 -> 105[taillabel="fun(real: f32, imaginary: f32) -> Complex" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  107 -> 113[taillabel="fun(real: f32, imaginary: f32) -> Complex" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  107 -> 106[taillabel="fun(real: f32, imaginary: f32) -> Complex" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  108 -> 109[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  109 -> 107[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  110 -> 111[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  111 -> 107[taillabel="f32" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  112 -> 107[taillabel="Complex" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  115 -> 120[taillabel="fun() -> TestStruct" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  116 -> 115[taillabel="fun() -> TestStruct" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  117 -> 119[taillabel="fun() -> TestStruct" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  117 -> 116[taillabel="fun() -> TestStruct" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  118 -> 117[taillabel="TestStruct" labeldistance="1" fontname="times  italic" fontsize = 10 color="black" ];
  label="";
}
