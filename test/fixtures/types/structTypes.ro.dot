digraph Document {
  node [shape=box,fontsize=10]; rankdir=LR;
  1 [label="Name: Infinity\n(type (alias Infinity (struct Infinity)))", fillcolor=grey];
  2 [label="FunOverload: apply\n(fun 'apply' () (alias Infinity))", fillcolor=grey];
  3 [label="FunNode: apply\n(fun 'apply' () (alias Infinity))", fillcolor=grey];
  4 [label="Ref: Infinity\n(type (alias Infinity (struct Infinity)))", fillcolor=grey];
  5 [label="Name: apply\n(fun 'apply' () (alias Infinity))", fillcolor=grey];
  6 [label="FunOverload: is\n(fun 'is' ((alias Infinity)) (alias boolean))", fillcolor=grey];
  7 [label="FunNode: is\n(fun 'is' ((alias Infinity)) (alias boolean))", fillcolor=grey];
  8 [label="Ref: Infinity\n(type (alias Infinity (struct Infinity)))", fillcolor=grey];
  9 [label="Name: a\n(type (alias Infinity (struct Infinity)))", fillcolor=grey];
  10 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  11 [label="Name: is\n(fun 'is' ((alias Infinity)) (alias boolean))", fillcolor=grey];
  12 [label="FunOverload: ==\n(fun '==' ((alias Infinity) (alias ref)) (alias boolean))", fillcolor=grey];
  13 [label="FunNode: ==\n(fun '==' ((alias Infinity) (alias ref)) (alias boolean))", fillcolor=grey];
  14 [label="Ref: Infinity\n(type (alias Infinity (struct Infinity)))", fillcolor=grey];
  15 [label="Name: a\n(alias Infinity (struct Infinity))", fillcolor=grey];
  16 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  17 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
  18 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  19 [label="Name: ==\n(fun '==' ((alias Infinity) (alias ref)) (alias boolean))", fillcolor=grey];
  20 [label="FunOverload: !=\n(fun '!=' ((alias Infinity) (alias ref)) (alias boolean))", fillcolor=grey];
  21 [label="FunNode: !=\n(fun '!=' ((alias Infinity) (alias ref)) (alias boolean))", fillcolor=grey];
  22 [label="Ref: Infinity\n(type (alias Infinity (struct Infinity)))", fillcolor=grey];
  23 [label="Name: a\n(alias Infinity (struct Infinity))", fillcolor=grey];
  24 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  25 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
  26 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  27 [label="Name: !=\n(fun '!=' ((alias Infinity) (alias ref)) (alias boolean))", fillcolor=grey];
  28 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias Infinity) (alias i32)) (alias void))", fillcolor=grey];
  29 [label="FunNode: store\n(fun 'store' ((alias ref) (alias Infinity) (alias i32)) (alias void))", fillcolor=grey];
  30 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  31 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  32 [label="Ref: Infinity\n(type (alias Infinity (struct Infinity)))", fillcolor=grey];
  33 [label="Name: rhs\n(alias Infinity (struct Infinity))", fillcolor=grey];
  34 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  35 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  36 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  37 [label="Name: store\n(fun 'store' ((alias ref) (alias Infinity) (alias i32)) (alias void))", fillcolor=grey];
  38 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias i32)) (alias Infinity))", fillcolor=grey];
  39 [label="FunNode: load\n(fun 'load' ((alias ref) (alias i32)) (alias Infinity))", fillcolor=grey];
  40 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  41 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  42 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  43 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  44 [label="Ref: Infinity\n(type (alias Infinity (struct Infinity)))", fillcolor=grey];
  45 [label="Name: load\n(fun 'load' ((alias ref) (alias i32)) (alias Infinity))", fillcolor=grey];
  46 [label="Name: NDet\n(type (alias NDet (struct NDet)))", fillcolor=grey];
  47 [label="FunOverload: apply\n(fun 'apply' () (alias NDet))", fillcolor=grey];
  48 [label="FunNode: apply\n(fun 'apply' () (alias NDet))", fillcolor=grey];
  49 [label="Ref: NDet\n(type (alias NDet (struct NDet)))", fillcolor=grey];
  50 [label="Name: apply\n(fun 'apply' () (alias NDet))", fillcolor=grey];
  51 [label="FunOverload: is\n(fun 'is' ((alias NDet)) (alias boolean))", fillcolor=grey];
  52 [label="FunNode: is\n(fun 'is' ((alias NDet)) (alias boolean))", fillcolor=grey];
  53 [label="Ref: NDet\n(type (alias NDet (struct NDet)))", fillcolor=grey];
  54 [label="Name: a\n(type (alias NDet (struct NDet)))", fillcolor=grey];
  55 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  56 [label="Name: is\n(fun 'is' ((alias NDet)) (alias boolean))", fillcolor=grey];
  57 [label="FunOverload: ==\n(fun '==' ((alias NDet) (alias ref)) (alias boolean))", fillcolor=grey];
  58 [label="FunNode: ==\n(fun '==' ((alias NDet) (alias ref)) (alias boolean))", fillcolor=grey];
  59 [label="Ref: NDet\n(type (alias NDet (struct NDet)))", fillcolor=grey];
  60 [label="Name: a\n(alias NDet (struct NDet))", fillcolor=grey];
  61 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  62 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
  63 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  64 [label="Name: ==\n(fun '==' ((alias NDet) (alias ref)) (alias boolean))", fillcolor=grey];
  65 [label="FunOverload: !=\n(fun '!=' ((alias NDet) (alias ref)) (alias boolean))", fillcolor=grey];
  66 [label="FunNode: !=\n(fun '!=' ((alias NDet) (alias ref)) (alias boolean))", fillcolor=grey];
  67 [label="Ref: NDet\n(type (alias NDet (struct NDet)))", fillcolor=grey];
  68 [label="Name: a\n(alias NDet (struct NDet))", fillcolor=grey];
  69 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  70 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
  71 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  72 [label="Name: !=\n(fun '!=' ((alias NDet) (alias ref)) (alias boolean))", fillcolor=grey];
  73 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias NDet) (alias i32)) (alias void))", fillcolor=grey];
  74 [label="FunNode: store\n(fun 'store' ((alias ref) (alias NDet) (alias i32)) (alias void))", fillcolor=grey];
  75 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  76 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  77 [label="Ref: NDet\n(type (alias NDet (struct NDet)))", fillcolor=grey];
  78 [label="Name: rhs\n(alias NDet (struct NDet))", fillcolor=grey];
  79 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  80 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  81 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  82 [label="Name: store\n(fun 'store' ((alias ref) (alias NDet) (alias i32)) (alias void))", fillcolor=grey];
  83 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias i32)) (alias NDet))", fillcolor=grey];
  84 [label="FunNode: load\n(fun 'load' ((alias ref) (alias i32)) (alias NDet))", fillcolor=grey];
  85 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  86 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  87 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  88 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  89 [label="Ref: NDet\n(type (alias NDet (struct NDet)))", fillcolor=grey];
  90 [label="Name: load\n(fun 'load' ((alias ref) (alias i32)) (alias NDet))", fillcolor=grey];
  91 [label="Name: Real\n(type (alias Real (struct Real)))", fillcolor=grey];
  92 [label="FunOverload: discriminant\n(fun 'discriminant' () (alias u64))", fillcolor=grey];
  93 [label="FunNode: discriminant\n(fun 'discriminant' () (alias u64))", fillcolor=grey];
  94 [label="Ref: u64\n(type (alias u64 (native u64)))", fillcolor=grey];
  95 [label="Name: discriminant\n(fun 'discriminant' () (alias u64))", fillcolor=grey];
  96 [label="FunOverload: sizeOf\n(fun 'sizeOf' () (alias i32))", fillcolor=grey];
  97 [label="FunNode: sizeOf\n(fun 'sizeOf' () (alias i32))", fillcolor=grey];
  98 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  99 [label="Name: sizeOf\n(fun 'sizeOf' () (alias i32))", fillcolor=grey];
  100 [label="FunOverload: allocationSize\n(fun 'allocationSize' () (alias u32))", fillcolor=grey];
  101 [label="FunNode: allocationSize\n(fun 'allocationSize' () (alias u32))", fillcolor=grey];
  102 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
  103 [label="Name: allocationSize\n(fun 'allocationSize' () (alias u32))", fillcolor=grey];
  104 [label="FunOverload: apply\n(fun 'apply' ((alias f32)) (alias Real))", fillcolor=grey];
  105 [label="FunNode: apply\n(fun 'apply' ((alias f32)) (alias Real))", fillcolor=grey];
  106 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
  107 [label="Name: number\n(alias f32 (native f32))", fillcolor=grey];
  108 [label="Ref: Real\n(type (alias Real (struct Real)))", fillcolor=grey];
  109 [label="Name: apply\n(fun 'apply' ((alias f32)) (alias Real))", fillcolor=grey];
  110 [label="FunOverload: fromPointer\n(fun 'fromPointer' ((union (alias i32) (alias u32))) (alias Real))", fillcolor=grey];
  111 [label="FunNode: fromPointer\n(fun 'fromPointer' ((union (alias i32) (alias u32))) (alias Real))", fillcolor=grey];
  112 [label="UnionTypeNode\n(type (union (alias i32 (native i32)) (alias u32 (native u32))))", fillcolor=grey];
  113 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  114 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
  115 [label="Name: ptr\n(type (union (alias i32 (native i32)) (alias u32 (native u32))))", fillcolor=grey];
  116 [label="Ref: Real\n(type (alias Real (struct Real)))", fillcolor=grey];
  117 [label="Name: fromPointer\n(fun 'fromPointer' ((union (alias i32) (alias u32))) (alias Real))", fillcolor=grey];
  118 [label="FunOverload: property_number\n(intersection (fun 'property_number' ((alias Real)) (alias f32)) (fun 'property_number' ((alias Real) (alias f32)) (alias void)))", fillcolor=grey];
  119 [label="FunNode: property_number\n(fun 'property_number' ((alias Real)) (alias f32))", fillcolor=grey];
  120 [label="Ref: Real\n(type (alias Real (struct Real)))", fillcolor=grey];
  121 [label="Name: target\n(alias Real (struct Real))", fillcolor=grey];
  122 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
  123 [label="FunNode: property_number\n(fun 'property_number' ((alias Real) (alias f32)) (alias void))", fillcolor=grey];
  124 [label="Ref: Real\n(type (alias Real (struct Real)))", fillcolor=grey];
  125 [label="Name: target\n(alias Real (struct Real))", fillcolor=grey];
  126 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
  127 [label="Name: value\n(alias f32 (native f32))", fillcolor=grey];
  128 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  129 [label="Name: property_number\n(intersection (fun 'property_number' ((alias Real)) (alias f32)) (fun 'property_number' ((alias Real) (alias f32)) (alias void)))", fillcolor=grey];
  130 [label="FunOverload: set$number\n(fun 'set$number' ((alias Real) (alias f32)) (alias void))", fillcolor=grey];
  131 [label="FunNode: set$number\n(fun 'set$number' ((alias Real) (alias f32)) (alias void))", fillcolor=grey];
  132 [label="Ref: Real\n(type (alias Real (struct Real)))", fillcolor=grey];
  133 [label="Name: target\n(type (alias Real (struct Real)))", fillcolor=grey];
  134 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
  135 [label="Name: value\n(alias f32 (native f32))", fillcolor=grey];
  136 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  137 [label="Name: set$number\n(fun 'set$number' ((alias Real) (alias f32)) (alias void))", fillcolor=grey];
  138 [label="FunOverload: is\n(fun 'is' ((alias Real)) (alias boolean))", fillcolor=grey];
  139 [label="FunNode: is\n(fun 'is' ((alias Real)) (alias boolean))", fillcolor=grey];
  140 [label="Ref: Real\n(type (alias Real (struct Real)))", fillcolor=grey];
  141 [label="Name: a\n(type (alias Real (struct Real)))", fillcolor=grey];
  142 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  143 [label="Name: is\n(fun 'is' ((alias Real)) (alias boolean))", fillcolor=grey];
  144 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias Real) (alias i32)) (alias void))", fillcolor=grey];
  145 [label="FunNode: store\n(fun 'store' ((alias ref) (alias Real) (alias i32)) (alias void))", fillcolor=grey];
  146 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  147 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  148 [label="Ref: Real\n(type (alias Real (struct Real)))", fillcolor=grey];
  149 [label="Name: rhs\n(alias Real (struct Real))", fillcolor=grey];
  150 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  151 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  152 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  153 [label="Name: store\n(fun 'store' ((alias ref) (alias Real) (alias i32)) (alias void))", fillcolor=grey];
  154 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias i32)) (alias Real))", fillcolor=grey];
  155 [label="FunNode: load\n(fun 'load' ((alias ref) (alias i32)) (alias Real))", fillcolor=grey];
  156 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  157 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  158 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  159 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  160 [label="Ref: Real\n(type (alias Real (struct Real)))", fillcolor=grey];
  161 [label="Name: load\n(fun 'load' ((alias ref) (alias i32)) (alias Real))", fillcolor=grey];
  162 [label="Name: Natural\n(type (alias Natural (struct Natural)))", fillcolor=grey];
  163 [label="FunOverload: discriminant\n(fun 'discriminant' () (alias u64))", fillcolor=grey];
  164 [label="FunNode: discriminant\n(fun 'discriminant' () (alias u64))", fillcolor=grey];
  165 [label="Ref: u64\n(type (alias u64 (native u64)))", fillcolor=grey];
  166 [label="Name: discriminant\n(fun 'discriminant' () (alias u64))", fillcolor=grey];
  167 [label="FunOverload: sizeOf\n(fun 'sizeOf' () (alias i32))", fillcolor=grey];
  168 [label="FunNode: sizeOf\n(fun 'sizeOf' () (alias i32))", fillcolor=grey];
  169 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  170 [label="Name: sizeOf\n(fun 'sizeOf' () (alias i32))", fillcolor=grey];
  171 [label="FunOverload: allocationSize\n(fun 'allocationSize' () (alias u32))", fillcolor=grey];
  172 [label="FunNode: allocationSize\n(fun 'allocationSize' () (alias u32))", fillcolor=grey];
  173 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
  174 [label="Name: allocationSize\n(fun 'allocationSize' () (alias u32))", fillcolor=grey];
  175 [label="FunOverload: apply\n(fun 'apply' ((alias i32)) (alias Natural))", fillcolor=grey];
  176 [label="FunNode: apply\n(fun 'apply' ((alias i32)) (alias Natural))", fillcolor=grey];
  177 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  178 [label="Name: number\n(alias i32 (native i32))", fillcolor=grey];
  179 [label="Ref: Natural\n(type (alias Natural (struct Natural)))", fillcolor=grey];
  180 [label="Name: apply\n(fun 'apply' ((alias i32)) (alias Natural))", fillcolor=grey];
  181 [label="FunOverload: fromPointer\n(fun 'fromPointer' ((union (alias i32) (alias u32))) (alias Natural))", fillcolor=grey];
  182 [label="FunNode: fromPointer\n(fun 'fromPointer' ((union (alias i32) (alias u32))) (alias Natural))", fillcolor=grey];
  183 [label="UnionTypeNode\n(type (union (alias i32 (native i32)) (alias u32 (native u32))))", fillcolor=grey];
  184 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  185 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
  186 [label="Name: ptr\n(type (union (alias i32 (native i32)) (alias u32 (native u32))))", fillcolor=grey];
  187 [label="Ref: Natural\n(type (alias Natural (struct Natural)))", fillcolor=grey];
  188 [label="Name: fromPointer\n(fun 'fromPointer' ((union (alias i32) (alias u32))) (alias Natural))", fillcolor=grey];
  189 [label="FunOverload: property_number\n(intersection (fun 'property_number' ((alias Natural)) (alias i32)) (fun 'property_number' ((alias Natural) (alias i32)) (alias void)))", fillcolor=grey];
  190 [label="FunNode: property_number\n(fun 'property_number' ((alias Natural)) (alias i32))", fillcolor=grey];
  191 [label="Ref: Natural\n(type (alias Natural (struct Natural)))", fillcolor=grey];
  192 [label="Name: target\n(alias Natural (struct Natural))", fillcolor=grey];
  193 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  194 [label="FunNode: property_number\n(fun 'property_number' ((alias Natural) (alias i32)) (alias void))", fillcolor=grey];
  195 [label="Ref: Natural\n(type (alias Natural (struct Natural)))", fillcolor=grey];
  196 [label="Name: target\n(alias Natural (struct Natural))", fillcolor=grey];
  197 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  198 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
  199 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  200 [label="Name: property_number\n(intersection (fun 'property_number' ((alias Natural)) (alias i32)) (fun 'property_number' ((alias Natural) (alias i32)) (alias void)))", fillcolor=grey];
  201 [label="FunOverload: set$number\n(fun 'set$number' ((alias Natural) (alias i32)) (alias void))", fillcolor=grey];
  202 [label="FunNode: set$number\n(fun 'set$number' ((alias Natural) (alias i32)) (alias void))", fillcolor=grey];
  203 [label="Ref: Natural\n(type (alias Natural (struct Natural)))", fillcolor=grey];
  204 [label="Name: target\n(type (alias Natural (struct Natural)))", fillcolor=grey];
  205 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  206 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
  207 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  208 [label="Name: set$number\n(fun 'set$number' ((alias Natural) (alias i32)) (alias void))", fillcolor=grey];
  209 [label="FunOverload: is\n(fun 'is' ((alias Natural)) (alias boolean))", fillcolor=grey];
  210 [label="FunNode: is\n(fun 'is' ((alias Natural)) (alias boolean))", fillcolor=grey];
  211 [label="Ref: Natural\n(type (alias Natural (struct Natural)))", fillcolor=grey];
  212 [label="Name: a\n(type (alias Natural (struct Natural)))", fillcolor=grey];
  213 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  214 [label="Name: is\n(fun 'is' ((alias Natural)) (alias boolean))", fillcolor=grey];
  215 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias Natural) (alias i32)) (alias void))", fillcolor=grey];
  216 [label="FunNode: store\n(fun 'store' ((alias ref) (alias Natural) (alias i32)) (alias void))", fillcolor=grey];
  217 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  218 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  219 [label="Ref: Natural\n(type (alias Natural (struct Natural)))", fillcolor=grey];
  220 [label="Name: rhs\n(alias Natural (struct Natural))", fillcolor=grey];
  221 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  222 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  223 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  224 [label="Name: store\n(fun 'store' ((alias ref) (alias Natural) (alias i32)) (alias void))", fillcolor=grey];
  225 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias i32)) (alias Natural))", fillcolor=grey];
  226 [label="FunNode: load\n(fun 'load' ((alias ref) (alias i32)) (alias Natural))", fillcolor=grey];
  227 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  228 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  229 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  230 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  231 [label="Ref: Natural\n(type (alias Natural (struct Natural)))", fillcolor=grey];
  232 [label="Name: load\n(fun 'load' ((alias ref) (alias i32)) (alias Natural))", fillcolor=grey];
  233 [label="Name: Complex\n(type (alias Complex (struct Complex)))", fillcolor=grey];
  234 [label="FunOverload: discriminant\n(fun 'discriminant' () (alias u64))", fillcolor=grey];
  235 [label="FunNode: discriminant\n(fun 'discriminant' () (alias u64))", fillcolor=grey];
  236 [label="Ref: u64\n(type (alias u64 (native u64)))", fillcolor=grey];
  237 [label="Name: discriminant\n(fun 'discriminant' () (alias u64))", fillcolor=grey];
  238 [label="FunOverload: sizeOf\n(fun 'sizeOf' () (alias i32))", fillcolor=grey];
  239 [label="FunNode: sizeOf\n(fun 'sizeOf' () (alias i32))", fillcolor=grey];
  240 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  241 [label="Name: sizeOf\n(fun 'sizeOf' () (alias i32))", fillcolor=grey];
  242 [label="FunOverload: allocationSize\n(fun 'allocationSize' () (alias u32))", fillcolor=grey];
  243 [label="FunNode: allocationSize\n(fun 'allocationSize' () (alias u32))", fillcolor=grey];
  244 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
  245 [label="Name: allocationSize\n(fun 'allocationSize' () (alias u32))", fillcolor=grey];
  246 [label="FunOverload: apply\n(fun 'apply' ((alias f32) (alias f32)) (alias Complex))", fillcolor=grey];
  247 [label="FunNode: apply\n(fun 'apply' ((alias f32) (alias f32)) (alias Complex))", fillcolor=grey];
  248 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
  249 [label="Name: real\n(alias f32 (native f32))", fillcolor=grey];
  250 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
  251 [label="Name: imaginary\n(alias f32 (native f32))", fillcolor=grey];
  252 [label="Ref: Complex\n(type (alias Complex (struct Complex)))", fillcolor=grey];
  253 [label="Name: apply\n(fun 'apply' ((alias f32) (alias f32)) (alias Complex))", fillcolor=grey];
  254 [label="FunOverload: fromPointer\n(fun 'fromPointer' ((union (alias i32) (alias u32))) (alias Complex))", fillcolor=grey];
  255 [label="FunNode: fromPointer\n(fun 'fromPointer' ((union (alias i32) (alias u32))) (alias Complex))", fillcolor=grey];
  256 [label="UnionTypeNode\n(type (union (alias i32 (native i32)) (alias u32 (native u32))))", fillcolor=grey];
  257 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  258 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
  259 [label="Name: ptr\n(type (union (alias i32 (native i32)) (alias u32 (native u32))))", fillcolor=grey];
  260 [label="Ref: Complex\n(type (alias Complex (struct Complex)))", fillcolor=grey];
  261 [label="Name: fromPointer\n(fun 'fromPointer' ((union (alias i32) (alias u32))) (alias Complex))", fillcolor=grey];
  262 [label="FunOverload: property_real\n(intersection (fun 'property_real' ((alias Complex)) (alias f32)) (fun 'property_real' ((alias Complex) (alias f32)) (alias void)))", fillcolor=grey];
  263 [label="FunNode: property_real\n(fun 'property_real' ((alias Complex)) (alias f32))", fillcolor=grey];
  264 [label="Ref: Complex\n(type (alias Complex (struct Complex)))", fillcolor=grey];
  265 [label="Name: target\n(alias Complex (struct Complex))", fillcolor=grey];
  266 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
  267 [label="FunNode: property_real\n(fun 'property_real' ((alias Complex) (alias f32)) (alias void))", fillcolor=grey];
  268 [label="Ref: Complex\n(type (alias Complex (struct Complex)))", fillcolor=grey];
  269 [label="Name: target\n(alias Complex (struct Complex))", fillcolor=grey];
  270 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
  271 [label="Name: value\n(alias f32 (native f32))", fillcolor=grey];
  272 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  273 [label="Name: property_real\n(intersection (fun 'property_real' ((alias Complex)) (alias f32)) (fun 'property_real' ((alias Complex) (alias f32)) (alias void)))", fillcolor=grey];
  274 [label="FunOverload: set$real\n(fun 'set$real' ((alias Complex) (alias f32)) (alias void))", fillcolor=grey];
  275 [label="FunNode: set$real\n(fun 'set$real' ((alias Complex) (alias f32)) (alias void))", fillcolor=grey];
  276 [label="Ref: Complex\n(type (alias Complex (struct Complex)))", fillcolor=grey];
  277 [label="Name: target\n(type (alias Complex (struct Complex)))", fillcolor=grey];
  278 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
  279 [label="Name: value\n(alias f32 (native f32))", fillcolor=grey];
  280 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  281 [label="Name: set$real\n(fun 'set$real' ((alias Complex) (alias f32)) (alias void))", fillcolor=grey];
  282 [label="FunOverload: property_imaginary\n(intersection (fun 'property_imaginary' ((alias Complex)) (alias f32)) (fun 'property_imaginary' ((alias Complex) (alias f32)) (alias void)))", fillcolor=grey];
  283 [label="FunNode: property_imaginary\n(fun 'property_imaginary' ((alias Complex)) (alias f32))", fillcolor=grey];
  284 [label="Ref: Complex\n(type (alias Complex (struct Complex)))", fillcolor=grey];
  285 [label="Name: target\n(alias Complex (struct Complex))", fillcolor=grey];
  286 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
  287 [label="FunNode: property_imaginary\n(fun 'property_imaginary' ((alias Complex) (alias f32)) (alias void))", fillcolor=grey];
  288 [label="Ref: Complex\n(type (alias Complex (struct Complex)))", fillcolor=grey];
  289 [label="Name: target\n(alias Complex (struct Complex))", fillcolor=grey];
  290 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
  291 [label="Name: value\n(alias f32 (native f32))", fillcolor=grey];
  292 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  293 [label="Name: property_imaginary\n(intersection (fun 'property_imaginary' ((alias Complex)) (alias f32)) (fun 'property_imaginary' ((alias Complex) (alias f32)) (alias void)))", fillcolor=grey];
  294 [label="FunOverload: set$imaginary\n(fun 'set$imaginary' ((alias Complex) (alias f32)) (alias void))", fillcolor=grey];
  295 [label="FunNode: set$imaginary\n(fun 'set$imaginary' ((alias Complex) (alias f32)) (alias void))", fillcolor=grey];
  296 [label="Ref: Complex\n(type (alias Complex (struct Complex)))", fillcolor=grey];
  297 [label="Name: target\n(type (alias Complex (struct Complex)))", fillcolor=grey];
  298 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
  299 [label="Name: value\n(alias f32 (native f32))", fillcolor=grey];
  300 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  301 [label="Name: set$imaginary\n(fun 'set$imaginary' ((alias Complex) (alias f32)) (alias void))", fillcolor=grey];
  302 [label="FunOverload: is\n(fun 'is' ((alias Complex)) (alias boolean))", fillcolor=grey];
  303 [label="FunNode: is\n(fun 'is' ((alias Complex)) (alias boolean))", fillcolor=grey];
  304 [label="Ref: Complex\n(type (alias Complex (struct Complex)))", fillcolor=grey];
  305 [label="Name: a\n(type (alias Complex (struct Complex)))", fillcolor=grey];
  306 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  307 [label="Name: is\n(fun 'is' ((alias Complex)) (alias boolean))", fillcolor=grey];
  308 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias Complex) (alias i32)) (alias void))", fillcolor=grey];
  309 [label="FunNode: store\n(fun 'store' ((alias ref) (alias Complex) (alias i32)) (alias void))", fillcolor=grey];
  310 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  311 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  312 [label="Ref: Complex\n(type (alias Complex (struct Complex)))", fillcolor=grey];
  313 [label="Name: rhs\n(alias Complex (struct Complex))", fillcolor=grey];
  314 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  315 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  316 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  317 [label="Name: store\n(fun 'store' ((alias ref) (alias Complex) (alias i32)) (alias void))", fillcolor=grey];
  318 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias i32)) (alias Complex))", fillcolor=grey];
  319 [label="FunNode: load\n(fun 'load' ((alias ref) (alias i32)) (alias Complex))", fillcolor=grey];
  320 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  321 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  322 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  323 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  324 [label="Ref: Complex\n(type (alias Complex (struct Complex)))", fillcolor=grey];
  325 [label="Name: load\n(fun 'load' ((alias ref) (alias i32)) (alias Complex))", fillcolor=grey];
  326 [label="Name: Number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  327 [label="UnionTypeNode\n(type (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex))))", fillcolor=grey];
  328 [label="Ref: Infinity\n(type (alias Infinity (struct Infinity)))", fillcolor=grey];
  329 [label="Ref: NDet\n(type (alias NDet (struct NDet)))", fillcolor=grey];
  330 [label="Ref: Real\n(type (alias Real (struct Real)))", fillcolor=grey];
  331 [label="Ref: Natural\n(type (alias Natural (struct Natural)))", fillcolor=grey];
  332 [label="Ref: Complex\n(type (alias Complex (struct Complex)))", fillcolor=grey];
  333 [label="FunOverload: is\n(fun 'is' ((alias Number)) (alias boolean))", fillcolor=grey];
  334 [label="FunNode: is\n(fun 'is' ((alias Number)) (alias boolean))", fillcolor=grey];
  335 [label="Ref: Number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  336 [label="Name: a\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  337 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  338 [label="Name: is\n(fun 'is' ((alias Number)) (alias boolean))", fillcolor=grey];
  339 [label="FunOverload: ==\n(fun '==' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
  340 [label="FunNode: ==\n(fun '==' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
  341 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  342 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  343 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  344 [label="Name: rhs\n(alias ref (ref ?))", fillcolor=grey];
  345 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  346 [label="Name: ==\n(fun '==' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
  347 [label="FunOverload: !=\n(fun '!=' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
  348 [label="FunNode: !=\n(fun '!=' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
  349 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  350 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  351 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  352 [label="Name: rhs\n(alias ref (ref ?))", fillcolor=grey];
  353 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  354 [label="Name: !=\n(fun '!=' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
  355 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias Number) (alias i32)) (alias void))", fillcolor=grey];
  356 [label="FunNode: store\n(fun 'store' ((alias ref) (alias Number) (alias i32)) (alias void))", fillcolor=grey];
  357 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  358 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  359 [label="Ref: Number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  360 [label="Name: rhs\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  361 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  362 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  363 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  364 [label="Name: store\n(fun 'store' ((alias ref) (alias Number) (alias i32)) (alias void))", fillcolor=grey];
  365 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias i32)) (alias Number))", fillcolor=grey];
  366 [label="FunNode: load\n(fun 'load' ((alias ref) (alias i32)) (alias Number))", fillcolor=grey];
  367 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  368 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  369 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  370 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  371 [label="Ref: Number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  372 [label="Name: load\n(fun 'load' ((alias ref) (alias i32)) (alias Number))", fillcolor=grey];
  373 [label="FunOverload: as\n(fun 'as' ((alias Infinity)) (alias Number))", fillcolor=grey];
  374 [label="FunNode: as\n(fun 'as' ((alias Infinity)) (alias Number))", fillcolor=grey];
  375 [label="Ref: Infinity\n(type (alias Infinity (struct Infinity)))", fillcolor=grey];
  376 [label="Name: a\n(alias Infinity (struct Infinity))", fillcolor=grey];
  377 [label="Ref: Number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  378 [label="Name: as\n(fun 'as' ((alias Infinity)) (alias Number))", fillcolor=grey];
  379 [label="FunOverload: as\n(fun 'as' ((alias NDet)) (alias Number))", fillcolor=grey];
  380 [label="FunNode: as\n(fun 'as' ((alias NDet)) (alias Number))", fillcolor=grey];
  381 [label="Ref: NDet\n(type (alias NDet (struct NDet)))", fillcolor=grey];
  382 [label="Name: a\n(alias NDet (struct NDet))", fillcolor=grey];
  383 [label="Ref: Number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  384 [label="Name: as\n(fun 'as' ((alias NDet)) (alias Number))", fillcolor=grey];
  385 [label="FunOverload: as\n(fun 'as' ((alias Real)) (alias Number))", fillcolor=grey];
  386 [label="FunNode: as\n(fun 'as' ((alias Real)) (alias Number))", fillcolor=grey];
  387 [label="Ref: Real\n(type (alias Real (struct Real)))", fillcolor=grey];
  388 [label="Name: a\n(alias Real (struct Real))", fillcolor=grey];
  389 [label="Ref: Number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  390 [label="Name: as\n(fun 'as' ((alias Real)) (alias Number))", fillcolor=grey];
  391 [label="FunOverload: as\n(fun 'as' ((alias Natural)) (alias Number))", fillcolor=grey];
  392 [label="FunNode: as\n(fun 'as' ((alias Natural)) (alias Number))", fillcolor=grey];
  393 [label="Ref: Natural\n(type (alias Natural (struct Natural)))", fillcolor=grey];
  394 [label="Name: a\n(alias Natural (struct Natural))", fillcolor=grey];
  395 [label="Ref: Number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  396 [label="Name: as\n(fun 'as' ((alias Natural)) (alias Number))", fillcolor=grey];
  397 [label="FunOverload: as\n(fun 'as' ((alias Complex)) (alias Number))", fillcolor=grey];
  398 [label="FunNode: as\n(fun 'as' ((alias Complex)) (alias Number))", fillcolor=grey];
  399 [label="Ref: Complex\n(type (alias Complex (struct Complex)))", fillcolor=grey];
  400 [label="Name: a\n(alias Complex (struct Complex))", fillcolor=grey];
  401 [label="Ref: Number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  402 [label="Name: as\n(fun 'as' ((alias Complex)) (alias Number))", fillcolor=grey];
  403 [label="FunOverload: as\n(intersection (fun 'as' ((union (alias Infinity) (alias NDet) (alias Real) (alias Natural) (alias Complex))) (alias Number)) (fun 'as' ((alias Number)) (alias ref)))", fillcolor=grey];
  404 [label="FunNode: as\n(fun 'as' ((union (alias Infinity) (alias NDet) (alias Real) (alias Natural) (alias Complex))) (alias Number))", fillcolor=grey];
  405 [label="UnionTypeNode\n(type (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex))))", fillcolor=grey];
  406 [label="Ref: Infinity\n(type (alias Infinity (struct Infinity)))", fillcolor=grey];
  407 [label="Ref: NDet\n(type (alias NDet (struct NDet)))", fillcolor=grey];
  408 [label="Ref: Real\n(type (alias Real (struct Real)))", fillcolor=grey];
  409 [label="Ref: Natural\n(type (alias Natural (struct Natural)))", fillcolor=grey];
  410 [label="Ref: Complex\n(type (alias Complex (struct Complex)))", fillcolor=grey];
  411 [label="Name: a\n(union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))", fillcolor=grey];
  412 [label="Ref: Number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  413 [label="FunNode: as\n(fun 'as' ((alias Number)) (alias ref))", fillcolor=grey];
  414 [label="Ref: Number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  415 [label="Name: a\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  416 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  417 [label="Name: as\n(intersection (fun 'as' ((union (alias Infinity) (alias NDet) (alias Real) (alias Natural) (alias Complex))) (alias Number)) (fun 'as' ((alias Number)) (alias ref)))", fillcolor=grey];
  418 [label="FunOverload: isComplex\n(fun 'isComplex' ((alias Number)) (alias boolean))", fillcolor=grey];
  419 [label="FunNode: isComplex\n(fun 'isComplex' ((alias Number)) (alias boolean))", fillcolor=grey];
  420 [label="Ref: Number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  421 [label="Name: number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  422 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  423 [label="Name: isComplex\n(fun 'isComplex' ((alias Number)) (alias boolean))", fillcolor=grey];
  424 [label="FunOverload: main\n(fun 'main' () (alias void))", fillcolor=grey];
  425 [label="FunNode: main\n(fun 'main' () (alias void))", fillcolor=grey];
  426 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  427 [label="Name: main\n(fun 'main' () (alias void))", fillcolor=grey];
  subgraph cluster0 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    428 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    429 [label="Ref: u64\n(type (alias u64 (native u64)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Real.discriminant()";
}
  subgraph cluster1 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    430 [label="Int: 8\n(alias i32 (native i32))", fillcolor=grey];
    431 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Real.sizeOf()";
}
  subgraph cluster2 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    432 [label="FunctionCallNode\n(alias u32 (native u32))", fillcolor=grey];
    433 [label="MemberNode\n(fun 'allocationSize' () (alias u32))", fillcolor=grey];
    434 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    435 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    433 -> 432[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    434 -> 433[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Real.allocationSize()";
}
  subgraph cluster3 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    436 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    437 [label="Ref: u64\n(type (alias u64 (native u64)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Natural.discriminant()";
}
  subgraph cluster4 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    438 [label="Int: 8\n(alias i32 (native i32))", fillcolor=grey];
    439 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Natural.sizeOf()";
}
  subgraph cluster5 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    440 [label="FunctionCallNode\n(alias u32 (native u32))", fillcolor=grey];
    441 [label="MemberNode\n(fun 'allocationSize' () (alias u32))", fillcolor=grey];
    442 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    443 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    441 -> 440[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    442 -> 441[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Natural.allocationSize()";
}
  subgraph cluster6 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    444 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    445 [label="Ref: u64\n(type (alias u64 (native u64)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Complex.discriminant()";
}
  subgraph cluster7 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    446 [label="BinOp: '+'\n(alias i32 (native i32))", fillcolor=grey];
    447 [label="Int: 8\n(alias i32 (native i32))", fillcolor=grey];
    448 [label="Int: 8\n(alias i32 (native i32))", fillcolor=grey];
    449 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    447 -> 446[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    448 -> 446[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Complex.sizeOf()";
}
  subgraph cluster8 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    450 [label="FunctionCallNode\n(alias u32 (native u32))", fillcolor=grey];
    451 [label="MemberNode\n(fun 'allocationSize' () (alias u32))", fillcolor=grey];
    452 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    453 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    451 -> 450[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    452 -> 451[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Complex.allocationSize()";
}
  subgraph cluster9 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    454 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    455 [label="Name: rhs\n(alias ref (ref ?))", fillcolor=grey];
    456 [label="BinOp: '=='\n(alias boolean (native boolean))", fillcolor=grey];
    457 [label="Ref: lhs\n(alias ref (ref ?))", fillcolor=grey];
    458 [label="Ref: rhs\n(alias ref (ref ?))", fillcolor=grey];
    459 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    454 -> 457[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    455 -> 458[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    457 -> 456[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    458 -> 456[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Number.==(ref,ref)";
}
  subgraph cluster10 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    460 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    461 [label="Name: rhs\n(alias ref (ref ?))", fillcolor=grey];
    462 [label="BinOp: '!='\n(alias boolean (native boolean))", fillcolor=grey];
    463 [label="Ref: lhs\n(alias ref (ref ?))", fillcolor=grey];
    464 [label="Ref: rhs\n(alias ref (ref ?))", fillcolor=grey];
    465 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    460 -> 463[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    461 -> 464[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    463 -> 462[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    464 -> 462[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Number.!=(ref,ref)";
}
  subgraph cluster11 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    466 [label="BlockNode\n(native void)", fillcolor=grey];
    467 [label="FunctionCallNode\n(alias boolean (native boolean))", fillcolor=grey];
    468 [label="Ref: isComplex\n(fun 'isComplex' ((alias Number)) (alias boolean))", fillcolor=grey];
    469 [label="Ref: Infinity\n(alias Infinity (struct Infinity))", fillcolor=grey];
    470 [label="FunctionCallNode\n(alias boolean (native boolean))", fillcolor=grey];
    471 [label="Ref: isComplex\n(fun 'isComplex' ((alias Number)) (alias boolean))", fillcolor=grey];
    472 [label="FunctionCallNode\n(alias Real (struct Real))", fillcolor=grey];
    473 [label="MemberNode\n(fun 'apply' ((alias f32)) (alias Real))", fillcolor=grey];
    474 [label="Ref: Real\n(type (alias Real (struct Real)))", fillcolor=grey];
    475 [label="Float: 0.00000\n(alias f32 (native f32))", fillcolor=grey];
    476 [label="FunctionCallNode\n(alias boolean (native boolean))", fillcolor=grey];
    477 [label="Ref: isComplex\n(fun 'isComplex' ((alias Number)) (alias boolean))", fillcolor=grey];
    478 [label="FunctionCallNode\n(alias Natural (struct Natural))", fillcolor=grey];
    479 [label="MemberNode\n(fun 'apply' ((alias i32)) (alias Natural))", fillcolor=grey];
    480 [label="Ref: Natural\n(type (alias Natural (struct Natural)))", fillcolor=grey];
    481 [label="Int: 123\n(alias i32 (native i32))", fillcolor=grey];
    482 [label="FunctionCallNode\n(alias boolean (native boolean))", fillcolor=grey];
    483 [label="Ref: isComplex\n(fun 'isComplex' ((alias Number)) (alias boolean))", fillcolor=grey];
    484 [label="FunctionCallNode\n(alias Complex (struct Complex))", fillcolor=grey];
    485 [label="MemberNode\n(fun 'apply' ((alias f32) (alias f32)) (alias Complex))", fillcolor=grey];
    486 [label="Ref: Complex\n(type (alias Complex (struct Complex)))", fillcolor=grey];
    487 [label="Float: 0.00000\n(alias f32 (native f32))", fillcolor=grey];
    488 [label="Float: 99.10000\n(alias f32 (native f32))", fillcolor=grey];
    489 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    467 -> 466[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
    468 -> 467[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    469 -> 467[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    470 -> 466[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
    471 -> 470[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    472 -> 470[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    473 -> 472[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    474 -> 473[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    475 -> 472[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    476 -> 466[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
    477 -> 476[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    478 -> 476[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    479 -> 478[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    480 -> 479[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    481 -> 478[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    482 -> 466[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
    483 -> 482[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    484 -> 482[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    485 -> 484[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    486 -> 485[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    487 -> 484[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    488 -> 484[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::main()";
}
  subgraph cluster12 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    2 -> 5[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    3 -> 2[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  label="expression";
}
  subgraph cluster13 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    490 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    491 [label="Ref: Infinity\n(type (alias Infinity (struct Infinity)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Infinity.apply()";
}
  subgraph cluster14 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    104 -> 109[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    105 -> 104[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  label="expression";
}
  subgraph cluster15 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    492 [label="Name: number\n(alias f32 (native f32))", fillcolor=grey];
    493 [label="BlockNode\n(alias Real (struct Real))", fillcolor=grey];
    494 [label="VarDecl: $ref\n(native void)", fillcolor=grey];
    495 [label="Name: $ref\n(alias Real (struct Real))", fillcolor=grey];
    496 [label="FunctionCallNode\n(alias Real (struct Real))", fillcolor=grey];
    497 [label="Ref: fromPointer\n(fun 'fromPointer' ((union (alias i32) (alias u32))) (alias Real))", fillcolor=grey];
    498 [label="FunctionCallNode\n(alias i32 (native i32))", fillcolor=grey];
    499 [label="Ref: system::memory::calloc\n(fun 'calloc' ((alias i32) (alias i32)) (alias i32))", fillcolor=grey];
    500 [label="Int: 1\n(alias i32 (native i32))", fillcolor=grey];
    501 [label="FunctionCallNode\n(alias i32 (native i32))", fillcolor=grey];
    502 [label="Ref: sizeOf\n(fun 'sizeOf' () (alias i32))", fillcolor=grey];
    503 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
    504 [label="Ref: set$number\n(fun 'set$number' ((alias Real) (alias f32)) (alias void))", fillcolor=grey];
    505 [label="Ref: $ref\n(alias Real (struct Real))", fillcolor=grey];
    506 [label="Ref: number\n(alias f32 (native f32))", fillcolor=grey];
    507 [label="Ref: $ref\n(alias Real (struct Real))", fillcolor=grey];
    508 [label="Ref: Real\n(type (alias Real (struct Real)))", fillcolor=grey];
    492 -> 506[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    494 -> 493[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
    495 -> 505[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    495 -> 507[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    496 -> 495[taillabel="[DEFAULT_VALUE]" fontname="times" fontsize = 7 color="black" ];
    497 -> 496[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    498 -> 496[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    499 -> 498[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    500 -> 498[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    501 -> 498[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    502 -> 501[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    503 -> 493[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
    504 -> 503[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    505 -> 503[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    506 -> 503[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    507 -> 493[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Real.apply(f32)";
}
  subgraph cluster16 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    509 [label="Name: ptr\n(type (union (alias i32 (native i32)) (alias u32 (native u32))))", fillcolor=grey];
    510 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    511 [label="Ref: Real\n(type (alias Real (struct Real)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Real.fromPointer(i32 | u32)";
}
  subgraph cluster17 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    512 [label="Name: target\n(type (alias Real (struct Real)))", fillcolor=grey];
    513 [label="Name: value\n(alias f32 (native f32))", fillcolor=grey];
    514 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
    515 [label="MemberNode\n(intersection (fun 'store' ((alias ref) (alias f32)) (alias void)) (fun 'store' ((alias ref) (alias f32) (alias i32)) (alias void)))", fillcolor=grey];
    516 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
    517 [label="Ref: target\n(alias Real (struct Real))", fillcolor=grey];
    518 [label="Ref: value\n(alias f32 (native f32))", fillcolor=grey];
    519 [label="Int: 0\n(alias i32 (native i32))", fillcolor=grey];
    520 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    512 -> 517[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    513 -> 518[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    515 -> 514[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    516 -> 515[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    517 -> 514[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    518 -> 514[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    519 -> 514[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Real.set$number(Real,f32)";
}
  subgraph cluster18 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    175 -> 180[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    176 -> 175[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  label="expression";
}
  subgraph cluster19 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    521 [label="Name: number\n(alias i32 (native i32))", fillcolor=grey];
    522 [label="BlockNode\n(alias Natural (struct Natural))", fillcolor=grey];
    523 [label="VarDecl: $ref\n(native void)", fillcolor=grey];
    524 [label="Name: $ref\n(alias Natural (struct Natural))", fillcolor=grey];
    525 [label="FunctionCallNode\n(alias Natural (struct Natural))", fillcolor=grey];
    526 [label="Ref: fromPointer\n(fun 'fromPointer' ((union (alias i32) (alias u32))) (alias Natural))", fillcolor=grey];
    527 [label="FunctionCallNode\n(alias i32 (native i32))", fillcolor=grey];
    528 [label="Ref: system::memory::calloc\n(fun 'calloc' ((alias i32) (alias i32)) (alias i32))", fillcolor=grey];
    529 [label="Int: 1\n(alias i32 (native i32))", fillcolor=grey];
    530 [label="FunctionCallNode\n(alias i32 (native i32))", fillcolor=grey];
    531 [label="Ref: sizeOf\n(fun 'sizeOf' () (alias i32))", fillcolor=grey];
    532 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
    533 [label="Ref: set$number\n(fun 'set$number' ((alias Natural) (alias i32)) (alias void))", fillcolor=grey];
    534 [label="Ref: $ref\n(alias Natural (struct Natural))", fillcolor=grey];
    535 [label="Ref: number\n(alias i32 (native i32))", fillcolor=grey];
    536 [label="Ref: $ref\n(alias Natural (struct Natural))", fillcolor=grey];
    537 [label="Ref: Natural\n(type (alias Natural (struct Natural)))", fillcolor=grey];
    521 -> 535[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    523 -> 522[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
    524 -> 534[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    524 -> 536[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    525 -> 524[taillabel="[DEFAULT_VALUE]" fontname="times" fontsize = 7 color="black" ];
    526 -> 525[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    527 -> 525[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    528 -> 527[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    529 -> 527[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    530 -> 527[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    531 -> 530[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    532 -> 522[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
    533 -> 532[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    534 -> 532[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    535 -> 532[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    536 -> 522[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Natural.apply(i32)";
}
  subgraph cluster20 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    538 [label="Name: ptr\n(type (union (alias i32 (native i32)) (alias u32 (native u32))))", fillcolor=grey];
    539 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    540 [label="Ref: Natural\n(type (alias Natural (struct Natural)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Natural.fromPointer(i32 | u32)";
}
  subgraph cluster21 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    541 [label="Name: target\n(type (alias Natural (struct Natural)))", fillcolor=grey];
    542 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
    543 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
    544 [label="MemberNode\n(intersection (fun 'store' ((alias ref) (alias i32)) (alias void)) (fun 'store' ((alias ref) (alias i32) (alias i32)) (alias void)))", fillcolor=grey];
    545 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    546 [label="Ref: target\n(alias Natural (struct Natural))", fillcolor=grey];
    547 [label="Ref: value\n(alias i32 (native i32))", fillcolor=grey];
    548 [label="Int: 0\n(alias i32 (native i32))", fillcolor=grey];
    549 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    541 -> 546[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    542 -> 547[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    544 -> 543[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    545 -> 544[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    546 -> 543[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    547 -> 543[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    548 -> 543[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Natural.set$number(Natural,i32)";
}
  subgraph cluster22 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    246 -> 253[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    247 -> 246[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  label="expression";
}
  subgraph cluster23 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    550 [label="Name: real\n(alias f32 (native f32))", fillcolor=grey];
    551 [label="Name: imaginary\n(alias f32 (native f32))", fillcolor=grey];
    552 [label="BlockNode\n(alias Complex (struct Complex))", fillcolor=grey];
    553 [label="VarDecl: $ref\n(native void)", fillcolor=grey];
    554 [label="Name: $ref\n(alias Complex (struct Complex))", fillcolor=grey];
    555 [label="FunctionCallNode\n(alias Complex (struct Complex))", fillcolor=grey];
    556 [label="Ref: fromPointer\n(fun 'fromPointer' ((union (alias i32) (alias u32))) (alias Complex))", fillcolor=grey];
    557 [label="FunctionCallNode\n(alias i32 (native i32))", fillcolor=grey];
    558 [label="Ref: system::memory::calloc\n(fun 'calloc' ((alias i32) (alias i32)) (alias i32))", fillcolor=grey];
    559 [label="Int: 1\n(alias i32 (native i32))", fillcolor=grey];
    560 [label="FunctionCallNode\n(alias i32 (native i32))", fillcolor=grey];
    561 [label="Ref: sizeOf\n(fun 'sizeOf' () (alias i32))", fillcolor=grey];
    562 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
    563 [label="Ref: set$real\n(fun 'set$real' ((alias Complex) (alias f32)) (alias void))", fillcolor=grey];
    564 [label="Ref: $ref\n(alias Complex (struct Complex))", fillcolor=grey];
    565 [label="Ref: real\n(alias f32 (native f32))", fillcolor=grey];
    566 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
    567 [label="Ref: set$imaginary\n(fun 'set$imaginary' ((alias Complex) (alias f32)) (alias void))", fillcolor=grey];
    568 [label="Ref: $ref\n(alias Complex (struct Complex))", fillcolor=grey];
    569 [label="Ref: imaginary\n(alias f32 (native f32))", fillcolor=grey];
    570 [label="Ref: $ref\n(alias Complex (struct Complex))", fillcolor=grey];
    571 [label="Ref: Complex\n(type (alias Complex (struct Complex)))", fillcolor=grey];
    550 -> 565[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    551 -> 569[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    553 -> 552[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
    554 -> 564[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    554 -> 568[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    554 -> 570[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    555 -> 554[taillabel="[DEFAULT_VALUE]" fontname="times" fontsize = 7 color="black" ];
    556 -> 555[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    557 -> 555[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    558 -> 557[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    559 -> 557[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    560 -> 557[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    561 -> 560[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    562 -> 552[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
    563 -> 562[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    564 -> 562[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    565 -> 562[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    566 -> 552[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
    567 -> 566[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    568 -> 566[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    569 -> 566[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    570 -> 552[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Complex.apply(f32,f32)";
}
  subgraph cluster24 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    572 [label="Name: ptr\n(type (union (alias i32 (native i32)) (alias u32 (native u32))))", fillcolor=grey];
    573 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    574 [label="Ref: Complex\n(type (alias Complex (struct Complex)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Complex.fromPointer(i32 | u32)";
}
  subgraph cluster25 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    575 [label="Name: target\n(type (alias Complex (struct Complex)))", fillcolor=grey];
    576 [label="Name: value\n(alias f32 (native f32))", fillcolor=grey];
    577 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
    578 [label="MemberNode\n(intersection (fun 'store' ((alias ref) (alias f32)) (alias void)) (fun 'store' ((alias ref) (alias f32) (alias i32)) (alias void)))", fillcolor=grey];
    579 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
    580 [label="Ref: target\n(alias Complex (struct Complex))", fillcolor=grey];
    581 [label="Ref: value\n(alias f32 (native f32))", fillcolor=grey];
    582 [label="Int: 0\n(alias i32 (native i32))", fillcolor=grey];
    583 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    575 -> 580[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    576 -> 581[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    578 -> 577[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    579 -> 578[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    580 -> 577[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    581 -> 577[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    582 -> 577[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Complex.set$real(Complex,f32)";
}
  subgraph cluster26 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    584 [label="Name: target\n(type (alias Complex (struct Complex)))", fillcolor=grey];
    585 [label="Name: value\n(alias f32 (native f32))", fillcolor=grey];
    586 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
    587 [label="MemberNode\n(intersection (fun 'store' ((alias ref) (alias f32)) (alias void)) (fun 'store' ((alias ref) (alias f32) (alias i32)) (alias void)))", fillcolor=grey];
    588 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
    589 [label="Ref: target\n(alias Complex (struct Complex))", fillcolor=grey];
    590 [label="Ref: value\n(alias f32 (native f32))", fillcolor=grey];
    591 [label="Int: 8\n(alias i32 (native i32))", fillcolor=grey];
    592 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    584 -> 589[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    585 -> 590[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    587 -> 586[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    588 -> 587[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    589 -> 586[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    590 -> 586[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    591 -> 586[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Complex.set$imaginary(Complex,f32)";
}
  subgraph cluster27 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    593 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    594 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    595 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    596 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    597 [label="Ref: Number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Number.load(ref,i32)";
}
  subgraph cluster28 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    598 [label="Name: a\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
    599 [label="BlockNode\n(alias boolean (native boolean))", fillcolor=grey];
    600 [label="BinOp: '||'\n(alias boolean (native boolean))", fillcolor=grey];
    601 [label="BinOp: '||'\n(alias boolean (native boolean))", fillcolor=grey];
    602 [label="BinOp: '||'\n(alias boolean (native boolean))", fillcolor=grey];
    603 [label="BinOp: '||'\n(alias boolean (native boolean))", fillcolor=grey];
    604 [label="IsExpressionNodeis\n(alias boolean (native boolean))", fillcolor=grey];
    605 [label="Ref: a\n(alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex))))", fillcolor=grey];
    606 [label="Ref: Infinity\n(type (alias Infinity (struct Infinity)))", fillcolor=grey];
    607 [label="IsExpressionNodeis\n(alias boolean (native boolean))", fillcolor=grey];
    608 [label="Ref: a\n(alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex))))", fillcolor=grey];
    609 [label="Ref: NDet\n(type (alias NDet (struct NDet)))", fillcolor=grey];
    610 [label="IsExpressionNodeis\n(alias boolean (native boolean))", fillcolor=grey];
    611 [label="Ref: a\n(alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex))))", fillcolor=grey];
    612 [label="Ref: Real\n(type (alias Real (struct Real)))", fillcolor=grey];
    613 [label="IsExpressionNodeis\n(alias boolean (native boolean))", fillcolor=grey];
    614 [label="Ref: a\n(alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex))))", fillcolor=grey];
    615 [label="Ref: Natural\n(type (alias Natural (struct Natural)))", fillcolor=grey];
    616 [label="IsExpressionNodeis\n(alias boolean (native boolean))", fillcolor=grey];
    617 [label="Ref: a\n(alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex))))", fillcolor=grey];
    618 [label="Ref: Complex\n(type (alias Complex (struct Complex)))", fillcolor=grey];
    619 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    598 -> 605[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    598 -> 608[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    598 -> 611[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    598 -> 614[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    598 -> 617[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    600 -> 599[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
    601 -> 600[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    602 -> 601[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    603 -> 602[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    604 -> 603[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    605 -> 604[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    606 -> 604[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    607 -> 603[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    608 -> 607[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    609 -> 607[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    610 -> 602[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    611 -> 610[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    612 -> 610[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    613 -> 601[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    614 -> 613[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    615 -> 613[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    616 -> 600[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    617 -> 616[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    618 -> 616[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Number.is(Number)";
}
  subgraph cluster29 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    6 -> 11[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    7 -> 6[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
    9 -> 7[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  label="expression";
}
  subgraph cluster30 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    620 [label="Name: a\n(type (alias Infinity (struct Infinity)))", fillcolor=grey];
    621 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    622 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Infinity.is(Infinity)";
}
  subgraph cluster31 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    51 -> 56[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    52 -> 51[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
    54 -> 52[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  label="expression";
}
  subgraph cluster32 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    623 [label="Name: a\n(type (alias NDet (struct NDet)))", fillcolor=grey];
    624 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    625 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::NDet.is(NDet)";
}
  subgraph cluster33 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    138 -> 143[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    139 -> 138[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
    141 -> 139[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  label="expression";
}
  subgraph cluster34 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    626 [label="Name: a\n(type (alias Real (struct Real)))", fillcolor=grey];
    627 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    628 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Real.is(Real)";
}
  subgraph cluster35 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    209 -> 214[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    210 -> 209[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
    212 -> 210[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  label="expression";
}
  subgraph cluster36 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    629 [label="Name: a\n(type (alias Natural (struct Natural)))", fillcolor=grey];
    630 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    631 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Natural.is(Natural)";
}
  subgraph cluster37 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    302 -> 307[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    303 -> 302[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
    305 -> 303[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  label="expression";
}
  subgraph cluster38 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    632 [label="Name: a\n(type (alias Complex (struct Complex)))", fillcolor=grey];
    633 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    634 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Complex.is(Complex)";
}
  subgraph cluster39 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    635 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    636 [label="Name: rhs\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
    637 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    638 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    639 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    640 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Number.store(ref,Number,i32)";
}
  subgraph cluster40 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    641 [label="Name: a\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
    642 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    643 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Number.as_1(Number)";
}
  subgraph cluster41 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    644 [label="Name: number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
    645 [label="PatternMatcherNode\n(alias boolean (native boolean))", fillcolor=grey];
    646 [label="Ref: number\n(alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex))))", fillcolor=grey];
    647 [label="MatchCaseIsNode\n(alias boolean (native boolean))", fillcolor=grey];
    648 [label="Ref: Real\n(type (alias Real (struct Real)))", fillcolor=grey];
    649 [label="BooleanLiteralfalse\n(alias boolean (native boolean))", fillcolor=grey];
    650 [label="TypeReducerNode\n(union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))", fillcolor=grey];
    651 [label="MatchCaseIsNode\n(alias boolean (native boolean))", fillcolor=grey];
    652 [label="Ref: Natural\n(type (alias Natural (struct Natural)))", fillcolor=grey];
    653 [label="BooleanLiteralfalse\n(alias boolean (native boolean))", fillcolor=grey];
    654 [label="TypeReducerNode\n(union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))", fillcolor=grey];
    655 [label="MatchDefaultNode\n(alias boolean (native boolean))", fillcolor=grey];
    656 [label="BooleanLiteralfalse\n(alias boolean (native boolean))", fillcolor=grey];
    657 [label="TypeReducerNode\n(union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Complex (struct Complex)))", fillcolor=grey];
    658 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    644 -> 646[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    646 -> 645[taillabel="[PATTERN_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    646 -> 650[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    647 -> 645[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    648 -> 647[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    648 -> 654[taillabel="[REMOVED_TYPE]" fontname="times" fontsize = 7 color="black" ];
    649 -> 647[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    650 -> 647[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    650 -> 654[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    651 -> 645[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    652 -> 651[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    652 -> 657[taillabel="[REMOVED_TYPE]" fontname="times" fontsize = 7 color="black" ];
    653 -> 651[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    654 -> 651[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    654 -> 657[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    655 -> 645[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    656 -> 655[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    657 -> 655[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::isComplex(Number)";
}
  subgraph cluster42 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    659 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    660 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    661 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    662 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    663 [label="Ref: Infinity\n(type (alias Infinity (struct Infinity)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Infinity.load(ref,i32)";
}
  subgraph cluster43 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    664 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    665 [label="Ref: NDet\n(type (alias NDet (struct NDet)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::NDet.apply()";
}
  subgraph cluster44 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    666 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    667 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    668 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    669 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    670 [label="Ref: NDet\n(type (alias NDet (struct NDet)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::NDet.load(ref,i32)";
}
  subgraph cluster45 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    671 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    672 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    673 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    674 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    675 [label="Ref: Real\n(type (alias Real (struct Real)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Real.load(ref,i32)";
}
  subgraph cluster46 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    676 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    677 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    678 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    679 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    680 [label="Ref: Natural\n(type (alias Natural (struct Natural)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Natural.load(ref,i32)";
}
  subgraph cluster47 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    681 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    682 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    683 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    684 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    685 [label="Ref: Complex\n(type (alias Complex (struct Complex)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Complex.load(ref,i32)";
}
  subgraph cluster48 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    686 [label="Name: a\n(alias Infinity (struct Infinity))", fillcolor=grey];
    687 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
    688 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    689 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Infinity.==(Infinity,ref)";
}
  subgraph cluster49 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    690 [label="Name: a\n(alias Infinity (struct Infinity))", fillcolor=grey];
    691 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
    692 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    693 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Infinity.!=(Infinity,ref)";
}
  subgraph cluster50 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    694 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    695 [label="Name: rhs\n(alias Infinity (struct Infinity))", fillcolor=grey];
    696 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    697 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    698 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    699 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Infinity.store(ref,Infinity,i32)";
}
  subgraph cluster51 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    700 [label="Name: a\n(alias Infinity (struct Infinity))", fillcolor=grey];
    701 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    702 [label="Ref: Number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Infinity.as(Infinity)";
}
  subgraph cluster52 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    703 [label="Name: a\n(alias NDet (struct NDet))", fillcolor=grey];
    704 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
    705 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    706 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::NDet.==(NDet,ref)";
}
  subgraph cluster53 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    707 [label="Name: a\n(alias NDet (struct NDet))", fillcolor=grey];
    708 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
    709 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    710 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::NDet.!=(NDet,ref)";
}
  subgraph cluster54 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    711 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    712 [label="Name: rhs\n(alias NDet (struct NDet))", fillcolor=grey];
    713 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    714 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    715 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    716 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::NDet.store(ref,NDet,i32)";
}
  subgraph cluster55 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    717 [label="Name: a\n(alias NDet (struct NDet))", fillcolor=grey];
    718 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    719 [label="Ref: Number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::NDet.as(NDet)";
}
  subgraph cluster56 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    720 [label="Name: target\n(alias Real (struct Real))", fillcolor=grey];
    721 [label="FunctionCallNode\n(alias f32 (native f32))", fillcolor=grey];
    722 [label="MemberNode\n(intersection (fun 'load' ((alias ref)) (alias f32)) (fun 'load' ((alias ref) (alias i32)) (alias f32)))", fillcolor=grey];
    723 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
    724 [label="Ref: target\n(alias Real (struct Real))", fillcolor=grey];
    725 [label="Int: 0\n(alias i32 (native i32))", fillcolor=grey];
    726 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
    720 -> 724[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    722 -> 721[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    723 -> 722[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    724 -> 721[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    725 -> 721[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Real.property_number(Real)";
}
  subgraph cluster57 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    727 [label="Name: target\n(alias Real (struct Real))", fillcolor=grey];
    728 [label="Name: value\n(alias f32 (native f32))", fillcolor=grey];
    729 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
    730 [label="Ref: set$number\n(fun 'set$number' ((alias Real) (alias f32)) (alias void))", fillcolor=grey];
    731 [label="Ref: target\n(alias Real (struct Real))", fillcolor=grey];
    732 [label="Ref: value\n(alias f32 (native f32))", fillcolor=grey];
    733 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    727 -> 731[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    728 -> 732[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    730 -> 729[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    731 -> 729[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    732 -> 729[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Real.property_number_1(Real,f32)";
}
  subgraph cluster58 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    734 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    735 [label="Name: rhs\n(alias Real (struct Real))", fillcolor=grey];
    736 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    737 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    738 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    739 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Real.store(ref,Real,i32)";
}
  subgraph cluster59 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    740 [label="Name: a\n(alias Real (struct Real))", fillcolor=grey];
    741 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    742 [label="Ref: Number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Real.as(Real)";
}
  subgraph cluster60 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    743 [label="Name: target\n(alias Natural (struct Natural))", fillcolor=grey];
    744 [label="FunctionCallNode\n(alias i32 (native i32))", fillcolor=grey];
    745 [label="MemberNode\n(intersection (fun 'load' ((alias ref)) (alias i32)) (fun 'load' ((alias ref) (alias i32)) (alias i32)))", fillcolor=grey];
    746 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    747 [label="Ref: target\n(alias Natural (struct Natural))", fillcolor=grey];
    748 [label="Int: 0\n(alias i32 (native i32))", fillcolor=grey];
    749 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    743 -> 747[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    745 -> 744[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    746 -> 745[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    747 -> 744[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    748 -> 744[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Natural.property_number(Natural)";
}
  subgraph cluster61 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    750 [label="Name: target\n(alias Natural (struct Natural))", fillcolor=grey];
    751 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
    752 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
    753 [label="Ref: set$number\n(fun 'set$number' ((alias Natural) (alias i32)) (alias void))", fillcolor=grey];
    754 [label="Ref: target\n(alias Natural (struct Natural))", fillcolor=grey];
    755 [label="Ref: value\n(alias i32 (native i32))", fillcolor=grey];
    756 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    750 -> 754[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    751 -> 755[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    753 -> 752[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    754 -> 752[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    755 -> 752[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Natural.property_number_1(Natural,i32)";
}
  subgraph cluster62 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    757 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    758 [label="Name: rhs\n(alias Natural (struct Natural))", fillcolor=grey];
    759 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    760 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    761 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    762 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Natural.store(ref,Natural,i32)";
}
  subgraph cluster63 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    763 [label="Name: a\n(alias Natural (struct Natural))", fillcolor=grey];
    764 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    765 [label="Ref: Number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Natural.as(Natural)";
}
  subgraph cluster64 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    766 [label="Name: target\n(alias Complex (struct Complex))", fillcolor=grey];
    767 [label="FunctionCallNode\n(alias f32 (native f32))", fillcolor=grey];
    768 [label="MemberNode\n(intersection (fun 'load' ((alias ref)) (alias f32)) (fun 'load' ((alias ref) (alias i32)) (alias f32)))", fillcolor=grey];
    769 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
    770 [label="Ref: target\n(alias Complex (struct Complex))", fillcolor=grey];
    771 [label="Int: 0\n(alias i32 (native i32))", fillcolor=grey];
    772 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
    766 -> 770[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    768 -> 767[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    769 -> 768[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    770 -> 767[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    771 -> 767[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Complex.property_real(Complex)";
}
  subgraph cluster65 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    773 [label="Name: target\n(alias Complex (struct Complex))", fillcolor=grey];
    774 [label="Name: value\n(alias f32 (native f32))", fillcolor=grey];
    775 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
    776 [label="Ref: set$real\n(fun 'set$real' ((alias Complex) (alias f32)) (alias void))", fillcolor=grey];
    777 [label="Ref: target\n(alias Complex (struct Complex))", fillcolor=grey];
    778 [label="Ref: value\n(alias f32 (native f32))", fillcolor=grey];
    779 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    773 -> 777[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    774 -> 778[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    776 -> 775[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    777 -> 775[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    778 -> 775[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Complex.property_real_1(Complex,f32)";
}
  subgraph cluster66 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    780 [label="Name: target\n(alias Complex (struct Complex))", fillcolor=grey];
    781 [label="FunctionCallNode\n(alias f32 (native f32))", fillcolor=grey];
    782 [label="MemberNode\n(intersection (fun 'load' ((alias ref)) (alias f32)) (fun 'load' ((alias ref) (alias i32)) (alias f32)))", fillcolor=grey];
    783 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
    784 [label="Ref: target\n(alias Complex (struct Complex))", fillcolor=grey];
    785 [label="Int: 8\n(alias i32 (native i32))", fillcolor=grey];
    786 [label="Ref: f32\n(type (alias f32 (native f32)))", fillcolor=grey];
    780 -> 784[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    782 -> 781[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    783 -> 782[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    784 -> 781[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    785 -> 781[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Complex.property_imaginary(Complex)";
}
  subgraph cluster67 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    787 [label="Name: target\n(alias Complex (struct Complex))", fillcolor=grey];
    788 [label="Name: value\n(alias f32 (native f32))", fillcolor=grey];
    789 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
    790 [label="Ref: set$imaginary\n(fun 'set$imaginary' ((alias Complex) (alias f32)) (alias void))", fillcolor=grey];
    791 [label="Ref: target\n(alias Complex (struct Complex))", fillcolor=grey];
    792 [label="Ref: value\n(alias f32 (native f32))", fillcolor=grey];
    793 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    787 -> 791[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    788 -> 792[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    790 -> 789[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    791 -> 789[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    792 -> 789[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/structTypes.ro::Complex.property_imaginary_1(Complex,f32)";
}
  subgraph cluster68 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    794 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    795 [label="Name: rhs\n(alias Complex (struct Complex))", fillcolor=grey];
    796 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    797 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    798 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    799 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Complex.store(ref,Complex,i32)";
}
  subgraph cluster69 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    800 [label="Name: a\n(alias Complex (struct Complex))", fillcolor=grey];
    801 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    802 [label="Ref: Number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Complex.as(Complex)";
}
  subgraph cluster70 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    803 [label="Name: a\n(union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))", fillcolor=grey];
    804 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    805 [label="Ref: Number\n(type (alias Number (union (alias Infinity (struct Infinity)) (alias NDet (struct NDet)) (alias Real (struct Real)) (alias Natural (struct Natural)) (alias Complex (struct Complex)))))", fillcolor=grey];
  label="test/fixtures/types/structTypes.ro::Number.as(Infinity | NDet | Real | Natural | Complex)";
}
  1 -> 4[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 8[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 14[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 22[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 32[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 44[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 328[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 375[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 406[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 469[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 491[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 606[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 663[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  2 -> 5[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  3 -> 2[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  4 -> 3[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  6 -> 11[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  7 -> 6[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  8 -> 9[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  9 -> 7[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  10 -> 7[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  12 -> 19[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  13 -> 12[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  14 -> 15[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  15 -> 13[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  16 -> 17[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  17 -> 13[taillabel="[b]" fontname="times" fontsize = 7 color="black" ];
  18 -> 13[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  20 -> 27[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  21 -> 20[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  22 -> 23[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  23 -> 21[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  24 -> 25[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  25 -> 21[taillabel="[b]" fontname="times" fontsize = 7 color="black" ];
  26 -> 21[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  28 -> 37[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  29 -> 28[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  30 -> 31[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  31 -> 29[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  32 -> 33[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  33 -> 29[taillabel="[rhs]" fontname="times" fontsize = 7 color="black" ];
  34 -> 35[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  35 -> 29[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  36 -> 29[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  38 -> 45[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  39 -> 38[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  40 -> 41[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  41 -> 39[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  42 -> 43[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  43 -> 39[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  44 -> 39[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  46 -> 49[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 53[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 59[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 67[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 77[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 89[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 329[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 381[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 407[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 609[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 665[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 670[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  47 -> 50[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  48 -> 47[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  49 -> 48[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  51 -> 56[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  52 -> 51[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  53 -> 54[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  54 -> 52[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  55 -> 52[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  57 -> 64[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  58 -> 57[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  59 -> 60[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  60 -> 58[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  61 -> 62[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  62 -> 58[taillabel="[b]" fontname="times" fontsize = 7 color="black" ];
  63 -> 58[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  65 -> 72[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  66 -> 65[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  67 -> 68[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  68 -> 66[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  69 -> 70[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  70 -> 66[taillabel="[b]" fontname="times" fontsize = 7 color="black" ];
  71 -> 66[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  73 -> 82[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  74 -> 73[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  75 -> 76[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  76 -> 74[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  77 -> 78[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  78 -> 74[taillabel="[rhs]" fontname="times" fontsize = 7 color="black" ];
  79 -> 80[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  80 -> 74[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  81 -> 74[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  83 -> 90[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  84 -> 83[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  85 -> 86[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  86 -> 84[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  87 -> 88[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  88 -> 84[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  89 -> 84[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  91 -> 108[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 116[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 120[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 124[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 132[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 140[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 148[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 160[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 330[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 387[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 408[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 474[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 508[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 511[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 612[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 648[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 675[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  92 -> 95[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  93 -> 92[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  94 -> 93[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  96 -> 99[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  97 -> 96[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  98 -> 97[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  99 -> 502[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  100 -> 103[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  101 -> 100[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  102 -> 101[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  104 -> 109[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  105 -> 104[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  106 -> 107[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  107 -> 105[taillabel="[number]" fontname="times" fontsize = 7 color="black" ];
  108 -> 105[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  110 -> 117[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  111 -> 110[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  112 -> 115[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  113 -> 112[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  114 -> 112[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  115 -> 111[taillabel="[ptr]" fontname="times" fontsize = 7 color="black" ];
  116 -> 111[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  117 -> 497[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  118 -> 129[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  119 -> 118[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  120 -> 121[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  121 -> 119[taillabel="[target]" fontname="times" fontsize = 7 color="black" ];
  122 -> 119[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  123 -> 118[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  124 -> 125[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  125 -> 123[taillabel="[target]" fontname="times" fontsize = 7 color="black" ];
  126 -> 127[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  127 -> 123[taillabel="[value]" fontname="times" fontsize = 7 color="black" ];
  128 -> 123[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  130 -> 137[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  131 -> 130[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  132 -> 133[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  133 -> 131[taillabel="[target]" fontname="times" fontsize = 7 color="black" ];
  134 -> 135[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  135 -> 131[taillabel="[value]" fontname="times" fontsize = 7 color="black" ];
  136 -> 131[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  137 -> 504[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  137 -> 730[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  138 -> 143[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  139 -> 138[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  140 -> 141[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  141 -> 139[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  142 -> 139[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  144 -> 153[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  145 -> 144[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  146 -> 147[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  147 -> 145[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  148 -> 149[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  149 -> 145[taillabel="[rhs]" fontname="times" fontsize = 7 color="black" ];
  150 -> 151[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  151 -> 145[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  152 -> 145[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  154 -> 161[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  155 -> 154[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  156 -> 157[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  157 -> 155[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  158 -> 159[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  159 -> 155[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  160 -> 155[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  162 -> 179[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  162 -> 187[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  162 -> 191[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  162 -> 195[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  162 -> 203[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  162 -> 211[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  162 -> 219[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  162 -> 231[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  162 -> 331[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  162 -> 393[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  162 -> 409[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  162 -> 480[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  162 -> 537[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  162 -> 540[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  162 -> 615[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  162 -> 652[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  162 -> 680[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  163 -> 166[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  164 -> 163[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  165 -> 164[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  167 -> 170[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  168 -> 167[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  169 -> 168[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  170 -> 531[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  171 -> 174[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  172 -> 171[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  173 -> 172[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  175 -> 180[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  176 -> 175[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  177 -> 178[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  178 -> 176[taillabel="[number]" fontname="times" fontsize = 7 color="black" ];
  179 -> 176[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  181 -> 188[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  182 -> 181[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  183 -> 186[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  184 -> 183[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  185 -> 183[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  186 -> 182[taillabel="[ptr]" fontname="times" fontsize = 7 color="black" ];
  187 -> 182[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  188 -> 526[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  189 -> 200[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  190 -> 189[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  191 -> 192[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  192 -> 190[taillabel="[target]" fontname="times" fontsize = 7 color="black" ];
  193 -> 190[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  194 -> 189[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  195 -> 196[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  196 -> 194[taillabel="[target]" fontname="times" fontsize = 7 color="black" ];
  197 -> 198[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  198 -> 194[taillabel="[value]" fontname="times" fontsize = 7 color="black" ];
  199 -> 194[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  201 -> 208[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  202 -> 201[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  203 -> 204[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  204 -> 202[taillabel="[target]" fontname="times" fontsize = 7 color="black" ];
  205 -> 206[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  206 -> 202[taillabel="[value]" fontname="times" fontsize = 7 color="black" ];
  207 -> 202[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  208 -> 533[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  208 -> 753[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  209 -> 214[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  210 -> 209[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  211 -> 212[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  212 -> 210[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  213 -> 210[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  215 -> 224[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  216 -> 215[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  217 -> 218[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  218 -> 216[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  219 -> 220[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  220 -> 216[taillabel="[rhs]" fontname="times" fontsize = 7 color="black" ];
  221 -> 222[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  222 -> 216[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  223 -> 216[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  225 -> 232[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  226 -> 225[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  227 -> 228[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  228 -> 226[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  229 -> 230[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  230 -> 226[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  231 -> 226[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  233 -> 252[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  233 -> 260[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  233 -> 264[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  233 -> 268[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  233 -> 276[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  233 -> 284[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  233 -> 288[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  233 -> 296[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  233 -> 304[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  233 -> 312[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  233 -> 324[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  233 -> 332[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  233 -> 399[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  233 -> 410[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  233 -> 486[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  233 -> 571[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  233 -> 574[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  233 -> 618[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  233 -> 685[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  234 -> 237[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  235 -> 234[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  236 -> 235[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  238 -> 241[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  239 -> 238[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  240 -> 239[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  241 -> 561[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  242 -> 245[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  243 -> 242[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  244 -> 243[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  246 -> 253[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  247 -> 246[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  248 -> 249[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  249 -> 247[taillabel="[real]" fontname="times" fontsize = 7 color="black" ];
  250 -> 251[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  251 -> 247[taillabel="[imaginary]" fontname="times" fontsize = 7 color="black" ];
  252 -> 247[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  254 -> 261[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  255 -> 254[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  256 -> 259[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  257 -> 256[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  258 -> 256[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  259 -> 255[taillabel="[ptr]" fontname="times" fontsize = 7 color="black" ];
  260 -> 255[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  261 -> 556[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  262 -> 273[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  263 -> 262[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  264 -> 265[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  265 -> 263[taillabel="[target]" fontname="times" fontsize = 7 color="black" ];
  266 -> 263[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  267 -> 262[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  268 -> 269[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  269 -> 267[taillabel="[target]" fontname="times" fontsize = 7 color="black" ];
  270 -> 271[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  271 -> 267[taillabel="[value]" fontname="times" fontsize = 7 color="black" ];
  272 -> 267[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  274 -> 281[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  275 -> 274[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  276 -> 277[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  277 -> 275[taillabel="[target]" fontname="times" fontsize = 7 color="black" ];
  278 -> 279[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  279 -> 275[taillabel="[value]" fontname="times" fontsize = 7 color="black" ];
  280 -> 275[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  281 -> 563[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  281 -> 776[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  282 -> 293[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  283 -> 282[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  284 -> 285[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  285 -> 283[taillabel="[target]" fontname="times" fontsize = 7 color="black" ];
  286 -> 283[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  287 -> 282[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  288 -> 289[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  289 -> 287[taillabel="[target]" fontname="times" fontsize = 7 color="black" ];
  290 -> 291[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  291 -> 287[taillabel="[value]" fontname="times" fontsize = 7 color="black" ];
  292 -> 287[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  294 -> 301[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  295 -> 294[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  296 -> 297[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  297 -> 295[taillabel="[target]" fontname="times" fontsize = 7 color="black" ];
  298 -> 299[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  299 -> 295[taillabel="[value]" fontname="times" fontsize = 7 color="black" ];
  300 -> 295[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  301 -> 567[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  301 -> 790[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  302 -> 307[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  303 -> 302[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  304 -> 305[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  305 -> 303[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  306 -> 303[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  308 -> 317[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  309 -> 308[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  310 -> 311[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  311 -> 309[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  312 -> 313[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  313 -> 309[taillabel="[rhs]" fontname="times" fontsize = 7 color="black" ];
  314 -> 315[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  315 -> 309[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  316 -> 309[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  318 -> 325[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  319 -> 318[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  320 -> 321[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  321 -> 319[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  322 -> 323[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  323 -> 319[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  324 -> 319[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  326 -> 335[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  326 -> 359[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  326 -> 371[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  326 -> 377[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  326 -> 383[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  326 -> 389[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  326 -> 395[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  326 -> 401[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  326 -> 412[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  326 -> 414[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  326 -> 420[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  326 -> 597[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  326 -> 702[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  326 -> 719[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  326 -> 742[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  326 -> 765[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  326 -> 802[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  326 -> 805[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  327 -> 326[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  328 -> 327[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  329 -> 327[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  330 -> 327[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  331 -> 327[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  332 -> 327[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  333 -> 338[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  334 -> 333[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  335 -> 336[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  336 -> 334[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  337 -> 334[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  339 -> 346[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  340 -> 339[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  341 -> 342[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  342 -> 340[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  343 -> 344[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  344 -> 340[taillabel="[rhs]" fontname="times" fontsize = 7 color="black" ];
  345 -> 340[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  347 -> 354[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  348 -> 347[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  349 -> 350[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  350 -> 348[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  351 -> 352[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  352 -> 348[taillabel="[rhs]" fontname="times" fontsize = 7 color="black" ];
  353 -> 348[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  355 -> 364[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  356 -> 355[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  357 -> 358[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  358 -> 356[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  359 -> 360[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  360 -> 356[taillabel="[rhs]" fontname="times" fontsize = 7 color="black" ];
  361 -> 362[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  362 -> 356[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  363 -> 356[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  365 -> 372[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  366 -> 365[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  367 -> 368[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  368 -> 366[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  369 -> 370[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  370 -> 366[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  371 -> 366[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  373 -> 378[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  374 -> 373[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  375 -> 376[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  376 -> 374[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  377 -> 374[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  379 -> 384[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  380 -> 379[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  381 -> 382[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  382 -> 380[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  383 -> 380[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  385 -> 390[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  386 -> 385[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  387 -> 388[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  388 -> 386[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  389 -> 386[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  391 -> 396[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  392 -> 391[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  393 -> 394[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  394 -> 392[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  395 -> 392[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  397 -> 402[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  398 -> 397[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  399 -> 400[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  400 -> 398[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  401 -> 398[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  403 -> 417[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  404 -> 403[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  405 -> 411[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  406 -> 405[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  407 -> 405[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  408 -> 405[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  409 -> 405[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  410 -> 405[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  411 -> 404[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  412 -> 404[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  413 -> 403[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  414 -> 415[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  415 -> 413[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  416 -> 413[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  418 -> 423[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  419 -> 418[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  420 -> 421[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  421 -> 419[taillabel="[number]" fontname="times" fontsize = 7 color="black" ];
  422 -> 419[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  423 -> 468[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  423 -> 471[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  423 -> 477[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  423 -> 483[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  424 -> 427[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  425 -> 424[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  426 -> 425[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  label="";
}
