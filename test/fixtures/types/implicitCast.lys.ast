
|-DocumentNode
  |-ImportDirectiveNode
    |-QNameNode=system::core::native
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="native"
  |-ImportDirectiveNode
    |-QNameNode=system::core::boolean
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="boolean"
  |-ImportDirectiveNode
    |-QNameNode=system::core::u8
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="u8"
  |-ImportDirectiveNode
    |-QNameNode=system::core::u16
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="u16"
  |-ImportDirectiveNode
    |-QNameNode=system::core::u32
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="u32"
  |-ImportDirectiveNode
    |-QNameNode=system::core::u64
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="u64"
  |-ImportDirectiveNode
    |-QNameNode=system::core::i16
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="i16"
  |-ImportDirectiveNode
    |-QNameNode=system::core::i32
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="i32"
  |-ImportDirectiveNode
    |-QNameNode=system::core::i64
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="i64"
  |-ImportDirectiveNode
    |-QNameNode=system::core::f32
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="f32"
  |-ImportDirectiveNode
    |-QNameNode=system::core::f64
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="f64"
  |-ImportDirectiveNode
    |-QNameNode=system::core::bytes
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="bytes"
  |-ImportDirectiveNode
    |-QNameNode=system::core::string
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="string"
  |-ImportDirectiveNode
    |-QNameNode=support::test
      |-NameIdentifierNode="support"
      |-NameIdentifierNode="test"
  |-OverloadedFunctionNode annotations=Injected
    |-NameIdentifierNode="test1" type=(intersection (fun "test1" ((alias i32)) (alias i32)))
    |-FunDirectiveNode
      |-FunctionNode annotations=IsOverloaded
        |-NameIdentifierNode="test1" type=(fun "test1" ((alias i32)) (alias i32))
        |-ParameterNode annotations=Local(x:<no-type>#0)
          |-NameIdentifierNode="x" type=(alias i32 (native i32))
          |-ReferenceNode resolvedReference=system::core::i32::i32 type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
        |-ReferenceNode resolvedReference=system::core::i32::i32 type=(type (alias i32 (native i32)))
          |-QNameNode=i32
            |-NameIdentifierNode="i32"
        |-ReferenceNode resolvedReference=x type=(alias i32 (native i32)) annotations=IsValueNode
          |-QNameNode=x
            |-NameIdentifierNode="x"
  |-OverloadedFunctionNode annotations=Injected
    |-NameIdentifierNode="main2" type=(intersection (fun "main2" ((alias u8)) (alias i64)))
    |-FunDirectiveNode
      |-FunctionNode annotations=IsOverloaded
        |-NameIdentifierNode="main2" type=(fun "main2" ((alias u8)) (alias i64))
        |-ParameterNode annotations=Local(x:<no-type>#0)
          |-NameIdentifierNode="x" type=(alias u8 (native u8))
          |-ReferenceNode resolvedReference=system::core::u8::u8 type=(type (alias u8 (native u8)))
            |-QNameNode=u8
              |-NameIdentifierNode="u8"
        |-ReferenceNode resolvedReference=system::core::i64::i64 type=(type (alias i64 (native i64)))
          |-QNameNode=i64
            |-NameIdentifierNode="i64"
        |-FunctionCallNode type=(alias i32 (native i32)) annotations=IsValueNode,ImplicitCall(fun "test1" ((alias i32)) (alias i32))
          |-ReferenceNode resolvedReference=test1 type=(intersection (fun "test1" ((alias i32)) (alias i32)))
            |-QNameNode=test1
              |-NameIdentifierNode="test1"
          |-InjectedFunctionCallNode=(fun "as" ((alias u8)) (alias i32)) type=(alias i32 (native i32)) annotations=Injected
            |-ReferenceNode resolvedReference=x type=(alias u8 (native u8)) annotations=IsValueNode
              |-QNameNode=x
                |-NameIdentifierNode="x"
  |-OverloadedFunctionNode annotations=Injected
    |-NameIdentifierNode="testMatchWithDifferentTypes" type=(intersection (fun "testMatchWithDifferentTypes" ((alias i32)) (alias boolean)))
    |-FunDirectiveNode
      |-FunctionNode annotations=IsOverloaded
        |-NameIdentifierNode="testMatchWithDifferentTypes" type=(fun "testMatchWithDifferentTypes" ((alias i32)) (alias boolean))
        |-ParameterNode annotations=Local(input:<no-type>#0)
          |-NameIdentifierNode="input" type=(alias i32 (native i32))
          |-ReferenceNode resolvedReference=system::core::i32::i32 type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
        |-ReferenceNode resolvedReference=system::core::boolean::boolean type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-BlockNode type=(alias boolean (native boolean)) annotations=IsValueNode
          |-PatternMatcherNode type=(alias boolean (native boolean)) annotations=IsValueNode
            |-ReferenceNode resolvedReference=input type=(alias i32 (native i32)) annotations=IsValueNode
              |-QNameNode=input
                |-NameIdentifierNode="input"
            |-MatchLiteralNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
              |-IntegerLiteral=1 type=(alias i32 (native i32))
            |-MatchDefaultNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
  |-OverloadedFunctionNode annotations=Injected
    |-NameIdentifierNode="main" type=(intersection (fun "main" () (alias void)))
    |-FunDirectiveNode
      |-DecoratorNode
        |-NameIdentifierNode="export"
      |-FunctionNode annotations=IsOverloaded
        |-NameIdentifierNode="main" type=(fun "main" () (alias void)) annotations=Export
        |-ReferenceNode resolvedReference=system::core::native::void type=(type (alias void (native void)))
          |-QNameNode=void
            |-NameIdentifierNode="void"
        |-BlockNode type=(native void)
          |-FunctionCallNode type=(alias void (native void)) annotations=ImplicitCall(fun "START" ((alias string)) (alias void))
            |-ReferenceNode resolvedReference=support::test::START type=(intersection (fun "START" ((alias u32)) (alias void)) (fun "START" ((alias string)) (alias void)))
              |-QNameNode=START
                |-NameIdentifierNode="START"
            |-StringLiteral="Implicit number casting" type=(alias string (native string)) annotations=IsValueNode
          |-VarDeclarationNode
            |-NameIdentifierNode="x" type=(alias u16 (native u16)) annotations=MutableDeclaration
            |-ReferenceNode resolvedReference=system::core::u16::u16 type=(type (alias u16 (native u16)))
              |-QNameNode=u16
                |-NameIdentifierNode="u16"
            |-InjectedFunctionCallNode=(fun "as" ((alias u8)) (alias u16)) type=(alias u16 (native u16)) annotations=Injected
              |-AsExpressionNode type=(alias u8 (native u8)) annotations=IsValueNode,ImplicitCall(fun "as" ((alias i32)) (alias u8))
                |-IntegerLiteral=10 type=(alias i32 (native i32)) annotations=IsValueNode
                |-ReferenceNode resolvedReference=system::core::u8::u8 type=(type (alias u8 (native u8)))
                  |-QNameNode=u8
                    |-NameIdentifierNode="u8"
          |-FunctionCallNode type=(alias void (native void)) annotations=ImplicitCall(fun "mustEqual" ((alias i32) (alias i32) (alias string)) (alias void))
            |-ReferenceNode resolvedReference=support::test::mustEqual type=(intersection (fun "mustEqual" ((alias f64) (alias f64) (alias string)) (alias void)) (fun "mustEqual" ((alias f32) (alias f32) (alias string)) (alias void)) (fun "mustEqual" ((alias u64) (alias u64) (alias string)) (alias void)) (fun "mustEqual" ((alias i64) (alias i64) (alias string)) (alias void)) (fun "mustEqual" ((alias u32) (alias u32) (alias string)) (alias void)) (fun "mustEqual" ((alias i32) (alias i32) (alias string)) (alias void)) (fun "mustEqual" ((alias boolean) (alias boolean) (alias string)) (alias void)) (fun "mustEqual" ((alias string) (alias string) (alias string)) (alias void)))
              |-QNameNode=mustEqual
                |-NameIdentifierNode="mustEqual"
            |-InjectedFunctionCallNode=(fun "as" ((alias u16)) (alias i32)) type=(alias i32 (native i32)) annotations=Injected
              |-ReferenceNode resolvedReference=x type=(alias u16 (native u16)) annotations=IsValueNode
                |-QNameNode=x
                  |-NameIdentifierNode="x"
            |-IntegerLiteral=10 type=(alias i32 (native i32)) annotations=IsValueNode
            |-StringLiteral="eq(10_u16, 10_i32)" type=(alias string (native string)) annotations=IsValueNode
          |-FunctionCallNode type=(alias void (native void)) annotations=ImplicitCall(fun "verify" ((alias boolean) (alias string)) (alias void))
            |-ReferenceNode resolvedReference=support::test::verify type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias string)) (alias void)))
              |-QNameNode=verify
                |-NameIdentifierNode="verify"
            |-BinaryExpressionNode type=(alias boolean (native boolean)) annotations=IsValueNode,ImplicitCall(fun "==" ((alias boolean) (alias boolean)) (alias boolean))
              |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode,ImplicitCall(fun "testMatchWithDifferentTypes" ((alias i32)) (alias boolean))
                |-ReferenceNode resolvedReference=testMatchWithDifferentTypes type=(intersection (fun "testMatchWithDifferentTypes" ((alias i32)) (alias boolean)))
                  |-QNameNode=testMatchWithDifferentTypes
                    |-NameIdentifierNode="testMatchWithDifferentTypes"
                |-IntegerLiteral=0 type=(alias i32 (native i32)) annotations=IsValueNode
              |-NameIdentifierNode="=="
              |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
            |-StringLiteral="match 0" type=(alias string (native string)) annotations=IsValueNode
          |-FunctionCallNode type=(alias void (native void)) annotations=ImplicitCall(fun "verify" ((alias boolean) (alias string)) (alias void))
            |-ReferenceNode resolvedReference=support::test::verify type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias string)) (alias void)))
              |-QNameNode=verify
                |-NameIdentifierNode="verify"
            |-BinaryExpressionNode type=(alias boolean (native boolean)) annotations=IsValueNode,ImplicitCall(fun "==" ((alias boolean) (alias boolean)) (alias boolean))
              |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode,ImplicitCall(fun "testMatchWithDifferentTypes" ((alias i32)) (alias boolean))
                |-ReferenceNode resolvedReference=testMatchWithDifferentTypes type=(intersection (fun "testMatchWithDifferentTypes" ((alias i32)) (alias boolean)))
                  |-QNameNode=testMatchWithDifferentTypes
                    |-NameIdentifierNode="testMatchWithDifferentTypes"
                |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
              |-NameIdentifierNode="=="
              |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
            |-StringLiteral="match 1" type=(alias string (native string)) annotations=IsValueNode
          |-VarDeclarationNode
            |-NameIdentifierNode="u8_1" type=(alias u8 (native u8)) annotations=MutableDeclaration
            |-AsExpressionNode type=(alias u8 (native u8)) annotations=IsValueNode,ImplicitCall(fun "as" ((alias i32)) (alias u8))
              |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
              |-ReferenceNode resolvedReference=system::core::u8::u8 type=(type (alias u8 (native u8)))
                |-QNameNode=u8
                  |-NameIdentifierNode="u8"
          |-FunctionCallNode type=(alias void (native void)) annotations=ImplicitCall(fun "verify" ((alias boolean) (alias string)) (alias void))
            |-ReferenceNode resolvedReference=support::test::verify type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias string)) (alias void)))
              |-QNameNode=verify
                |-NameIdentifierNode="verify"
            |-BinaryExpressionNode type=(alias boolean (native boolean)) annotations=IsValueNode,ImplicitCall(fun "==" ((alias boolean) (alias boolean)) (alias boolean))
              |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode,ImplicitCall(fun "testMatchWithDifferentTypes" ((alias i32)) (alias boolean))
                |-ReferenceNode resolvedReference=testMatchWithDifferentTypes type=(intersection (fun "testMatchWithDifferentTypes" ((alias i32)) (alias boolean)))
                  |-QNameNode=testMatchWithDifferentTypes
                    |-NameIdentifierNode="testMatchWithDifferentTypes"
                |-InjectedFunctionCallNode=(fun "as" ((alias u8)) (alias i32)) type=(alias i32 (native i32)) annotations=Injected
                  |-ReferenceNode resolvedReference=u8_1 type=(alias u8 (native u8)) annotations=IsValueNode
                    |-QNameNode=u8_1
                      |-NameIdentifierNode="u8_1"
              |-NameIdentifierNode="=="
              |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
            |-StringLiteral="match 1.1" type=(alias string (native string)) annotations=IsValueNode
          |-FunctionCallNode type=(alias void (native void)) annotations=ImplicitCall(fun "verify" ((alias boolean) (alias string)) (alias void))
            |-ReferenceNode resolvedReference=support::test::verify type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias string)) (alias void)))
              |-QNameNode=verify
                |-NameIdentifierNode="verify"
            |-BinaryExpressionNode type=(alias boolean (native boolean)) annotations=IsValueNode,ImplicitCall(fun "==" ((alias f32) (alias f32)) (alias boolean))
              |-FloatLiteral=0 type=(alias f32 (native f32)) annotations=IsValueNode
              |-NameIdentifierNode="=="
              |-IntegerLiteral=0 type=(alias i32 (native i32)) annotations=IsValueNode
            |-StringLiteral="0.0 == 0" type=(alias string (native string)) annotations=IsValueNode
          |-FunctionCallNode type=(alias void (native void)) annotations=ImplicitCall(fun "END" () (alias void))
            |-ReferenceNode resolvedReference=support::test::END type=(intersection (fun "END" () (alias void)))
              |-QNameNode=END
                |-NameIdentifierNode="END"