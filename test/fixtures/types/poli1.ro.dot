digraph Document {
  node [shape=box,fontsize=10]; rankdir=LR;
  1 [label="Name: True\n(type (alias True (struct True)))", fillcolor=grey];
  2 [label="FunOverload: apply\n(fun 'apply' () (alias True))", fillcolor=grey];
  3 [label="FunNode: apply\n(fun 'apply' () (alias True))", fillcolor=grey];
  4 [label="Ref: True\n(type (alias True (struct True)))", fillcolor=grey];
  5 [label="Name: apply\n(fun 'apply' () (alias True))", fillcolor=grey];
  6 [label="FunOverload: is\n(fun 'is' ((alias True)) (alias boolean))", fillcolor=grey];
  7 [label="FunNode: is\n(fun 'is' ((alias True)) (alias boolean))", fillcolor=grey];
  8 [label="Ref: True\n(type (alias True (struct True)))", fillcolor=grey];
  9 [label="Name: a\n(alias True (struct True))", fillcolor=grey];
  10 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  11 [label="Name: is\n(fun 'is' ((alias True)) (alias boolean))", fillcolor=grey];
  12 [label="FunOverload: ==\n(fun '==' ((alias True) (alias ref)) (alias boolean))", fillcolor=grey];
  13 [label="FunNode: ==\n(fun '==' ((alias True) (alias ref)) (alias boolean))", fillcolor=grey];
  14 [label="Ref: True\n(type (alias True (struct True)))", fillcolor=grey];
  15 [label="Name: a\n(alias True (struct True))", fillcolor=grey];
  16 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  17 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
  18 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  19 [label="Name: ==\n(fun '==' ((alias True) (alias ref)) (alias boolean))", fillcolor=grey];
  20 [label="FunOverload: !=\n(fun '!=' ((alias True) (alias ref)) (alias boolean))", fillcolor=grey];
  21 [label="FunNode: !=\n(fun '!=' ((alias True) (alias ref)) (alias boolean))", fillcolor=grey];
  22 [label="Ref: True\n(type (alias True (struct True)))", fillcolor=grey];
  23 [label="Name: a\n(alias True (struct True))", fillcolor=grey];
  24 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  25 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
  26 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  27 [label="Name: !=\n(fun '!=' ((alias True) (alias ref)) (alias boolean))", fillcolor=grey];
  28 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias True) (alias i32)) (alias void))", fillcolor=grey];
  29 [label="FunNode: store\n(fun 'store' ((alias ref) (alias True) (alias i32)) (alias void))", fillcolor=grey];
  30 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  31 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  32 [label="Ref: True\n(type (alias True (struct True)))", fillcolor=grey];
  33 [label="Name: rhs\n(alias True (struct True))", fillcolor=grey];
  34 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  35 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  36 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  37 [label="Name: store\n(fun 'store' ((alias ref) (alias True) (alias i32)) (alias void))", fillcolor=grey];
  38 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias i32)) (alias True))", fillcolor=grey];
  39 [label="FunNode: load\n(fun 'load' ((alias ref) (alias i32)) (alias True))", fillcolor=grey];
  40 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  41 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  42 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  43 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  44 [label="Ref: True\n(type (alias True (struct True)))", fillcolor=grey];
  45 [label="Name: load\n(fun 'load' ((alias ref) (alias i32)) (alias True))", fillcolor=grey];
  46 [label="Name: False\n(type (alias False (struct False)))", fillcolor=grey];
  47 [label="FunOverload: apply\n(fun 'apply' () (alias False))", fillcolor=grey];
  48 [label="FunNode: apply\n(fun 'apply' () (alias False))", fillcolor=grey];
  49 [label="Ref: False\n(type (alias False (struct False)))", fillcolor=grey];
  50 [label="Name: apply\n(fun 'apply' () (alias False))", fillcolor=grey];
  51 [label="FunOverload: is\n(fun 'is' ((alias False)) (alias boolean))", fillcolor=grey];
  52 [label="FunNode: is\n(fun 'is' ((alias False)) (alias boolean))", fillcolor=grey];
  53 [label="Ref: False\n(type (alias False (struct False)))", fillcolor=grey];
  54 [label="Name: a\n(alias False (struct False))", fillcolor=grey];
  55 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  56 [label="Name: is\n(fun 'is' ((alias False)) (alias boolean))", fillcolor=grey];
  57 [label="FunOverload: ==\n(fun '==' ((alias False) (alias ref)) (alias boolean))", fillcolor=grey];
  58 [label="FunNode: ==\n(fun '==' ((alias False) (alias ref)) (alias boolean))", fillcolor=grey];
  59 [label="Ref: False\n(type (alias False (struct False)))", fillcolor=grey];
  60 [label="Name: a\n(alias False (struct False))", fillcolor=grey];
  61 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  62 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
  63 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  64 [label="Name: ==\n(fun '==' ((alias False) (alias ref)) (alias boolean))", fillcolor=grey];
  65 [label="FunOverload: !=\n(fun '!=' ((alias False) (alias ref)) (alias boolean))", fillcolor=grey];
  66 [label="FunNode: !=\n(fun '!=' ((alias False) (alias ref)) (alias boolean))", fillcolor=grey];
  67 [label="Ref: False\n(type (alias False (struct False)))", fillcolor=grey];
  68 [label="Name: a\n(alias False (struct False))", fillcolor=grey];
  69 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  70 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
  71 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  72 [label="Name: !=\n(fun '!=' ((alias False) (alias ref)) (alias boolean))", fillcolor=grey];
  73 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias False) (alias i32)) (alias void))", fillcolor=grey];
  74 [label="FunNode: store\n(fun 'store' ((alias ref) (alias False) (alias i32)) (alias void))", fillcolor=grey];
  75 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  76 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  77 [label="Ref: False\n(type (alias False (struct False)))", fillcolor=grey];
  78 [label="Name: rhs\n(alias False (struct False))", fillcolor=grey];
  79 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  80 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  81 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  82 [label="Name: store\n(fun 'store' ((alias ref) (alias False) (alias i32)) (alias void))", fillcolor=grey];
  83 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias i32)) (alias False))", fillcolor=grey];
  84 [label="FunNode: load\n(fun 'load' ((alias ref) (alias i32)) (alias False))", fillcolor=grey];
  85 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  86 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  87 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  88 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  89 [label="Ref: False\n(type (alias False (struct False)))", fillcolor=grey];
  90 [label="Name: load\n(fun 'load' ((alias ref) (alias i32)) (alias False))", fillcolor=grey];
  91 [label="Name: Boolean\n(type (alias Boolean (union (alias True (struct True)) (alias False (struct False)))))", fillcolor=grey];
  92 [label="UnionTypeNode\n(type (union (alias True (struct True)) (alias False (struct False))))", fillcolor=grey];
  93 [label="Ref: True\n(type (alias True (struct True)))", fillcolor=grey];
  94 [label="Ref: False\n(type (alias False (struct False)))", fillcolor=grey];
  95 [label="FunOverload: is\n(fun 'is' ((alias Boolean)) (alias boolean))", fillcolor=grey];
  96 [label="FunNode: is\n(fun 'is' ((alias Boolean)) (alias boolean))", fillcolor=grey];
  97 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct True)) (alias False (struct False)))))", fillcolor=grey];
  98 [label="Name: a\n(alias Boolean (union (alias True (struct True)) (alias False (struct False))))", fillcolor=grey];
  99 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  100 [label="Name: is\n(fun 'is' ((alias Boolean)) (alias boolean))", fillcolor=grey];
  101 [label="FunOverload: ==\n(fun '==' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
  102 [label="FunNode: ==\n(fun '==' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
  103 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  104 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  105 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  106 [label="Name: rhs\n(alias ref (ref ?))", fillcolor=grey];
  107 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  108 [label="Name: ==\n(fun '==' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
  109 [label="FunOverload: !=\n(fun '!=' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
  110 [label="FunNode: !=\n(fun '!=' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
  111 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  112 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  113 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  114 [label="Name: rhs\n(alias ref (ref ?))", fillcolor=grey];
  115 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  116 [label="Name: !=\n(fun '!=' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
  117 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias Boolean) (alias i32)) (alias void))", fillcolor=grey];
  118 [label="FunNode: store\n(fun 'store' ((alias ref) (alias Boolean) (alias i32)) (alias void))", fillcolor=grey];
  119 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  120 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  121 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct True)) (alias False (struct False)))))", fillcolor=grey];
  122 [label="Name: rhs\n(alias Boolean (union (alias True (struct True)) (alias False (struct False))))", fillcolor=grey];
  123 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  124 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  125 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  126 [label="Name: store\n(fun 'store' ((alias ref) (alias Boolean) (alias i32)) (alias void))", fillcolor=grey];
  127 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias i32)) (alias Boolean))", fillcolor=grey];
  128 [label="FunNode: load\n(fun 'load' ((alias ref) (alias i32)) (alias Boolean))", fillcolor=grey];
  129 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  130 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  131 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  132 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  133 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct True)) (alias False (struct False)))))", fillcolor=grey];
  134 [label="Name: load\n(fun 'load' ((alias ref) (alias i32)) (alias Boolean))", fillcolor=grey];
  135 [label="FunOverload: as\n(fun 'as' ((alias True)) (alias Boolean))", fillcolor=grey];
  136 [label="FunNode: as\n(fun 'as' ((alias True)) (alias Boolean))", fillcolor=grey];
  137 [label="Ref: True\n(type (alias True (struct True)))", fillcolor=grey];
  138 [label="Name: a\n(alias True (struct True))", fillcolor=grey];
  139 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct True)) (alias False (struct False)))))", fillcolor=grey];
  140 [label="Name: as\n(fun 'as' ((alias True)) (alias Boolean))", fillcolor=grey];
  141 [label="FunOverload: as\n(fun 'as' ((alias False)) (alias Boolean))", fillcolor=grey];
  142 [label="FunNode: as\n(fun 'as' ((alias False)) (alias Boolean))", fillcolor=grey];
  143 [label="Ref: False\n(type (alias False (struct False)))", fillcolor=grey];
  144 [label="Name: a\n(alias False (struct False))", fillcolor=grey];
  145 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct True)) (alias False (struct False)))))", fillcolor=grey];
  146 [label="Name: as\n(fun 'as' ((alias False)) (alias Boolean))", fillcolor=grey];
  147 [label="FunOverload: as\n(intersection (fun 'as' ((union (alias True) (alias False))) (alias Boolean)) (fun 'as' ((alias Boolean)) (alias ref)))", fillcolor=grey];
  148 [label="FunNode: as\n(fun 'as' ((union (alias True) (alias False))) (alias Boolean))", fillcolor=grey];
  149 [label="UnionTypeNode\n(type (union (alias True (struct True)) (alias False (struct False))))", fillcolor=grey];
  150 [label="Ref: True\n(type (alias True (struct True)))", fillcolor=grey];
  151 [label="Ref: False\n(type (alias False (struct False)))", fillcolor=grey];
  152 [label="Name: a\n(union (alias True (struct True)) (alias False (struct False)))", fillcolor=grey];
  153 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct True)) (alias False (struct False)))))", fillcolor=grey];
  154 [label="FunNode: as\n(fun 'as' ((alias Boolean)) (alias ref))", fillcolor=grey];
  155 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct True)) (alias False (struct False)))))", fillcolor=grey];
  156 [label="Name: a\n(alias Boolean (union (alias True (struct True)) (alias False (struct False))))", fillcolor=grey];
  157 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  158 [label="Name: as\n(intersection (fun 'as' ((union (alias True) (alias False))) (alias Boolean)) (fun 'as' ((alias Boolean)) (alias ref)))", fillcolor=grey];
  159 [label="FunOverload: gt0\n(fun 'gt0' ((alias i32)) (alias Boolean))", fillcolor=grey];
  160 [label="FunNode: gt0\n(fun 'gt0' ((alias i32)) (alias Boolean))", fillcolor=grey];
  161 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  162 [label="Name: x\n(alias i32 (native i32))", fillcolor=grey];
  163 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct True)) (alias False (struct False)))))", fillcolor=grey];
  164 [label="Name: gt0\n(fun 'gt0' ((alias i32)) (alias Boolean))", fillcolor=grey];
  165 [label="FunOverload: isTrue\n(fun 'isTrue' ((alias Boolean)) (alias boolean))", fillcolor=grey];
  166 [label="FunNode: isTrue\n(fun 'isTrue' ((alias Boolean)) (alias boolean))", fillcolor=grey];
  167 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct True)) (alias False (struct False)))))", fillcolor=grey];
  168 [label="Name: a\n(alias Boolean (union (alias True (struct True)) (alias False (struct False))))", fillcolor=grey];
  169 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  170 [label="Name: isTrue\n(fun 'isTrue' ((alias Boolean)) (alias boolean))", fillcolor=grey];
  subgraph cluster0 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    171 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    172 [label="Name: rhs\n(alias ref (ref ?))", fillcolor=grey];
    173 [label="BinOp: '=='\n(alias boolean (native boolean))", fillcolor=grey];
    174 [label="Ref: lhs\n(alias ref (ref ?))", fillcolor=grey];
    175 [label="Ref: rhs\n(alias ref (ref ?))", fillcolor=grey];
    176 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    171 -> 174[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    172 -> 175[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    174 -> 173[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    175 -> 173[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/poli1.ro::Boolean.==(ref,ref)";
}
  subgraph cluster1 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    177 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    178 [label="Name: rhs\n(alias ref (ref ?))", fillcolor=grey];
    179 [label="BinOp: '!='\n(alias boolean (native boolean))", fillcolor=grey];
    180 [label="Ref: lhs\n(alias ref (ref ?))", fillcolor=grey];
    181 [label="Ref: rhs\n(alias ref (ref ?))", fillcolor=grey];
    182 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    177 -> 180[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    178 -> 181[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    180 -> 179[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    181 -> 179[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/poli1.ro::Boolean.!=(ref,ref)";
}
  subgraph cluster2 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    183 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    184 [label="Ref: True\n(type (alias True (struct True)))", fillcolor=grey];
  label="test/fixtures/types/poli1.ro::True.apply()";
}
  subgraph cluster3 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    185 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    186 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    187 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    188 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    189 [label="Ref: True\n(type (alias True (struct True)))", fillcolor=grey];
  label="test/fixtures/types/poli1.ro::True.load(ref,i32)";
}
  subgraph cluster4 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    190 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    191 [label="Ref: False\n(type (alias False (struct False)))", fillcolor=grey];
  label="test/fixtures/types/poli1.ro::False.apply()";
}
  subgraph cluster5 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    192 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    193 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    194 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    195 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    196 [label="Ref: False\n(type (alias False (struct False)))", fillcolor=grey];
  label="test/fixtures/types/poli1.ro::False.load(ref,i32)";
}
  subgraph cluster6 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    197 [label="Name: a\n(alias True (struct True))", fillcolor=grey];
    198 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    199 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/poli1.ro::True.is(True)";
}
  subgraph cluster7 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    200 [label="Name: a\n(alias True (struct True))", fillcolor=grey];
    201 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
    202 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    203 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/poli1.ro::True.==(True,ref)";
}
  subgraph cluster8 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    204 [label="Name: a\n(alias True (struct True))", fillcolor=grey];
    205 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
    206 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    207 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/poli1.ro::True.!=(True,ref)";
}
  subgraph cluster9 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    208 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    209 [label="Name: rhs\n(alias True (struct True))", fillcolor=grey];
    210 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    211 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    212 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    213 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  label="test/fixtures/types/poli1.ro::True.store(ref,True,i32)";
}
  subgraph cluster10 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    214 [label="Name: a\n(alias False (struct False))", fillcolor=grey];
    215 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    216 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/poli1.ro::False.is(False)";
}
  subgraph cluster11 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    217 [label="Name: a\n(alias False (struct False))", fillcolor=grey];
    218 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
    219 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    220 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/poli1.ro::False.==(False,ref)";
}
  subgraph cluster12 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    221 [label="Name: a\n(alias False (struct False))", fillcolor=grey];
    222 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
    223 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    224 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/poli1.ro::False.!=(False,ref)";
}
  subgraph cluster13 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    225 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    226 [label="Name: rhs\n(alias False (struct False))", fillcolor=grey];
    227 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    228 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    229 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    230 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  label="test/fixtures/types/poli1.ro::False.store(ref,False,i32)";
}
  subgraph cluster14 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    231 [label="Name: a\n(union (alias True (struct True)) (alias False (struct False)))", fillcolor=grey];
    232 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    233 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct True)) (alias False (struct False)))))", fillcolor=grey];
  label="test/fixtures/types/poli1.ro::Boolean.as(True | False)";
}
  subgraph cluster15 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    234 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    235 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    236 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    237 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    238 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct True)) (alias False (struct False)))))", fillcolor=grey];
  label="test/fixtures/types/poli1.ro::Boolean.load(ref,i32)";
}
  subgraph cluster16 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    239 [label="Name: a\n(alias True (struct True))", fillcolor=grey];
    240 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    241 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct True)) (alias False (struct False)))))", fillcolor=grey];
  label="test/fixtures/types/poli1.ro::True.as(True)";
}
  subgraph cluster17 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    242 [label="Name: a\n(alias False (struct False))", fillcolor=grey];
    243 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    244 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct True)) (alias False (struct False)))))", fillcolor=grey];
  label="test/fixtures/types/poli1.ro::False.as(False)";
}
  subgraph cluster18 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    245 [label="Name: x\n(alias i32 (native i32))", fillcolor=grey];
    246 [label="IfNode\n(union (alias True (struct True)) (alias False (struct False)))", fillcolor=grey];
    247 [label="FunctionCallNode\n(alias True (struct True))", fillcolor=grey];
    248 [label="MemberNode\n(fun 'apply' () (alias True))", fillcolor=grey];
    249 [label="Ref: True\n(type (alias True (struct True)))", fillcolor=grey];
    250 [label="BinOp: '>'\n(alias boolean (native boolean))", fillcolor=grey];
    251 [label="Ref: x\n(alias i32 (native i32))", fillcolor=grey];
    252 [label="Int: 0\n(alias i32 (native i32))", fillcolor=grey];
    253 [label="FunctionCallNode\n(alias False (struct False))", fillcolor=grey];
    254 [label="MemberNode\n(fun 'apply' () (alias False))", fillcolor=grey];
    255 [label="Ref: False\n(type (alias False (struct False)))", fillcolor=grey];
    256 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct True)) (alias False (struct False)))))", fillcolor=grey];
    245 -> 251[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    247 -> 246[taillabel="[TRUE_PART]" fontname="times" fontsize = 7 color="black" ];
    248 -> 247[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    249 -> 248[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    250 -> 246[taillabel="[CONDITION]" fontname="times" fontsize = 7 color="black" ];
    251 -> 250[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    252 -> 250[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    253 -> 246[taillabel="[FALSE_PART]" fontname="times" fontsize = 7 color="black" ];
    254 -> 253[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    255 -> 254[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/poli1.ro::gt0(i32)";
}
  subgraph cluster19 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    257 [label="Name: a\n(alias Boolean (union (alias True (struct True)) (alias False (struct False))))", fillcolor=grey];
    258 [label="BlockNode\n(alias boolean (native boolean))", fillcolor=grey];
    259 [label="BinOp: '||'\n(alias boolean (native boolean))", fillcolor=grey];
    260 [label="IsExpressionNodeis\n(alias boolean (native boolean))", fillcolor=grey];
    261 [label="Ref: a\n(alias Boolean (union (alias True (struct True)) (alias False (struct False))))", fillcolor=grey];
    262 [label="Ref: True\n(type (alias True (struct True)))", fillcolor=grey];
    263 [label="IsExpressionNodeis\n(alias boolean (native boolean))", fillcolor=grey];
    264 [label="Ref: a\n(alias Boolean (union (alias True (struct True)) (alias False (struct False))))", fillcolor=grey];
    265 [label="Ref: False\n(type (alias False (struct False)))", fillcolor=grey];
    266 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    257 -> 261[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    257 -> 264[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    259 -> 258[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
    260 -> 259[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    261 -> 260[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    262 -> 260[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    263 -> 259[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    264 -> 263[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    265 -> 263[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/poli1.ro::Boolean.is(Boolean)";
}
  subgraph cluster20 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    267 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    268 [label="Name: rhs\n(alias Boolean (union (alias True (struct True)) (alias False (struct False))))", fillcolor=grey];
    269 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    270 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    271 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    272 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  label="test/fixtures/types/poli1.ro::Boolean.store(ref,Boolean,i32)";
}
  subgraph cluster21 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    273 [label="Name: a\n(alias Boolean (union (alias True (struct True)) (alias False (struct False))))", fillcolor=grey];
    274 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    275 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  label="test/fixtures/types/poli1.ro::Boolean.as_1(Boolean)";
}
  subgraph cluster22 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    276 [label="Name: a\n(alias Boolean (union (alias True (struct True)) (alias False (struct False))))", fillcolor=grey];
    277 [label="PatternMatcherNode\n(alias boolean (native boolean))", fillcolor=grey];
    278 [label="Ref: a\n(alias Boolean (union (alias True (struct True)) (alias False (struct False))))", fillcolor=grey];
    279 [label="MatchCaseIsNode\n(alias boolean (native boolean))", fillcolor=grey];
    280 [label="Ref: True\n(type (alias True (struct True)))", fillcolor=grey];
    281 [label="BooleanLiteraltrue\n(alias boolean (native boolean))", fillcolor=grey];
    282 [label="TypeReducerNode\n(union (alias True (struct True)) (alias False (struct False)))", fillcolor=grey];
    283 [label="MatchDefaultNode\n(alias boolean (native boolean))", fillcolor=grey];
    284 [label="BooleanLiteralfalse\n(alias boolean (native boolean))", fillcolor=grey];
    285 [label="TypeReducerNode\n(alias False (struct False))", fillcolor=grey];
    286 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    276 -> 278[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    278 -> 277[taillabel="[PATTERN_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    278 -> 282[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    279 -> 277[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    280 -> 279[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    280 -> 285[taillabel="[REMOVED_TYPE]" fontname="times" fontsize = 7 color="black" ];
    281 -> 279[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    282 -> 279[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    282 -> 285[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    283 -> 277[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    284 -> 283[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    285 -> 283[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/poli1.ro::isTrue(Boolean)";
}
  1 -> 4[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 8[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 14[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 22[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 32[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 44[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 93[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 137[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 150[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 184[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 189[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 249[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 262[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 280[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  2 -> 5[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  3 -> 2[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  4 -> 3[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  6 -> 11[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  7 -> 6[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  8 -> 9[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  9 -> 7[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  10 -> 7[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  12 -> 19[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  13 -> 12[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  14 -> 15[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  15 -> 13[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  16 -> 17[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  17 -> 13[taillabel="[b]" fontname="times" fontsize = 7 color="black" ];
  18 -> 13[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  20 -> 27[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  21 -> 20[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  22 -> 23[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  23 -> 21[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  24 -> 25[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  25 -> 21[taillabel="[b]" fontname="times" fontsize = 7 color="black" ];
  26 -> 21[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  28 -> 37[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  29 -> 28[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  30 -> 31[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  31 -> 29[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  32 -> 33[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  33 -> 29[taillabel="[rhs]" fontname="times" fontsize = 7 color="black" ];
  34 -> 35[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  35 -> 29[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  36 -> 29[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  38 -> 45[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  39 -> 38[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  40 -> 41[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  41 -> 39[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  42 -> 43[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  43 -> 39[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  44 -> 39[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  46 -> 49[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 53[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 59[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 67[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 77[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 89[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 94[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 143[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 151[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 191[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 196[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 255[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  46 -> 265[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  47 -> 50[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  48 -> 47[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  49 -> 48[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  51 -> 56[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  52 -> 51[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  53 -> 54[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  54 -> 52[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  55 -> 52[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  57 -> 64[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  58 -> 57[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  59 -> 60[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  60 -> 58[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  61 -> 62[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  62 -> 58[taillabel="[b]" fontname="times" fontsize = 7 color="black" ];
  63 -> 58[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  65 -> 72[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  66 -> 65[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  67 -> 68[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  68 -> 66[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  69 -> 70[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  70 -> 66[taillabel="[b]" fontname="times" fontsize = 7 color="black" ];
  71 -> 66[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  73 -> 82[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  74 -> 73[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  75 -> 76[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  76 -> 74[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  77 -> 78[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  78 -> 74[taillabel="[rhs]" fontname="times" fontsize = 7 color="black" ];
  79 -> 80[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  80 -> 74[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  81 -> 74[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  83 -> 90[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  84 -> 83[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  85 -> 86[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  86 -> 84[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  87 -> 88[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  88 -> 84[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  89 -> 84[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  91 -> 97[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 121[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 133[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 139[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 145[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 153[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 155[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 163[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 167[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 233[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 238[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 241[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 244[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  91 -> 256[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  92 -> 91[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  93 -> 92[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  94 -> 92[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  95 -> 100[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  96 -> 95[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  97 -> 98[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  98 -> 96[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  99 -> 96[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  101 -> 108[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  102 -> 101[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  103 -> 104[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  104 -> 102[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  105 -> 106[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  106 -> 102[taillabel="[rhs]" fontname="times" fontsize = 7 color="black" ];
  107 -> 102[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  109 -> 116[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  110 -> 109[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  111 -> 112[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  112 -> 110[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  113 -> 114[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  114 -> 110[taillabel="[rhs]" fontname="times" fontsize = 7 color="black" ];
  115 -> 110[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  117 -> 126[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  118 -> 117[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  119 -> 120[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  120 -> 118[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  121 -> 122[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  122 -> 118[taillabel="[rhs]" fontname="times" fontsize = 7 color="black" ];
  123 -> 124[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  124 -> 118[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  125 -> 118[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  127 -> 134[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  128 -> 127[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  129 -> 130[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  130 -> 128[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  131 -> 132[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  132 -> 128[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  133 -> 128[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  135 -> 140[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  136 -> 135[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  137 -> 138[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  138 -> 136[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  139 -> 136[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  141 -> 146[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  142 -> 141[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  143 -> 144[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  144 -> 142[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  145 -> 142[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  147 -> 158[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  148 -> 147[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  149 -> 152[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  150 -> 149[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  151 -> 149[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  152 -> 148[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  153 -> 148[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  154 -> 147[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  155 -> 156[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  156 -> 154[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  157 -> 154[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  159 -> 164[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  160 -> 159[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  161 -> 162[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  162 -> 160[taillabel="[x]" fontname="times" fontsize = 7 color="black" ];
  163 -> 160[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  165 -> 170[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  166 -> 165[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  167 -> 168[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  168 -> 166[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  169 -> 166[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  label="";
}
