digraph LYS {
  node [shape=box,fontsize=10];
  subgraph "cluster_test/fixtures/types/poli1.lys" {
    1 [label="Name: True\n(type (alias True (struct)))", fillcolor=grey];
    2 [label="Name: False\n(type (alias False (struct)))", fillcolor=grey];
    3 [label="Name: Boolean\n(type (alias Boolean (union (alias True (struct)) (alias False (struct)))))", fillcolor=grey];
    4 [label="UnionTypeNode\n(type (union (alias True (struct)) (alias False (struct))))", fillcolor=grey];
    5 [label="Ref: True\n(type (alias True (struct)))", fillcolor=grey];
    6 [label="Ref: False\n(type (alias False (struct)))", fillcolor=grey];
    7 [label="FunOverload: gt0\n(fun 'gt0' ((alias i32)) (alias Boolean))", fillcolor=grey];
    8 [label="FunNode: gt0\n(fun 'gt0' ((alias i32)) (alias Boolean))", fillcolor=grey];
    9 [label="Name: x\n(alias i32 (native i32))", fillcolor=grey];
    10 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    11 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct)) (alias False (struct)))))", fillcolor=grey];
    12 [label="Name: gt0\n(fun 'gt0' ((alias i32)) (alias Boolean))", fillcolor=grey];
    13 [label="FunOverload: isTrue\n(fun 'isTrue' ((alias Boolean)) (alias boolean))", fillcolor=grey];
    14 [label="FunNode: isTrue\n(fun 'isTrue' ((alias Boolean)) (alias boolean))", fillcolor=grey];
    15 [label="Name: a\n(alias Boolean (union (alias True (struct)) (alias False (struct))))", fillcolor=grey];
    16 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct)) (alias False (struct)))))", fillcolor=grey];
    17 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    18 [label="Name: isTrue\n(fun 'isTrue' ((alias Boolean)) (alias boolean))", fillcolor=grey];
    subgraph "cluster_test/fixtures/types/poli1.lys_0" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      19 [label="IfNode\n(union (alias True (struct)) (alias False (struct)))", fillcolor=grey];
      20 [label="FunctionCallNode\n(alias True (struct))", fillcolor=grey];
      21 [label="MemberNode\n(fun 'apply' () (alias True))", fillcolor=grey];
      22 [label="Ref: True\n(type (alias True (struct)))", fillcolor=grey];
      23 [label="BinOp: >\n(alias boolean (native boolean))", fillcolor=grey];
      24 [label="Ref: x\n(alias i32 (native i32))", fillcolor=grey];
      25 [label="Int: 0\n(alias i32 (native i32))", fillcolor=grey];
      26 [label="FunctionCallNode\n(alias False (struct))", fillcolor=grey];
      27 [label="MemberNode\n(fun 'apply' () (alias False))", fillcolor=grey];
      28 [label="Ref: False\n(type (alias False (struct)))", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::gt0(i32)";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys_1" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      29 [label="PatternMatcherNode\n(alias boolean (native boolean))", fillcolor=grey];
      30 [label="Ref: a\n(alias Boolean (union (alias True (struct)) (alias False (struct))))", fillcolor=grey];
      31 [label="MatchCaseIsNode\n(alias boolean (native boolean))", fillcolor=grey];
      32 [label="Ref: True\n(type (alias True (struct)))", fillcolor=grey];
      33 [label="BooleanLiteral\n(alias boolean (native boolean))", fillcolor=grey];
      34 [label="MatchDefaultNode\n(alias boolean (native boolean))", fillcolor=grey];
      35 [label="BooleanLiteral\n(alias boolean (native boolean))", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::isTrue(Boolean)";
    }
    label="test/fixtures/types/poli1.lys";
  }
  subgraph "cluster_test/fixtures/types/poli1.lys#True" {
    36 [label="FunOverload: True$discriminant\n(fun 'True$discriminant' () (alias i64))", fillcolor=grey];
    37 [label="FunNode: True$discriminant\n(fun 'True$discriminant' () (alias i64))", fillcolor=grey];
    38 [label="Ref: i64\n(type (alias i64 (native i64)))", fillcolor=grey];
    39 [label="Name: True$discriminant\n(fun 'True$discriminant' () (alias i64))", fillcolor=grey];
    40 [label="FunOverload: apply\n(fun 'apply' () (alias True))", fillcolor=grey];
    41 [label="FunNode: apply\n(fun 'apply' () (alias True))", fillcolor=grey];
    42 [label="Ref: True\n(type (alias True (struct)))", fillcolor=grey];
    43 [label="Name: apply\n(fun 'apply' () (alias True))", fillcolor=grey];
    44 [label="FunOverload: is\n(fun 'is' ((union (alias True) (alias ref))) (alias boolean))", fillcolor=grey];
    45 [label="FunNode: is\n(fun 'is' ((union (alias True) (alias ref))) (alias boolean))", fillcolor=grey];
    46 [label="Name: a\n(union (alias True (struct)) (alias ref (ref ?)))", fillcolor=grey];
    47 [label="UnionTypeNode\n(type (union (alias True (struct)) (alias ref (ref ?))))", fillcolor=grey];
    48 [label="Ref: True\n(type (alias True (struct)))", fillcolor=grey];
    49 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    50 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    51 [label="Name: is\n(fun 'is' ((union (alias True) (alias ref))) (alias boolean))", fillcolor=grey];
    52 [label="FunOverload: ==\n(fun '==' ((alias True) (alias ref)) (alias boolean))", fillcolor=grey];
    53 [label="FunNode: ==\n(fun '==' ((alias True) (alias ref)) (alias boolean))", fillcolor=grey];
    54 [label="Name: a\n(alias True (struct))", fillcolor=grey];
    55 [label="Ref: True\n(type (alias True (struct)))", fillcolor=grey];
    56 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
    57 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    58 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    59 [label="Name: ==\n(fun '==' ((alias True) (alias ref)) (alias boolean))", fillcolor=grey];
    60 [label="FunOverload: !=\n(fun '!=' ((alias True) (alias ref)) (alias boolean))", fillcolor=grey];
    61 [label="FunNode: !=\n(fun '!=' ((alias True) (alias ref)) (alias boolean))", fillcolor=grey];
    62 [label="Name: a\n(alias True (struct))", fillcolor=grey];
    63 [label="Ref: True\n(type (alias True (struct)))", fillcolor=grey];
    64 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
    65 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    66 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    67 [label="Name: !=\n(fun '!=' ((alias True) (alias ref)) (alias boolean))", fillcolor=grey];
    68 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias True) (alias u32)) (alias void))", fillcolor=grey];
    69 [label="FunNode: store\n(fun 'store' ((alias ref) (alias True) (alias u32)) (alias void))", fillcolor=grey];
    70 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    71 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    72 [label="Name: rhs\n(alias True (struct))", fillcolor=grey];
    73 [label="Ref: True\n(type (alias True (struct)))", fillcolor=grey];
    74 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
    75 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    76 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    77 [label="Name: store\n(fun 'store' ((alias ref) (alias True) (alias u32)) (alias void))", fillcolor=grey];
    78 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias u32)) (alias True))", fillcolor=grey];
    79 [label="FunNode: load\n(fun 'load' ((alias ref) (alias u32)) (alias True))", fillcolor=grey];
    80 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    81 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    82 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
    83 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    84 [label="Ref: True\n(type (alias True (struct)))", fillcolor=grey];
    85 [label="Name: load\n(fun 'load' ((alias ref) (alias u32)) (alias True))", fillcolor=grey];
    86 [label="FunOverload: as\n(intersection (fun 'as' ((alias True)) (alias ref)) (fun 'as' ((alias True)) (alias Boolean)))", fillcolor=grey];
    87 [label="FunNode: as\n(fun 'as' ((alias True)) (alias ref))", fillcolor=grey];
    88 [label="Name: lhs\n(alias True (struct))", fillcolor=grey];
    89 [label="Ref: True\n(type (alias True (struct)))", fillcolor=grey];
    90 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    91 [label="Name: as\n(intersection (fun 'as' ((alias True)) (alias ref)) (fun 'as' ((alias True)) (alias Boolean)))", fillcolor=grey];
    subgraph "cluster_test/fixtures/types/poli1.lys#True_0" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      92 [label="BlockNode\n(alias i64 (native i64))", fillcolor=grey];
      93 [label="ValDecl: discriminant\n(native void)", fillcolor=grey];
      94 [label="Name: discriminant\n(alias u32 (native u32))", fillcolor=grey];
      95 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
      96 [label="MemberNode\n(native u32)", fillcolor=grey];
      97 [label="Ref: True\n(type (alias True (struct)))", fillcolor=grey];
      98 [label="BinOp: <<\n(alias i64 (native i64))", fillcolor=grey];
      99 [label="AsExpressionNode\n(alias i64 (native i64))", fillcolor=grey];
      100 [label="Ref: discriminant\n(alias u32 (native u32))", fillcolor=grey];
      101 [label="Ref: i64\n(type (alias i64 (native i64)))", fillcolor=grey];
      102 [label="Int: 32\n(alias i32 (native i32))", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::True.True$discriminant()";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#True_1" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      103 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      104 [label="Ref: True$discriminant\n(fun 'True$discriminant' () (alias i64))", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::True.apply()";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#True_2" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      105 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      106 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::True.load(ref,u32)";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#True_3" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      107 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::True.==(True,ref)";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#True_4" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      108 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::True.!=(True,ref)";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#True_5" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      109 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      110 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::True.store(ref,True,u32)";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#True_6" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      111 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::True.as(True)";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#True_7" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      112 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      113 [label="Ref: True$discriminant\n(fun 'True$discriminant' () (alias i64))", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::True.is(True | ref)";
    }
    label="test/fixtures/types/poli1.lys#True";
  }
  subgraph "cluster_test/fixtures/types/poli1.lys#Boolean" {
    114 [label="FunNode: as\n(fun 'as' ((alias True)) (alias Boolean))", fillcolor=grey];
    115 [label="Name: lhs\n(alias True (struct))", fillcolor=grey];
    116 [label="Ref: True\n(type (alias True (struct)))", fillcolor=grey];
    117 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct)) (alias False (struct)))))", fillcolor=grey];
    118 [label="FunNode: as\n(fun 'as' ((alias False)) (alias Boolean))", fillcolor=grey];
    119 [label="Name: lhs\n(alias False (struct))", fillcolor=grey];
    120 [label="Ref: False\n(type (alias False (struct)))", fillcolor=grey];
    121 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct)) (alias False (struct)))))", fillcolor=grey];
    122 [label="FunOverload: is\n(fun 'is' ((union (alias Boolean) (alias ref))) (alias boolean))", fillcolor=grey];
    123 [label="FunNode: is\n(fun 'is' ((union (alias Boolean) (alias ref))) (alias boolean))", fillcolor=grey];
    124 [label="Name: a\n(union (alias Boolean (union (alias True (struct)) (alias False (struct)))) (alias ref (ref ?)))", fillcolor=grey];
    125 [label="UnionTypeNode\n(type (union (alias Boolean (union (alias True (struct)) (alias False (struct)))) (alias ref (ref ?))))", fillcolor=grey];
    126 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct)) (alias False (struct)))))", fillcolor=grey];
    127 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    128 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    129 [label="Name: is\n(fun 'is' ((union (alias Boolean) (alias ref))) (alias boolean))", fillcolor=grey];
    130 [label="FunOverload: as\n(fun 'as' ((alias Boolean)) (alias ref))", fillcolor=grey];
    131 [label="FunNode: as\n(fun 'as' ((alias Boolean)) (alias ref))", fillcolor=grey];
    132 [label="Name: a\n(alias Boolean (union (alias True (struct)) (alias False (struct))))", fillcolor=grey];
    133 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct)) (alias False (struct)))))", fillcolor=grey];
    134 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    135 [label="Name: as\n(fun 'as' ((alias Boolean)) (alias ref))", fillcolor=grey];
    136 [label="FunOverload: ==\n(fun '==' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
    137 [label="FunNode: ==\n(fun '==' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
    138 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    139 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    140 [label="Name: rhs\n(alias ref (ref ?))", fillcolor=grey];
    141 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    142 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    143 [label="Name: ==\n(fun '==' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
    144 [label="FunOverload: !=\n(fun '!=' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
    145 [label="FunNode: !=\n(fun '!=' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
    146 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    147 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    148 [label="Name: rhs\n(alias ref (ref ?))", fillcolor=grey];
    149 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    150 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    151 [label="Name: !=\n(fun '!=' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
    152 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias Boolean) (alias u32)) (alias void))", fillcolor=grey];
    153 [label="FunNode: store\n(fun 'store' ((alias ref) (alias Boolean) (alias u32)) (alias void))", fillcolor=grey];
    154 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    155 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    156 [label="Name: rhs\n(alias Boolean (union (alias True (struct)) (alias False (struct))))", fillcolor=grey];
    157 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct)) (alias False (struct)))))", fillcolor=grey];
    158 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
    159 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    160 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    161 [label="Name: store\n(fun 'store' ((alias ref) (alias Boolean) (alias u32)) (alias void))", fillcolor=grey];
    162 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias u32)) (alias Boolean))", fillcolor=grey];
    163 [label="FunNode: load\n(fun 'load' ((alias ref) (alias u32)) (alias Boolean))", fillcolor=grey];
    164 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    165 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    166 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
    167 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    168 [label="Ref: Boolean\n(type (alias Boolean (union (alias True (struct)) (alias False (struct)))))", fillcolor=grey];
    169 [label="Name: load\n(fun 'load' ((alias ref) (alias u32)) (alias Boolean))", fillcolor=grey];
    subgraph "cluster_test/fixtures/types/poli1.lys#Boolean_0" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      170 [label="BinOp: ==\n(alias boolean (native boolean))", fillcolor=grey];
      171 [label="Ref: lhs\n(alias ref (ref ?))", fillcolor=grey];
      172 [label="Ref: rhs\n(alias ref (ref ?))", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::Boolean.==(ref,ref)";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#Boolean_1" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      173 [label="BinOp: !=\n(alias boolean (native boolean))", fillcolor=grey];
      174 [label="Ref: lhs\n(alias ref (ref ?))", fillcolor=grey];
      175 [label="Ref: rhs\n(alias ref (ref ?))", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::Boolean.!=(ref,ref)";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#Boolean_2" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      176 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::True.as_1(True)";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#Boolean_3" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      177 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::False.as_1(False)";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#Boolean_4" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      178 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      179 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::Boolean.load(ref,u32)";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#Boolean_5" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      180 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::Boolean.as(Boolean)";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#Boolean_6" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      181 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      182 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::Boolean.store(ref,Boolean,u32)";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#Boolean_7" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      183 [label="BlockNode\n(alias boolean (native boolean))", fillcolor=grey];
      184 [label="BinOp: ||\n(alias boolean (native boolean))", fillcolor=grey];
      185 [label="IsExpressionNode\n(alias boolean (native boolean))", fillcolor=grey];
      186 [label="Ref: a\n(union (alias Boolean (union (alias True (struct)) (alias False (struct)))) (alias ref (ref ?)))", fillcolor=grey];
      187 [label="Ref: True\n(type (alias True (struct)))", fillcolor=grey];
      188 [label="IsExpressionNode\n(alias boolean (native boolean))", fillcolor=grey];
      189 [label="Ref: a\n(union (alias Boolean (union (alias True (struct)) (alias False (struct)))) (alias ref (ref ?)))", fillcolor=grey];
      190 [label="Ref: False\n(type (alias False (struct)))", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::Boolean.is(Boolean | ref)";
    }
    label="test/fixtures/types/poli1.lys#Boolean";
  }
  subgraph "cluster_test/fixtures/types/poli1.lys#False" {
    191 [label="FunOverload: False$discriminant\n(fun 'False$discriminant' () (alias i64))", fillcolor=grey];
    192 [label="FunNode: False$discriminant\n(fun 'False$discriminant' () (alias i64))", fillcolor=grey];
    193 [label="Ref: i64\n(type (alias i64 (native i64)))", fillcolor=grey];
    194 [label="Name: False$discriminant\n(fun 'False$discriminant' () (alias i64))", fillcolor=grey];
    195 [label="FunOverload: apply\n(fun 'apply' () (alias False))", fillcolor=grey];
    196 [label="FunNode: apply\n(fun 'apply' () (alias False))", fillcolor=grey];
    197 [label="Ref: False\n(type (alias False (struct)))", fillcolor=grey];
    198 [label="Name: apply\n(fun 'apply' () (alias False))", fillcolor=grey];
    199 [label="FunOverload: is\n(fun 'is' ((union (alias False) (alias ref))) (alias boolean))", fillcolor=grey];
    200 [label="FunNode: is\n(fun 'is' ((union (alias False) (alias ref))) (alias boolean))", fillcolor=grey];
    201 [label="Name: a\n(union (alias False (struct)) (alias ref (ref ?)))", fillcolor=grey];
    202 [label="UnionTypeNode\n(type (union (alias False (struct)) (alias ref (ref ?))))", fillcolor=grey];
    203 [label="Ref: False\n(type (alias False (struct)))", fillcolor=grey];
    204 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    205 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    206 [label="Name: is\n(fun 'is' ((union (alias False) (alias ref))) (alias boolean))", fillcolor=grey];
    207 [label="FunOverload: ==\n(fun '==' ((alias False) (alias ref)) (alias boolean))", fillcolor=grey];
    208 [label="FunNode: ==\n(fun '==' ((alias False) (alias ref)) (alias boolean))", fillcolor=grey];
    209 [label="Name: a\n(alias False (struct))", fillcolor=grey];
    210 [label="Ref: False\n(type (alias False (struct)))", fillcolor=grey];
    211 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
    212 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    213 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    214 [label="Name: ==\n(fun '==' ((alias False) (alias ref)) (alias boolean))", fillcolor=grey];
    215 [label="FunOverload: !=\n(fun '!=' ((alias False) (alias ref)) (alias boolean))", fillcolor=grey];
    216 [label="FunNode: !=\n(fun '!=' ((alias False) (alias ref)) (alias boolean))", fillcolor=grey];
    217 [label="Name: a\n(alias False (struct))", fillcolor=grey];
    218 [label="Ref: False\n(type (alias False (struct)))", fillcolor=grey];
    219 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
    220 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    221 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    222 [label="Name: !=\n(fun '!=' ((alias False) (alias ref)) (alias boolean))", fillcolor=grey];
    223 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias False) (alias u32)) (alias void))", fillcolor=grey];
    224 [label="FunNode: store\n(fun 'store' ((alias ref) (alias False) (alias u32)) (alias void))", fillcolor=grey];
    225 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    226 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    227 [label="Name: rhs\n(alias False (struct))", fillcolor=grey];
    228 [label="Ref: False\n(type (alias False (struct)))", fillcolor=grey];
    229 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
    230 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    231 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    232 [label="Name: store\n(fun 'store' ((alias ref) (alias False) (alias u32)) (alias void))", fillcolor=grey];
    233 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias u32)) (alias False))", fillcolor=grey];
    234 [label="FunNode: load\n(fun 'load' ((alias ref) (alias u32)) (alias False))", fillcolor=grey];
    235 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    236 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    237 [label="Name: offset\n(alias u32 (native u32))", fillcolor=grey];
    238 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    239 [label="Ref: False\n(type (alias False (struct)))", fillcolor=grey];
    240 [label="Name: load\n(fun 'load' ((alias ref) (alias u32)) (alias False))", fillcolor=grey];
    241 [label="FunOverload: as\n(intersection (fun 'as' ((alias False)) (alias ref)) (fun 'as' ((alias False)) (alias Boolean)))", fillcolor=grey];
    242 [label="FunNode: as\n(fun 'as' ((alias False)) (alias ref))", fillcolor=grey];
    243 [label="Name: lhs\n(alias False (struct))", fillcolor=grey];
    244 [label="Ref: False\n(type (alias False (struct)))", fillcolor=grey];
    245 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    246 [label="Name: as\n(intersection (fun 'as' ((alias False)) (alias ref)) (fun 'as' ((alias False)) (alias Boolean)))", fillcolor=grey];
    subgraph "cluster_test/fixtures/types/poli1.lys#False_0" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      247 [label="BlockNode\n(alias i64 (native i64))", fillcolor=grey];
      248 [label="ValDecl: discriminant\n(native void)", fillcolor=grey];
      249 [label="Name: discriminant\n(alias u32 (native u32))", fillcolor=grey];
      250 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
      251 [label="MemberNode\n(native u32)", fillcolor=grey];
      252 [label="Ref: False\n(type (alias False (struct)))", fillcolor=grey];
      253 [label="BinOp: <<\n(alias i64 (native i64))", fillcolor=grey];
      254 [label="AsExpressionNode\n(alias i64 (native i64))", fillcolor=grey];
      255 [label="Ref: discriminant\n(alias u32 (native u32))", fillcolor=grey];
      256 [label="Ref: i64\n(type (alias i64 (native i64)))", fillcolor=grey];
      257 [label="Int: 32\n(alias i32 (native i32))", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::False.False$discriminant()";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#False_1" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      258 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      259 [label="Ref: False$discriminant\n(fun 'False$discriminant' () (alias i64))", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::False.apply()";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#False_2" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      260 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      261 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::False.load(ref,u32)";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#False_3" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      262 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::False.==(False,ref)";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#False_4" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      263 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::False.!=(False,ref)";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#False_5" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      264 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      265 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::False.store(ref,False,u32)";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#False_6" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      266 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::False.as(False)";
    }
    subgraph "cluster_test/fixtures/types/poli1.lys#False_7" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      267 [label="WasmExpressionNode\n(never)", fillcolor=grey];
      268 [label="Ref: False$discriminant\n(fun 'False$discriminant' () (alias i64))", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::False.is(False | ref)";
    }
    label="test/fixtures/types/poli1.lys#False";
  }
  subgraph "cluster_<no-document>" {
    subgraph "cluster_<no-document>_0" { rankdir=TB;
      node [style=filled, fillcolor=grey];
      269 [label="Name: $\n(alias True (struct))", fillcolor=grey];
      270 [label="TypeReducerNode\n(union (alias True (struct)) (alias False (struct)))", fillcolor=grey];
      271 [label="TypeReducerNode\n(alias False (struct))", fillcolor=grey];
      label="test/fixtures/types/poli1.lys::isTrue(Boolean)";
    }
    label="<no-document>";
  }
  1 -> 42[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 48[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 55[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 63[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 73[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 84[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 89[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 116[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 5[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 97[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 22[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 32[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  1 -> 187[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  36 -> 39[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  37 -> 36[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  38 -> 37[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  39 -> 104[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  39 -> 113[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  40 -> 43[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  41 -> 40[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  42 -> 41[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  44 -> 51[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  45 -> 44[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  46 -> 45[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  47 -> 46[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  48 -> 47[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  49 -> 47[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  50 -> 45[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  52 -> 59[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  53 -> 52[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  54 -> 53[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  55 -> 54[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  56 -> 53[taillabel="[b]" fontsize=7 fontname="times" color="black" ];
  57 -> 56[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  58 -> 53[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  60 -> 67[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  61 -> 60[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  62 -> 61[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  63 -> 62[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  64 -> 61[taillabel="[b]" fontsize=7 fontname="times" color="black" ];
  65 -> 64[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  66 -> 61[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  68 -> 77[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  69 -> 68[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  70 -> 69[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  71 -> 70[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  72 -> 69[taillabel="[rhs]" fontsize=7 fontname="times" color="black" ];
  73 -> 72[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  74 -> 69[taillabel="[offset]" fontsize=7 fontname="times" color="black" ];
  75 -> 74[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  76 -> 69[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  78 -> 85[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  79 -> 78[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  80 -> 79[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  81 -> 80[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  82 -> 79[taillabel="[offset]" fontsize=7 fontname="times" color="black" ];
  83 -> 82[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  84 -> 79[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  86 -> 91[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  87 -> 86[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  88 -> 87[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  89 -> 88[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  90 -> 87[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  114 -> 86[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  115 -> 114[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  116 -> 115[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  117 -> 114[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  2 -> 197[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 203[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 210[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 218[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 228[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 239[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 244[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 120[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 6[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 252[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 28[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  2 -> 190[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  191 -> 194[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  192 -> 191[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  193 -> 192[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  194 -> 259[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  194 -> 268[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  195 -> 198[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  196 -> 195[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  197 -> 196[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  199 -> 206[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  200 -> 199[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  201 -> 200[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  202 -> 201[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  203 -> 202[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  204 -> 202[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  205 -> 200[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  207 -> 214[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  208 -> 207[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  209 -> 208[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  210 -> 209[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  211 -> 208[taillabel="[b]" fontsize=7 fontname="times" color="black" ];
  212 -> 211[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  213 -> 208[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  215 -> 222[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  216 -> 215[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  217 -> 216[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  218 -> 217[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  219 -> 216[taillabel="[b]" fontsize=7 fontname="times" color="black" ];
  220 -> 219[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  221 -> 216[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  223 -> 232[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  224 -> 223[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  225 -> 224[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  226 -> 225[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  227 -> 224[taillabel="[rhs]" fontsize=7 fontname="times" color="black" ];
  228 -> 227[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  229 -> 224[taillabel="[offset]" fontsize=7 fontname="times" color="black" ];
  230 -> 229[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  231 -> 224[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  233 -> 240[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  234 -> 233[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  235 -> 234[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  236 -> 235[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  237 -> 234[taillabel="[offset]" fontsize=7 fontname="times" color="black" ];
  238 -> 237[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  239 -> 234[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  241 -> 246[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  242 -> 241[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  243 -> 242[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  244 -> 243[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  245 -> 242[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  118 -> 241[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  119 -> 118[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  120 -> 119[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  121 -> 118[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  3 -> 117[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 121[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 126[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 133[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 157[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 168[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 11[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  3 -> 16[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  4 -> 3[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  5 -> 4[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  6 -> 4[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  122 -> 129[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  123 -> 122[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  124 -> 123[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  124 -> 186[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  124 -> 189[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  125 -> 124[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  126 -> 125[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  127 -> 125[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  128 -> 123[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  130 -> 135[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  131 -> 130[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  132 -> 131[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  133 -> 132[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  134 -> 131[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  136 -> 143[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  137 -> 136[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  138 -> 137[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  138 -> 171[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  139 -> 138[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  140 -> 137[taillabel="[rhs]" fontsize=7 fontname="times" color="black" ];
  140 -> 172[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  141 -> 140[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  142 -> 137[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  144 -> 151[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  145 -> 144[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  146 -> 145[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  146 -> 174[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  147 -> 146[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  148 -> 145[taillabel="[rhs]" fontsize=7 fontname="times" color="black" ];
  148 -> 175[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  149 -> 148[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  150 -> 145[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  152 -> 161[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  153 -> 152[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  154 -> 153[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  155 -> 154[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  156 -> 153[taillabel="[rhs]" fontsize=7 fontname="times" color="black" ];
  157 -> 156[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  158 -> 153[taillabel="[offset]" fontsize=7 fontname="times" color="black" ];
  159 -> 158[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  160 -> 153[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  162 -> 169[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  163 -> 162[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  164 -> 163[taillabel="[lhs]" fontsize=7 fontname="times" color="black" ];
  165 -> 164[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  166 -> 163[taillabel="[offset]" fontsize=7 fontname="times" color="black" ];
  167 -> 166[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  168 -> 163[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  7 -> 12[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  8 -> 7[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  9 -> 8[taillabel="[x]" fontsize=7 fontname="times" color="black" ];
  9 -> 24[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  10 -> 9[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  11 -> 8[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  13 -> 18[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  14 -> 13[taillabel="[FUNCTION]" fontsize=7 fontname="times" color="black" ];
  15 -> 14[taillabel="[a]" fontsize=7 fontname="times" color="black" ];
  15 -> 30[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  16 -> 15[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  17 -> 14[taillabel="[#RETURN_TYPE]" fontsize=7 fontname="times" color="black" ];
  93 -> 92[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  94 -> 100[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  95 -> 94[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  96 -> 94[taillabel="[DEFAULT_VALUE]" fontsize=7 fontname="times" color="black" ];
  97 -> 96[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  98 -> 92[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  99 -> 98[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  100 -> 99[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  101 -> 99[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  102 -> 98[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  248 -> 247[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  249 -> 255[taillabel="[NAME]" fontsize=7 fontname="times" color="black" ];
  250 -> 249[taillabel="[EXPECTED_TYPE]" fontsize=7 fontname="times" color="black" ];
  251 -> 249[taillabel="[DEFAULT_VALUE]" fontsize=7 fontname="times" color="black" ];
  252 -> 251[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  253 -> 247[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  254 -> 253[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  255 -> 254[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  256 -> 254[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  257 -> 253[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  171 -> 170[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  172 -> 170[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  174 -> 173[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  175 -> 173[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  20 -> 19[taillabel="[TRUE_PART]" fontsize=7 fontname="times" color="black" ];
  21 -> 20[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  22 -> 21[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  23 -> 19[taillabel="[CONDITION]" fontsize=7 fontname="times" color="black" ];
  24 -> 23[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  25 -> 23[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  26 -> 19[taillabel="[FALSE_PART]" fontsize=7 fontname="times" color="black" ];
  27 -> 26[taillabel="[]" fontsize=7 fontname="times" color="black" ];
  28 -> 27[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  30 -> 29[taillabel="[PATTERN_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  30 -> 270[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  31 -> 29[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  32 -> 31[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  32 -> 269[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  32 -> 271[taillabel="[REMOVED_TYPE]" fontsize=7 fontname="times" color="black" ];
  33 -> 31[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  270 -> 31[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  270 -> 271[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  34 -> 29[taillabel="[MATCH_EXPRESSION]" fontsize=7 fontname="times" color="black" ];
  35 -> 34[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  271 -> 34[taillabel="[PATTERN_MATCHING_VALUE]" fontsize=7 fontname="times" color="black" ];
  184 -> 183[taillabel="[STATEMENTS]" fontsize=7 fontname="times" color="black" ];
  185 -> 184[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  186 -> 185[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  187 -> 185[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  188 -> 184[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  189 -> 188[taillabel="[LHS]" fontsize=7 fontname="times" color="black" ];
  190 -> 188[taillabel="[RHS]" fontsize=7 fontname="times" color="black" ];
  label="LYS";
}
