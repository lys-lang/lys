digraph Document {
  node [shape=box,fontsize=10]; rankdir=LR;
  1 [label="Name: Maybe\n(type (alias Maybe (union (alias None (struct None)) (alias Some (struct Some)))))", fillcolor=grey];
  2 [label="UnionTypeNode\n(type (union (alias None (struct None)) (alias Some (struct Some))))", fillcolor=grey];
  3 [label="Ref: None\n(type (alias None (struct None)))", fillcolor=grey];
  4 [label="Ref: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
  5 [label="FunOverload: is\n(fun 'is' ((alias Maybe)) (alias boolean))", fillcolor=grey];
  6 [label="FunNode: is\n(fun 'is' ((alias Maybe)) (alias boolean))", fillcolor=grey];
  7 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct None)) (alias Some (struct Some)))))", fillcolor=grey];
  8 [label="Name: a\n(alias Maybe (union (alias None (struct None)) (alias Some (struct Some))))", fillcolor=grey];
  9 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  10 [label="Name: is\n(fun 'is' ((alias Maybe)) (alias boolean))", fillcolor=grey];
  11 [label="FunOverload: ==\n(fun '==' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
  12 [label="FunNode: ==\n(fun '==' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
  13 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  14 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  15 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  16 [label="Name: rhs\n(alias ref (ref ?))", fillcolor=grey];
  17 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  18 [label="Name: ==\n(fun '==' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
  19 [label="FunOverload: !=\n(fun '!=' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
  20 [label="FunNode: !=\n(fun '!=' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
  21 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  22 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  23 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  24 [label="Name: rhs\n(alias ref (ref ?))", fillcolor=grey];
  25 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  26 [label="Name: !=\n(fun '!=' ((alias ref) (alias ref)) (alias boolean))", fillcolor=grey];
  27 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias Maybe) (alias i32)) (alias void))", fillcolor=grey];
  28 [label="FunNode: store\n(fun 'store' ((alias ref) (alias Maybe) (alias i32)) (alias void))", fillcolor=grey];
  29 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  30 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  31 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct None)) (alias Some (struct Some)))))", fillcolor=grey];
  32 [label="Name: rhs\n(alias Maybe (union (alias None (struct None)) (alias Some (struct Some))))", fillcolor=grey];
  33 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  34 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  35 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  36 [label="Name: store\n(fun 'store' ((alias ref) (alias Maybe) (alias i32)) (alias void))", fillcolor=grey];
  37 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias i32)) (alias Maybe))", fillcolor=grey];
  38 [label="FunNode: load\n(fun 'load' ((alias ref) (alias i32)) (alias Maybe))", fillcolor=grey];
  39 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  40 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  41 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  42 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  43 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct None)) (alias Some (struct Some)))))", fillcolor=grey];
  44 [label="Name: load\n(fun 'load' ((alias ref) (alias i32)) (alias Maybe))", fillcolor=grey];
  45 [label="FunOverload: as\n(fun 'as' ((alias None)) (alias Maybe))", fillcolor=grey];
  46 [label="FunNode: as\n(fun 'as' ((alias None)) (alias Maybe))", fillcolor=grey];
  47 [label="Ref: None\n(type (alias None (struct None)))", fillcolor=grey];
  48 [label="Name: a\n(alias None (struct None))", fillcolor=grey];
  49 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct None)) (alias Some (struct Some)))))", fillcolor=grey];
  50 [label="Name: as\n(fun 'as' ((alias None)) (alias Maybe))", fillcolor=grey];
  51 [label="FunOverload: as\n(fun 'as' ((alias Some)) (alias Maybe))", fillcolor=grey];
  52 [label="FunNode: as\n(fun 'as' ((alias Some)) (alias Maybe))", fillcolor=grey];
  53 [label="Ref: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
  54 [label="Name: a\n(alias Some (struct Some))", fillcolor=grey];
  55 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct None)) (alias Some (struct Some)))))", fillcolor=grey];
  56 [label="Name: as\n(fun 'as' ((alias Some)) (alias Maybe))", fillcolor=grey];
  57 [label="FunOverload: as\n(intersection (fun 'as' ((union (alias None) (alias Some))) (alias Maybe)) (fun 'as' ((alias Maybe)) (alias ref)))", fillcolor=grey];
  58 [label="FunNode: as\n(fun 'as' ((union (alias None) (alias Some))) (alias Maybe))", fillcolor=grey];
  59 [label="UnionTypeNode\n(type (union (alias None (struct None)) (alias Some (struct Some))))", fillcolor=grey];
  60 [label="Ref: None\n(type (alias None (struct None)))", fillcolor=grey];
  61 [label="Ref: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
  62 [label="Name: a\n(union (alias None (struct None)) (alias Some (struct Some)))", fillcolor=grey];
  63 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct None)) (alias Some (struct Some)))))", fillcolor=grey];
  64 [label="FunNode: as\n(fun 'as' ((alias Maybe)) (alias ref))", fillcolor=grey];
  65 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct None)) (alias Some (struct Some)))))", fillcolor=grey];
  66 [label="Name: a\n(alias Maybe (union (alias None (struct None)) (alias Some (struct Some))))", fillcolor=grey];
  67 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  68 [label="Name: as\n(intersection (fun 'as' ((union (alias None) (alias Some))) (alias Maybe)) (fun 'as' ((alias Maybe)) (alias ref)))", fillcolor=grey];
  69 [label="Name: None\n(type (alias None (struct None)))", fillcolor=grey];
  70 [label="FunOverload: apply\n(fun 'apply' () (alias None))", fillcolor=grey];
  71 [label="FunNode: apply\n(fun 'apply' () (alias None))", fillcolor=grey];
  72 [label="Ref: None\n(type (alias None (struct None)))", fillcolor=grey];
  73 [label="Name: apply\n(fun 'apply' () (alias None))", fillcolor=grey];
  74 [label="FunOverload: is\n(fun 'is' ((alias None)) (alias boolean))", fillcolor=grey];
  75 [label="FunNode: is\n(fun 'is' ((alias None)) (alias boolean))", fillcolor=grey];
  76 [label="Ref: None\n(type (alias None (struct None)))", fillcolor=grey];
  77 [label="Name: a\n(alias None (struct None))", fillcolor=grey];
  78 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  79 [label="Name: is\n(fun 'is' ((alias None)) (alias boolean))", fillcolor=grey];
  80 [label="FunOverload: ==\n(fun '==' ((alias None) (alias ref)) (alias boolean))", fillcolor=grey];
  81 [label="FunNode: ==\n(fun '==' ((alias None) (alias ref)) (alias boolean))", fillcolor=grey];
  82 [label="Ref: None\n(type (alias None (struct None)))", fillcolor=grey];
  83 [label="Name: a\n(alias None (struct None))", fillcolor=grey];
  84 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  85 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
  86 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  87 [label="Name: ==\n(fun '==' ((alias None) (alias ref)) (alias boolean))", fillcolor=grey];
  88 [label="FunOverload: !=\n(fun '!=' ((alias None) (alias ref)) (alias boolean))", fillcolor=grey];
  89 [label="FunNode: !=\n(fun '!=' ((alias None) (alias ref)) (alias boolean))", fillcolor=grey];
  90 [label="Ref: None\n(type (alias None (struct None)))", fillcolor=grey];
  91 [label="Name: a\n(alias None (struct None))", fillcolor=grey];
  92 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  93 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
  94 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  95 [label="Name: !=\n(fun '!=' ((alias None) (alias ref)) (alias boolean))", fillcolor=grey];
  96 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias None) (alias i32)) (alias void))", fillcolor=grey];
  97 [label="FunNode: store\n(fun 'store' ((alias ref) (alias None) (alias i32)) (alias void))", fillcolor=grey];
  98 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  99 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  100 [label="Ref: None\n(type (alias None (struct None)))", fillcolor=grey];
  101 [label="Name: rhs\n(alias None (struct None))", fillcolor=grey];
  102 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  103 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  104 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  105 [label="Name: store\n(fun 'store' ((alias ref) (alias None) (alias i32)) (alias void))", fillcolor=grey];
  106 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias i32)) (alias None))", fillcolor=grey];
  107 [label="FunNode: load\n(fun 'load' ((alias ref) (alias i32)) (alias None))", fillcolor=grey];
  108 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  109 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  110 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  111 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  112 [label="Ref: None\n(type (alias None (struct None)))", fillcolor=grey];
  113 [label="Name: load\n(fun 'load' ((alias ref) (alias i32)) (alias None))", fillcolor=grey];
  114 [label="Name: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
  115 [label="FunOverload: discriminant\n(fun 'discriminant' () (alias u64))", fillcolor=grey];
  116 [label="FunNode: discriminant\n(fun 'discriminant' () (alias u64))", fillcolor=grey];
  117 [label="Ref: u64\n(type (alias u64 (native u64)))", fillcolor=grey];
  118 [label="Name: discriminant\n(fun 'discriminant' () (alias u64))", fillcolor=grey];
  119 [label="FunOverload: sizeOf\n(fun 'sizeOf' () (alias i32))", fillcolor=grey];
  120 [label="FunNode: sizeOf\n(fun 'sizeOf' () (alias i32))", fillcolor=grey];
  121 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  122 [label="Name: sizeOf\n(fun 'sizeOf' () (alias i32))", fillcolor=grey];
  123 [label="FunOverload: allocationSize\n(fun 'allocationSize' () (alias u32))", fillcolor=grey];
  124 [label="FunNode: allocationSize\n(fun 'allocationSize' () (alias u32))", fillcolor=grey];
  125 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
  126 [label="Name: allocationSize\n(fun 'allocationSize' () (alias u32))", fillcolor=grey];
  127 [label="FunOverload: apply\n(fun 'apply' ((alias i32)) (alias Some))", fillcolor=grey];
  128 [label="FunNode: apply\n(fun 'apply' ((alias i32)) (alias Some))", fillcolor=grey];
  129 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  130 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
  131 [label="Ref: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
  132 [label="Name: apply\n(fun 'apply' ((alias i32)) (alias Some))", fillcolor=grey];
  133 [label="FunOverload: fromPointer\n(fun 'fromPointer' ((union (alias i32) (alias u32))) (alias Some))", fillcolor=grey];
  134 [label="FunNode: fromPointer\n(fun 'fromPointer' ((union (alias i32) (alias u32))) (alias Some))", fillcolor=grey];
  135 [label="UnionTypeNode\n(type (union (alias i32 (native i32)) (alias u32 (native u32))))", fillcolor=grey];
  136 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  137 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
  138 [label="Name: ptr\n(type (union (alias i32 (native i32)) (alias u32 (native u32))))", fillcolor=grey];
  139 [label="Ref: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
  140 [label="Name: fromPointer\n(fun 'fromPointer' ((union (alias i32) (alias u32))) (alias Some))", fillcolor=grey];
  141 [label="FunOverload: property_value\n(intersection (fun 'property_value' ((alias Some)) (alias i32)) (fun 'property_value' ((alias Some) (alias i32)) (alias void)))", fillcolor=grey];
  142 [label="FunNode: property_value\n(fun 'property_value' ((alias Some)) (alias i32))", fillcolor=grey];
  143 [label="Ref: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
  144 [label="Name: target\n(alias Some (struct Some))", fillcolor=grey];
  145 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  146 [label="FunNode: property_value\n(fun 'property_value' ((alias Some) (alias i32)) (alias void))", fillcolor=grey];
  147 [label="Ref: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
  148 [label="Name: target\n(alias Some (struct Some))", fillcolor=grey];
  149 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  150 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
  151 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  152 [label="Name: property_value\n(intersection (fun 'property_value' ((alias Some)) (alias i32)) (fun 'property_value' ((alias Some) (alias i32)) (alias void)))", fillcolor=grey];
  153 [label="FunOverload: set$value\n(fun 'set$value' ((alias Some) (alias i32)) (alias void))", fillcolor=grey];
  154 [label="FunNode: set$value\n(fun 'set$value' ((alias Some) (alias i32)) (alias void))", fillcolor=grey];
  155 [label="Ref: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
  156 [label="Name: target\n(type (alias Some (struct Some)))", fillcolor=grey];
  157 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  158 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
  159 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  160 [label="Name: set$value\n(fun 'set$value' ((alias Some) (alias i32)) (alias void))", fillcolor=grey];
  161 [label="FunOverload: is\n(fun 'is' ((alias Some)) (alias boolean))", fillcolor=grey];
  162 [label="FunNode: is\n(fun 'is' ((alias Some)) (alias boolean))", fillcolor=grey];
  163 [label="Ref: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
  164 [label="Name: a\n(alias Some (struct Some))", fillcolor=grey];
  165 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  166 [label="Name: is\n(fun 'is' ((alias Some)) (alias boolean))", fillcolor=grey];
  167 [label="FunOverload: store\n(fun 'store' ((alias ref) (alias Some) (alias i32)) (alias void))", fillcolor=grey];
  168 [label="FunNode: store\n(fun 'store' ((alias ref) (alias Some) (alias i32)) (alias void))", fillcolor=grey];
  169 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  170 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  171 [label="Ref: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
  172 [label="Name: rhs\n(alias Some (struct Some))", fillcolor=grey];
  173 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  174 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  175 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  176 [label="Name: store\n(fun 'store' ((alias ref) (alias Some) (alias i32)) (alias void))", fillcolor=grey];
  177 [label="FunOverload: load\n(fun 'load' ((alias ref) (alias i32)) (alias Some))", fillcolor=grey];
  178 [label="FunNode: load\n(fun 'load' ((alias ref) (alias i32)) (alias Some))", fillcolor=grey];
  179 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  180 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
  181 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  182 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
  183 [label="Ref: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
  184 [label="Name: load\n(fun 'load' ((alias ref) (alias i32)) (alias Some))", fillcolor=grey];
  185 [label="FunOverload: test\n(fun 'test' ((alias i32)) (alias boolean))", fillcolor=grey];
  186 [label="FunNode: test\n(fun 'test' ((alias i32)) (alias boolean))", fillcolor=grey];
  187 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  188 [label="Name: a\n(alias i32 (native i32))", fillcolor=grey];
  189 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  190 [label="Name: test\n(fun 'test' ((alias i32)) (alias boolean))", fillcolor=grey];
  191 [label="FunOverload: test2\n(fun 'test2' ((alias i32)) (alias i32))", fillcolor=grey];
  192 [label="FunNode: test2\n(fun 'test2' ((alias i32)) (alias i32))", fillcolor=grey];
  193 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  194 [label="Name: a\n(alias i32 (native i32))", fillcolor=grey];
  195 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  196 [label="Name: test2\n(fun 'test2' ((alias i32)) (alias i32))", fillcolor=grey];
  197 [label="FunOverload: test3\n(fun 'test3' ((alias Maybe)) (alias boolean))", fillcolor=grey];
  198 [label="FunNode: test3\n(fun 'test3' ((alias Maybe)) (alias boolean))", fillcolor=grey];
  199 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct None)) (alias Some (struct Some)))))", fillcolor=grey];
  200 [label="Name: a\n(alias Maybe (union (alias None (struct None)) (alias Some (struct Some))))", fillcolor=grey];
  201 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  202 [label="Name: test3\n(fun 'test3' ((alias Maybe)) (alias boolean))", fillcolor=grey];
  203 [label="FunOverload: test4\n(fun 'test4' ((alias Maybe)) (alias Some))", fillcolor=grey];
  204 [label="FunNode: test4\n(fun 'test4' ((alias Maybe)) (alias Some))", fillcolor=grey];
  205 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct None)) (alias Some (struct Some)))))", fillcolor=grey];
  206 [label="Name: a\n(alias Maybe (union (alias None (struct None)) (alias Some (struct Some))))", fillcolor=grey];
  207 [label="Ref: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
  208 [label="Name: test4\n(fun 'test4' ((alias Maybe)) (alias Some))", fillcolor=grey];
  subgraph cluster0 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    209 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    210 [label="Name: rhs\n(alias ref (ref ?))", fillcolor=grey];
    211 [label="BinOp: '=='\n(alias boolean (native boolean))", fillcolor=grey];
    212 [label="Ref: lhs\n(alias ref (ref ?))", fillcolor=grey];
    213 [label="Ref: rhs\n(alias ref (ref ?))", fillcolor=grey];
    214 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    209 -> 212[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    210 -> 213[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    212 -> 211[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    213 -> 211[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/patternMatching.ro::Maybe.==(ref,ref)";
}
  subgraph cluster1 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    215 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    216 [label="Name: rhs\n(alias ref (ref ?))", fillcolor=grey];
    217 [label="BinOp: '!='\n(alias boolean (native boolean))", fillcolor=grey];
    218 [label="Ref: lhs\n(alias ref (ref ?))", fillcolor=grey];
    219 [label="Ref: rhs\n(alias ref (ref ?))", fillcolor=grey];
    220 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    215 -> 218[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    216 -> 219[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    218 -> 217[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    219 -> 217[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/patternMatching.ro::Maybe.!=(ref,ref)";
}
  subgraph cluster2 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    221 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    222 [label="Ref: u64\n(type (alias u64 (native u64)))", fillcolor=grey];
  label="test/fixtures/types/patternMatching.ro::Some.discriminant()";
}
  subgraph cluster3 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    223 [label="Int: 8\n(alias i32 (native i32))", fillcolor=grey];
    224 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
  label="test/fixtures/types/patternMatching.ro::Some.sizeOf()";
}
  subgraph cluster4 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    225 [label="FunctionCallNode\n(alias u32 (native u32))", fillcolor=grey];
    226 [label="MemberNode\n(fun 'allocationSize' () (alias u32))", fillcolor=grey];
    227 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
    228 [label="Ref: u32\n(type (alias u32 (native u32)))", fillcolor=grey];
    226 -> 225[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    227 -> 226[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/patternMatching.ro::Some.allocationSize()";
}
  subgraph cluster5 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    229 [label="Name: a\n(alias i32 (native i32))", fillcolor=grey];
    230 [label="PatternMatcherNode\n(alias boolean (native boolean))", fillcolor=grey];
    231 [label="Ref: a\n(alias i32 (native i32))", fillcolor=grey];
    232 [label="MatchLiteralNode\n(alias boolean (native boolean))", fillcolor=grey];
    233 [label="Int: 1\n(alias i32 (native i32))", fillcolor=grey];
    234 [label="BooleanLiteraltrue\n(alias boolean (native boolean))", fillcolor=grey];
    235 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
    236 [label="MatchDefaultNode\n(alias boolean (native boolean))", fillcolor=grey];
    237 [label="BooleanLiteralfalse\n(alias boolean (native boolean))", fillcolor=grey];
    238 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
    239 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    229 -> 231[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    231 -> 230[taillabel="[PATTERN_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    231 -> 235[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    232 -> 230[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    233 -> 232[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    234 -> 232[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    235 -> 232[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    235 -> 238[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    236 -> 230[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    237 -> 236[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    238 -> 236[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/patternMatching.ro::test(i32)";
}
  subgraph cluster6 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    240 [label="Name: a\n(alias i32 (native i32))", fillcolor=grey];
    241 [label="PatternMatcherNode\n(alias i32 (native i32))", fillcolor=grey];
    242 [label="Ref: a\n(alias i32 (native i32))", fillcolor=grey];
    243 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
    244 [label="Int: 10\n(alias i32 (native i32))", fillcolor=grey];
    245 [label="Int: 1\n(alias i32 (native i32))", fillcolor=grey];
    246 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
    247 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
    248 [label="Int: 20\n(alias i32 (native i32))", fillcolor=grey];
    249 [label="Int: 2\n(alias i32 (native i32))", fillcolor=grey];
    250 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
    251 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
    252 [label="Int: 30\n(alias i32 (native i32))", fillcolor=grey];
    253 [label="Int: 3\n(alias i32 (native i32))", fillcolor=grey];
    254 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
    255 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
    256 [label="Int: 40\n(alias i32 (native i32))", fillcolor=grey];
    257 [label="Int: 4\n(alias i32 (native i32))", fillcolor=grey];
    258 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
    259 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
    260 [label="Int: 50\n(alias i32 (native i32))", fillcolor=grey];
    261 [label="Int: 5\n(alias i32 (native i32))", fillcolor=grey];
    262 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
    263 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
    264 [label="Int: 60\n(alias i32 (native i32))", fillcolor=grey];
    265 [label="Int: 6\n(alias i32 (native i32))", fillcolor=grey];
    266 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
    267 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
    268 [label="Int: 70\n(alias i32 (native i32))", fillcolor=grey];
    269 [label="Int: 7\n(alias i32 (native i32))", fillcolor=grey];
    270 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
    271 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
    272 [label="Int: 80\n(alias i32 (native i32))", fillcolor=grey];
    273 [label="Int: 8\n(alias i32 (native i32))", fillcolor=grey];
    274 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
    275 [label="MatchLiteralNode\n(alias i32 (native i32))", fillcolor=grey];
    276 [label="Int: 90\n(alias i32 (native i32))", fillcolor=grey];
    277 [label="Int: 9\n(alias i32 (native i32))", fillcolor=grey];
    278 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
    279 [label="MatchDefaultNode\n(alias i32 (native i32))", fillcolor=grey];
    280 [label="Int: 0\n(alias i32 (native i32))", fillcolor=grey];
    281 [label="TypeReducerNode\n(alias i32 (native i32))", fillcolor=grey];
    282 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    240 -> 242[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    242 -> 241[taillabel="[PATTERN_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    242 -> 246[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    243 -> 241[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    244 -> 243[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    245 -> 243[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    246 -> 243[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    246 -> 250[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    247 -> 241[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    248 -> 247[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    249 -> 247[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    250 -> 247[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    250 -> 254[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    251 -> 241[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    252 -> 251[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    253 -> 251[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    254 -> 251[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    254 -> 258[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    255 -> 241[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    256 -> 255[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    257 -> 255[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    258 -> 255[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    258 -> 262[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    259 -> 241[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    260 -> 259[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    261 -> 259[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    262 -> 259[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    262 -> 266[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    263 -> 241[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    264 -> 263[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    265 -> 263[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    266 -> 263[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    266 -> 270[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    267 -> 241[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    268 -> 267[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    269 -> 267[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    270 -> 267[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    270 -> 274[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    271 -> 241[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    272 -> 271[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    273 -> 271[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    274 -> 271[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    274 -> 278[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    275 -> 241[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    276 -> 275[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    277 -> 275[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    278 -> 275[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    278 -> 281[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    279 -> 241[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    280 -> 279[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    281 -> 279[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/patternMatching.ro::test2(i32)";
}
  subgraph cluster7 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    283 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    284 [label="Ref: None\n(type (alias None (struct None)))", fillcolor=grey];
  label="test/fixtures/types/patternMatching.ro::None.apply()";
}
  subgraph cluster8 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    285 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    286 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    287 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    288 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    289 [label="Ref: None\n(type (alias None (struct None)))", fillcolor=grey];
  label="test/fixtures/types/patternMatching.ro::None.load(ref,i32)";
}
  subgraph cluster9 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    290 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
    291 [label="BlockNode\n(alias Some (struct Some))", fillcolor=grey];
    292 [label="VarDecl: $ref\n(native void)", fillcolor=grey];
    293 [label="Name: $ref\n(alias Some (struct Some))", fillcolor=grey];
    294 [label="FunctionCallNode\n(alias Some (struct Some))", fillcolor=grey];
    295 [label="Ref: fromPointer\n(fun 'fromPointer' ((union (alias i32) (alias u32))) (alias Some))", fillcolor=grey];
    296 [label="FunctionCallNode\n(alias i32 (native i32))", fillcolor=grey];
    297 [label="Ref: system::memory::calloc\n(fun 'calloc' ((alias i32) (alias i32)) (alias i32))", fillcolor=grey];
    298 [label="Int: 1\n(alias i32 (native i32))", fillcolor=grey];
    299 [label="FunctionCallNode\n(alias i32 (native i32))", fillcolor=grey];
    300 [label="Ref: sizeOf\n(fun 'sizeOf' () (alias i32))", fillcolor=grey];
    301 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
    302 [label="Ref: set$value\n(fun 'set$value' ((alias Some) (alias i32)) (alias void))", fillcolor=grey];
    303 [label="Ref: $ref\n(alias Some (struct Some))", fillcolor=grey];
    304 [label="Ref: value\n(alias i32 (native i32))", fillcolor=grey];
    305 [label="Ref: $ref\n(alias Some (struct Some))", fillcolor=grey];
    306 [label="Ref: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
    290 -> 304[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    292 -> 291[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
    293 -> 303[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    293 -> 305[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    294 -> 293[taillabel="[DEFAULT_VALUE]" fontname="times" fontsize = 7 color="black" ];
    295 -> 294[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    296 -> 294[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    297 -> 296[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    298 -> 296[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    299 -> 296[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    300 -> 299[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    301 -> 291[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
    302 -> 301[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    303 -> 301[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    304 -> 301[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    305 -> 291[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/patternMatching.ro::Some.apply(i32)";
}
  subgraph cluster10 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    307 [label="Name: ptr\n(type (union (alias i32 (native i32)) (alias u32 (native u32))))", fillcolor=grey];
    308 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    309 [label="Ref: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
  label="test/fixtures/types/patternMatching.ro::Some.fromPointer(i32 | u32)";
}
  subgraph cluster11 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    310 [label="Name: target\n(type (alias Some (struct Some)))", fillcolor=grey];
    311 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
    312 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
    313 [label="MemberNode\n(intersection (fun 'store' ((alias ref) (alias i32)) (alias void)) (fun 'store' ((alias ref) (alias i32) (alias i32)) (alias void)))", fillcolor=grey];
    314 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    315 [label="Ref: target\n(alias Some (struct Some))", fillcolor=grey];
    316 [label="Ref: value\n(alias i32 (native i32))", fillcolor=grey];
    317 [label="Int: 0\n(alias i32 (native i32))", fillcolor=grey];
    318 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    310 -> 315[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    311 -> 316[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    313 -> 312[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    314 -> 313[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    315 -> 312[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    316 -> 312[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    317 -> 312[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/patternMatching.ro::Some.set$value(Some,i32)";
}
  subgraph cluster12 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    319 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    320 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    321 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    322 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    323 [label="Ref: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
  label="test/fixtures/types/patternMatching.ro::Some.load(ref,i32)";
}
  subgraph cluster13 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    324 [label="Name: a\n(alias None (struct None))", fillcolor=grey];
    325 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    326 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/patternMatching.ro::None.is(None)";
}
  subgraph cluster14 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    327 [label="Name: a\n(alias None (struct None))", fillcolor=grey];
    328 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
    329 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    330 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/patternMatching.ro::None.==(None,ref)";
}
  subgraph cluster15 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    331 [label="Name: a\n(alias None (struct None))", fillcolor=grey];
    332 [label="Name: b\n(alias ref (ref ?))", fillcolor=grey];
    333 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    334 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/patternMatching.ro::None.!=(None,ref)";
}
  subgraph cluster16 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    335 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    336 [label="Name: rhs\n(alias None (struct None))", fillcolor=grey];
    337 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    338 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    339 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    340 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  label="test/fixtures/types/patternMatching.ro::None.store(ref,None,i32)";
}
  subgraph cluster17 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    341 [label="Name: target\n(alias Some (struct Some))", fillcolor=grey];
    342 [label="FunctionCallNode\n(alias i32 (native i32))", fillcolor=grey];
    343 [label="MemberNode\n(intersection (fun 'load' ((alias ref)) (alias i32)) (fun 'load' ((alias ref) (alias i32)) (alias i32)))", fillcolor=grey];
    344 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    345 [label="Ref: target\n(alias Some (struct Some))", fillcolor=grey];
    346 [label="Int: 0\n(alias i32 (native i32))", fillcolor=grey];
    347 [label="Ref: i32\n(type (alias i32 (native i32)))", fillcolor=grey];
    341 -> 345[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    343 -> 342[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    344 -> 343[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    345 -> 342[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    346 -> 342[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/patternMatching.ro::Some.property_value(Some)";
}
  subgraph cluster18 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    348 [label="Name: target\n(alias Some (struct Some))", fillcolor=grey];
    349 [label="Name: value\n(alias i32 (native i32))", fillcolor=grey];
    350 [label="FunctionCallNode\n(alias void (native void))", fillcolor=grey];
    351 [label="Ref: set$value\n(fun 'set$value' ((alias Some) (alias i32)) (alias void))", fillcolor=grey];
    352 [label="Ref: target\n(alias Some (struct Some))", fillcolor=grey];
    353 [label="Ref: value\n(alias i32 (native i32))", fillcolor=grey];
    354 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
    348 -> 352[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    349 -> 353[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    351 -> 350[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    352 -> 350[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    353 -> 350[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/patternMatching.ro::Some.property_value_1(Some,i32)";
}
  subgraph cluster19 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    355 [label="Name: a\n(alias Some (struct Some))", fillcolor=grey];
    356 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    357 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
  label="test/fixtures/types/patternMatching.ro::Some.is(Some)";
}
  subgraph cluster20 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    358 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    359 [label="Name: rhs\n(alias Some (struct Some))", fillcolor=grey];
    360 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    361 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    362 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    363 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  label="test/fixtures/types/patternMatching.ro::Some.store(ref,Some,i32)";
}
  subgraph cluster21 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    364 [label="Name: a\n(union (alias None (struct None)) (alias Some (struct Some)))", fillcolor=grey];
    365 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    366 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct None)) (alias Some (struct Some)))))", fillcolor=grey];
  label="test/fixtures/types/patternMatching.ro::Maybe.as(None | Some)";
}
  subgraph cluster22 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    367 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    368 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    369 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    370 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    371 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct None)) (alias Some (struct Some)))))", fillcolor=grey];
  label="test/fixtures/types/patternMatching.ro::Maybe.load(ref,i32)";
}
  subgraph cluster23 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    372 [label="Name: a\n(alias None (struct None))", fillcolor=grey];
    373 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    374 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct None)) (alias Some (struct Some)))))", fillcolor=grey];
  label="test/fixtures/types/patternMatching.ro::None.as(None)";
}
  subgraph cluster24 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    375 [label="Name: a\n(alias Some (struct Some))", fillcolor=grey];
    376 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    377 [label="Ref: Maybe\n(type (alias Maybe (union (alias None (struct None)) (alias Some (struct Some)))))", fillcolor=grey];
  label="test/fixtures/types/patternMatching.ro::Some.as(Some)";
}
  subgraph cluster25 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    378 [label="Name: a\n(alias Maybe (union (alias None (struct None)) (alias Some (struct Some))))", fillcolor=grey];
    379 [label="BlockNode\n(alias boolean (native boolean))", fillcolor=grey];
    380 [label="BinOp: '||'\n(alias boolean (native boolean))", fillcolor=grey];
    381 [label="IsExpressionNodeis\n(alias boolean (native boolean))", fillcolor=grey];
    382 [label="Ref: a\n(alias Maybe (union (alias None (struct None)) (alias Some (struct Some))))", fillcolor=grey];
    383 [label="Ref: None\n(type (alias None (struct None)))", fillcolor=grey];
    384 [label="IsExpressionNodeis\n(alias boolean (native boolean))", fillcolor=grey];
    385 [label="Ref: a\n(alias Maybe (union (alias None (struct None)) (alias Some (struct Some))))", fillcolor=grey];
    386 [label="Ref: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
    387 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    378 -> 382[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    378 -> 385[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    380 -> 379[taillabel="[STATEMENTS]" fontname="times" fontsize = 7 color="black" ];
    381 -> 380[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    382 -> 381[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    383 -> 381[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    384 -> 380[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    385 -> 384[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    386 -> 384[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/patternMatching.ro::Maybe.is(Maybe)";
}
  subgraph cluster26 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    388 [label="Name: lhs\n(alias ref (ref ?))", fillcolor=grey];
    389 [label="Name: rhs\n(alias Maybe (union (alias None (struct None)) (alias Some (struct Some))))", fillcolor=grey];
    390 [label="Name: offset\n(alias i32 (native i32))", fillcolor=grey];
    391 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    392 [label="Ref: addressFromRef\n(fun 'addressFromRef' ((alias ref)) (alias u32))", fillcolor=grey];
    393 [label="Ref: void\n(type (alias void (native void)))", fillcolor=grey];
  label="test/fixtures/types/patternMatching.ro::Maybe.store(ref,Maybe,i32)";
}
  subgraph cluster27 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    394 [label="Name: a\n(alias Maybe (union (alias None (struct None)) (alias Some (struct Some))))", fillcolor=grey];
    395 [label="WasmExpressionNode\n(never)", fillcolor=grey];
    396 [label="Ref: ref\n(type (alias ref (ref ?)))", fillcolor=grey];
  label="test/fixtures/types/patternMatching.ro::Maybe.as_1(Maybe)";
}
  subgraph cluster28 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    397 [label="Name: a\n(alias Maybe (union (alias None (struct None)) (alias Some (struct Some))))", fillcolor=grey];
    398 [label="PatternMatcherNode\n(alias boolean (native boolean))", fillcolor=grey];
    399 [label="Ref: a\n(alias Maybe (union (alias None (struct None)) (alias Some (struct Some))))", fillcolor=grey];
    400 [label="MatchCaseIsNode\n(alias boolean (native boolean))", fillcolor=grey];
    401 [label="Ref: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
    402 [label="BooleanLiteraltrue\n(alias boolean (native boolean))", fillcolor=grey];
    403 [label="Name: $\n(alias Some (struct Some))", fillcolor=grey];
    404 [label="TypeReducerNode\n(union (alias None (struct None)) (alias Some (struct Some)))", fillcolor=grey];
    405 [label="MatchCaseIsNode\n(alias boolean (native boolean))", fillcolor=grey];
    406 [label="Ref: None\n(type (alias None (struct None)))", fillcolor=grey];
    407 [label="BooleanLiteralfalse\n(alias boolean (native boolean))", fillcolor=grey];
    408 [label="Name: $\n(alias None (struct None))", fillcolor=grey];
    409 [label="TypeReducerNode\n(alias None (struct None))", fillcolor=grey];
    410 [label="TypeReducerNode\n(never)", fillcolor=grey];
    411 [label="Ref: boolean\n(type (alias boolean (native boolean)))", fillcolor=grey];
    397 -> 399[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    399 -> 398[taillabel="[PATTERN_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    399 -> 404[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    400 -> 398[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    401 -> 400[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    401 -> 403[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    401 -> 409[taillabel="[REMOVED_TYPE]" fontname="times" fontsize = 7 color="black" ];
    402 -> 400[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    404 -> 400[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    404 -> 409[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    405 -> 398[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    406 -> 405[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    406 -> 408[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    406 -> 410[taillabel="[REMOVED_TYPE]" fontname="times" fontsize = 7 color="black" ];
    407 -> 405[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    409 -> 405[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    409 -> 410[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    410 -> 398[taillabel="[REST_TYPE]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/patternMatching.ro::test3(Maybe)";
}
  subgraph cluster29 { rankdir=TB;
    node [style=filled, fillcolor=grey];
    412 [label="Name: a\n(alias Maybe (union (alias None (struct None)) (alias Some (struct Some))))", fillcolor=grey];
    413 [label="PatternMatcherNode\n(alias Some (struct Some))", fillcolor=grey];
    414 [label="Ref: a\n(alias Maybe (union (alias None (struct None)) (alias Some (struct Some))))", fillcolor=grey];
    415 [label="MatchCaseIsNode\n(alias Some (struct Some))", fillcolor=grey];
    416 [label="Ref: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
    417 [label="Ref: x\n(alias Some (struct Some))", fillcolor=grey];
    418 [label="Name: x\n(alias Some (struct Some))", fillcolor=grey];
    419 [label="TypeReducerNode\n(union (alias None (struct None)) (alias Some (struct Some)))", fillcolor=grey];
    420 [label="MatchCaseIsNode\n(alias Some (struct Some))", fillcolor=grey];
    421 [label="Ref: None\n(type (alias None (struct None)))", fillcolor=grey];
    422 [label="FunctionCallNode\n(alias Some (struct Some))", fillcolor=grey];
    423 [label="MemberNode\n(fun 'apply' ((alias i32)) (alias Some))", fillcolor=grey];
    424 [label="Ref: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
    425 [label="Int: 0\n(alias i32 (native i32))", fillcolor=grey];
    426 [label="Name: $\n(alias None (struct None))", fillcolor=grey];
    427 [label="TypeReducerNode\n(alias None (struct None))", fillcolor=grey];
    428 [label="TypeReducerNode\n(never)", fillcolor=grey];
    429 [label="Ref: Some\n(type (alias Some (struct Some)))", fillcolor=grey];
    412 -> 414[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    414 -> 413[taillabel="[PATTERN_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    414 -> 419[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    415 -> 413[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    416 -> 415[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    416 -> 418[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    416 -> 427[taillabel="[REMOVED_TYPE]" fontname="times" fontsize = 7 color="black" ];
    417 -> 415[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    418 -> 417[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
    419 -> 415[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    419 -> 427[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    420 -> 413[taillabel="[MATCH_EXPRESSION]" fontname="times" fontsize = 7 color="black" ];
    421 -> 420[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    421 -> 426[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    421 -> 428[taillabel="[REMOVED_TYPE]" fontname="times" fontsize = 7 color="black" ];
    422 -> 420[taillabel="[RHS]" fontname="times" fontsize = 7 color="black" ];
    423 -> 422[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
    424 -> 423[taillabel="[LHS]" fontname="times" fontsize = 7 color="black" ];
    425 -> 422[taillabel="[PARAMETER]" fontname="times" fontsize = 7 color="black" ];
    427 -> 420[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    427 -> 428[taillabel="[PATTERN_MATCHING_VALUE]" fontname="times" fontsize = 7 color="black" ];
    428 -> 413[taillabel="[REST_TYPE]" fontname="times" fontsize = 7 color="black" ];
  label="test/fixtures/types/patternMatching.ro::test4(Maybe)";
}
  1 -> 7[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 31[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 43[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 49[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 55[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 63[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 65[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 199[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 205[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 366[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 371[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 374[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  1 -> 377[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  2 -> 1[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  3 -> 2[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  4 -> 2[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  5 -> 10[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  6 -> 5[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  7 -> 8[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  8 -> 6[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  9 -> 6[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  11 -> 18[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  12 -> 11[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  13 -> 14[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  14 -> 12[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  15 -> 16[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  16 -> 12[taillabel="[rhs]" fontname="times" fontsize = 7 color="black" ];
  17 -> 12[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  19 -> 26[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  20 -> 19[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  21 -> 22[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  22 -> 20[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  23 -> 24[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  24 -> 20[taillabel="[rhs]" fontname="times" fontsize = 7 color="black" ];
  25 -> 20[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  27 -> 36[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  28 -> 27[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  29 -> 30[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  30 -> 28[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  31 -> 32[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  32 -> 28[taillabel="[rhs]" fontname="times" fontsize = 7 color="black" ];
  33 -> 34[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  34 -> 28[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  35 -> 28[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  37 -> 44[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  38 -> 37[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  39 -> 40[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  40 -> 38[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  41 -> 42[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  42 -> 38[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  43 -> 38[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  45 -> 50[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  46 -> 45[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  47 -> 48[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  48 -> 46[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  49 -> 46[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  51 -> 56[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  52 -> 51[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  53 -> 54[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  54 -> 52[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  55 -> 52[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  57 -> 68[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  58 -> 57[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  59 -> 62[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  60 -> 59[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  61 -> 59[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  62 -> 58[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  63 -> 58[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  64 -> 57[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  65 -> 66[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  66 -> 64[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  67 -> 64[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  69 -> 3[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  69 -> 47[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  69 -> 60[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  69 -> 72[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  69 -> 76[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  69 -> 82[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  69 -> 90[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  69 -> 100[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  69 -> 112[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  69 -> 284[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  69 -> 289[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  69 -> 383[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  69 -> 406[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  69 -> 421[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  70 -> 73[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  71 -> 70[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  72 -> 71[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  74 -> 79[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  75 -> 74[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  76 -> 77[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  77 -> 75[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  78 -> 75[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  80 -> 87[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  81 -> 80[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  82 -> 83[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  83 -> 81[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  84 -> 85[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  85 -> 81[taillabel="[b]" fontname="times" fontsize = 7 color="black" ];
  86 -> 81[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  88 -> 95[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  89 -> 88[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  90 -> 91[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  91 -> 89[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  92 -> 93[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  93 -> 89[taillabel="[b]" fontname="times" fontsize = 7 color="black" ];
  94 -> 89[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  96 -> 105[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  97 -> 96[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  98 -> 99[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  99 -> 97[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  100 -> 101[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  101 -> 97[taillabel="[rhs]" fontname="times" fontsize = 7 color="black" ];
  102 -> 103[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  103 -> 97[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  104 -> 97[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  106 -> 113[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  107 -> 106[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  108 -> 109[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  109 -> 107[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  110 -> 111[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  111 -> 107[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  112 -> 107[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  114 -> 4[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  114 -> 53[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  114 -> 61[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  114 -> 131[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  114 -> 139[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  114 -> 143[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  114 -> 147[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  114 -> 155[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  114 -> 163[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  114 -> 171[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  114 -> 183[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  114 -> 207[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  114 -> 306[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  114 -> 309[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  114 -> 323[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  114 -> 386[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  114 -> 401[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  114 -> 416[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  114 -> 424[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  114 -> 429[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  115 -> 118[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  116 -> 115[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  117 -> 116[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  119 -> 122[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  120 -> 119[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  121 -> 120[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  122 -> 300[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  123 -> 126[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  124 -> 123[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  125 -> 124[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  127 -> 132[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  128 -> 127[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  129 -> 130[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  130 -> 128[taillabel="[value]" fontname="times" fontsize = 7 color="black" ];
  131 -> 128[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  133 -> 140[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  134 -> 133[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  135 -> 138[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  136 -> 135[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  137 -> 135[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  138 -> 134[taillabel="[ptr]" fontname="times" fontsize = 7 color="black" ];
  139 -> 134[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  140 -> 295[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  141 -> 152[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  142 -> 141[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  143 -> 144[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  144 -> 142[taillabel="[target]" fontname="times" fontsize = 7 color="black" ];
  145 -> 142[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  146 -> 141[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  147 -> 148[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  148 -> 146[taillabel="[target]" fontname="times" fontsize = 7 color="black" ];
  149 -> 150[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  150 -> 146[taillabel="[value]" fontname="times" fontsize = 7 color="black" ];
  151 -> 146[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  153 -> 160[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  154 -> 153[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  155 -> 156[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  156 -> 154[taillabel="[target]" fontname="times" fontsize = 7 color="black" ];
  157 -> 158[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  158 -> 154[taillabel="[value]" fontname="times" fontsize = 7 color="black" ];
  159 -> 154[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  160 -> 302[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  160 -> 351[taillabel="[NAME]" fontname="times" fontsize = 7 color="black" ];
  161 -> 166[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  162 -> 161[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  163 -> 164[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  164 -> 162[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  165 -> 162[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  167 -> 176[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  168 -> 167[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  169 -> 170[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  170 -> 168[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  171 -> 172[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  172 -> 168[taillabel="[rhs]" fontname="times" fontsize = 7 color="black" ];
  173 -> 174[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  174 -> 168[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  175 -> 168[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  177 -> 184[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  178 -> 177[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  179 -> 180[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  180 -> 178[taillabel="[lhs]" fontname="times" fontsize = 7 color="black" ];
  181 -> 182[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  182 -> 178[taillabel="[offset]" fontname="times" fontsize = 7 color="black" ];
  183 -> 178[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  185 -> 190[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  186 -> 185[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  187 -> 188[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  188 -> 186[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  189 -> 186[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  191 -> 196[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  192 -> 191[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  193 -> 194[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  194 -> 192[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  195 -> 192[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  197 -> 202[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  198 -> 197[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  199 -> 200[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  200 -> 198[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  201 -> 198[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  203 -> 208[taillabel="[]" fontname="times" fontsize = 7 color="black" ];
  204 -> 203[taillabel="[FUNCTION]" fontname="times" fontsize = 7 color="black" ];
  205 -> 206[taillabel="[EXPECTED_TYPE]" fontname="times" fontsize = 7 color="black" ];
  206 -> 204[taillabel="[a]" fontname="times" fontsize = 7 color="black" ];
  207 -> 204[taillabel="[#RETURN_TYPE]" fontname="times" fontsize = 7 color="black" ];
  label="";
}
