
|-DocumentNode
  |-ImportDirectiveNode
    |-QNameNode=system::core
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
  |-TypeDirectiveNode
    |-NameIdentifierNode="i32" type=Type<i32>
  |-TypeDirectiveNode
    |-NameIdentifierNode="f32" type=Type<f32>
  |-TypeDirectiveNode
    |-NameIdentifierNode="boolean" type=Type<boolean>
  |-TypeDirectiveNode
    |-NameIdentifierNode="Number" type=Type<Number>
    |-TypeDeclarationNode
      |-StructDeclarationNode type=Type<Infinity>
        |-NameIdentifierNode="Infinity" type=Type<Infinity>
      |-StructDeclarationNode type=Type<NDet>
        |-NameIdentifierNode="NDet" type=Type<NDet>
      |-StructDeclarationNode type=Type<Real>
        |-NameIdentifierNode="Real" type=Type<Real>
        |-ParameterNode
          |-NameIdentifierNode="number" type=f32
          |-TypeReferenceNode=f32 type=f32
            |-QNameNode=f32
              |-NameIdentifierNode="f32"
      |-StructDeclarationNode type=Type<Natural>
        |-NameIdentifierNode="Natural" type=Type<Natural>
        |-ParameterNode
          |-NameIdentifierNode="number" type=i32
          |-TypeReferenceNode=i32 type=i32
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
      |-StructDeclarationNode type=Type<Complex>
        |-NameIdentifierNode="Complex" type=Type<Complex>
        |-ParameterNode
          |-NameIdentifierNode="real" type=f32
          |-TypeReferenceNode=f32 type=f32
            |-QNameNode=f32
              |-NameIdentifierNode="f32"
        |-ParameterNode
          |-NameIdentifierNode="imaginary" type=f32
          |-TypeReferenceNode=f32 type=f32
            |-QNameNode=f32
              |-NameIdentifierNode="f32"
  |-OverloadedFunctionNode type=fun(number: Number) -> boolean annotations=Injected
    |-FunDirectiveNode type=fun(number: Number) -> boolean
      |-FunctionNode type=fun(number: Number) -> boolean
        |-ParameterNode
          |-NameIdentifierNode="number" type=Number
          |-TypeReferenceNode=Number type=Number
            |-QNameNode=Number
              |-NameIdentifierNode="Number"
        |-NameIdentifierNode="isComplex" type=fun(number: Number) -> boolean
        |-TypeReferenceNode=boolean type=boolean
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-PatternMatcherNode type=boolean annotations=IsValueNode
          |-VariableReferenceNode type=Number annotations=IsValueNode
            |-QNameNode=number
              |-NameIdentifierNode="number"
          |-MatchCaseIsNode type=boolean annotations=IsValueNode
            |-TypeReferenceNode=Real type=Real
              |-QNameNode=Real
                |-NameIdentifierNode="Real"
            |-NameIdentifierNode="_"
            |-BooleanLiteral=false type=boolean annotations=IsValueNode
          |-MatchCaseIsNode type=boolean annotations=IsValueNode
            |-TypeReferenceNode=Natural type=Natural
              |-QNameNode=Natural
                |-NameIdentifierNode="Natural"
            |-NameIdentifierNode="_"
            |-BooleanLiteral=false type=boolean annotations=IsValueNode
          |-MatchCaseIsNode type=boolean annotations=IsValueNode
            |-TypeReferenceNode=Complex type=Complex
              |-QNameNode=Complex
                |-NameIdentifierNode="Complex"
            |-NameIdentifierNode="_"
            |-NameIdentifierNode="imaginary" type=f32
            |-BinaryExpressionNode="!=" type=boolean annotations=IsValueNode
              |-NameIdentifierNode="!="
              |-VariableReferenceNode type=f32 annotations=IsValueNode
                |-QNameNode=imaginary
                  |-NameIdentifierNode="imaginary"
              |-FloatLiteral=0 type=f32 annotations=IsValueNode
          |-MatchDefaultNode type=boolean annotations=IsValueNode
            |-BooleanLiteral=false type=boolean annotations=IsValueNode
    |-NameIdentifierNode="isComplex" type=fun(number: Number) -> boolean
  |-OverloadedFunctionNode type=fun() -> void annotations=Injected
    |-FunDirectiveNode type=fun() -> void
      |-FunctionNode type=fun() -> void
        |-NameIdentifierNode="main" type=fun() -> void
        |-TypeReferenceNode=void type=void
          |-QNameNode=void
            |-NameIdentifierNode="void"
        |-BlockNode type=void
          |-FunctionCallNode type=boolean
            |-VariableReferenceNode type=fun(number: Number) -> boolean
              |-QNameNode=isComplex
                |-NameIdentifierNode="isComplex"
            |-VariableReferenceNode type=Infinity annotations=IsValueNode,ImplicitCall
              |-QNameNode=Infinity
                |-NameIdentifierNode="Infinity"
          |-FunctionCallNode type=boolean
            |-VariableReferenceNode type=fun(number: Number) -> boolean
              |-QNameNode=isComplex
                |-NameIdentifierNode="isComplex"
            |-FunctionCallNode type=Real annotations=IsValueNode
              |-VariableReferenceNode type=Type<Real>
                |-QNameNode=Real
                  |-NameIdentifierNode="Real"
              |-FloatLiteral=0 type=f32 annotations=IsValueNode
          |-FunctionCallNode type=boolean
            |-VariableReferenceNode type=fun(number: Number) -> boolean
              |-QNameNode=isComplex
                |-NameIdentifierNode="isComplex"
            |-FunctionCallNode type=Natural annotations=IsValueNode
              |-VariableReferenceNode type=Type<Natural>
                |-QNameNode=Natural
                  |-NameIdentifierNode="Natural"
              |-IntegerLiteral=123 type=i32 annotations=IsValueNode
          |-FunctionCallNode type=boolean
            |-VariableReferenceNode type=fun(number: Number) -> boolean
              |-QNameNode=isComplex
                |-NameIdentifierNode="isComplex"
            |-FunctionCallNode type=Complex annotations=IsValueNode
              |-VariableReferenceNode type=Type<Complex>
                |-QNameNode=Complex
                  |-NameIdentifierNode="Complex"
              |-FloatLiteral=0 type=f32 annotations=IsValueNode
              |-FloatLiteral=99.1 type=f32 annotations=IsValueNode
    |-NameIdentifierNode="main" type=fun() -> void
  |-OverloadedFunctionNode type=fun() -> Infinity annotations=Injected
    |-FunDirectiveNode type=fun() -> Infinity annotations=Injected
      |-FunctionNode type=fun() -> Infinity
        |-NameIdentifierNode="InfinityAllocator" type=fun() -> Infinity
        |-TypeReferenceNode=Infinity type=Infinity
          |-QNameNode=Infinity
            |-NameIdentifierNode="Infinity"
        |-WasmExpressionNode type=UNKNOWN annotations=IsValueNode
          |-WasmAtomNode=i64.const
            |-HexLiteral=0x100000000
    |-NameIdentifierNode="InfinityAllocator" type=fun() -> Infinity
  |-OverloadedFunctionNode type=fun(a: Infinity) -> boolean & fun(a: NDet) -> boolean & fun(a: Real) -> boolean & fun(a: Natural) -> boolean & fun(a: Complex) -> boolean & fun(a: Number) -> boolean annotations=Injected
    |-FunDirectiveNode type=fun(a: Infinity) -> boolean annotations=Injected
      |-FunctionNode type=fun(a: Infinity) -> boolean
        |-ParameterNode
          |-NameIdentifierNode="a" type=Infinity
          |-TypeReferenceNode=Infinity type=Infinity
            |-QNameNode=Infinity
              |-NameIdentifierNode="Infinity"
        |-NameIdentifierNode="is" type=fun(a: Infinity) -> boolean
        |-TypeReferenceNode=boolean type=boolean
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=UNKNOWN annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=i64.and
              |-WasmAtomNode=i64.const
                |-HexLiteral=0xffffffff00000000
              |-WasmAtomNode=get_local
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
            |-WasmAtomNode=i64.const
              |-HexLiteral=0x100000000
    |-FunDirectiveNode type=fun(a: NDet) -> boolean annotations=Injected
      |-FunctionNode type=fun(a: NDet) -> boolean
        |-ParameterNode
          |-NameIdentifierNode="a" type=NDet
          |-TypeReferenceNode=NDet type=NDet
            |-QNameNode=NDet
              |-NameIdentifierNode="NDet"
        |-NameIdentifierNode="is" type=fun(a: NDet) -> boolean
        |-TypeReferenceNode=boolean type=boolean
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=UNKNOWN annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=i64.and
              |-WasmAtomNode=i64.const
                |-HexLiteral=0xffffffff00000000
              |-WasmAtomNode=get_local
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
            |-WasmAtomNode=i64.const
              |-HexLiteral=0x200000000
    |-FunDirectiveNode type=fun(a: Real) -> boolean annotations=Injected
      |-FunctionNode type=fun(a: Real) -> boolean
        |-ParameterNode
          |-NameIdentifierNode="a" type=Real
          |-TypeReferenceNode=Real type=Real
            |-QNameNode=Real
              |-NameIdentifierNode="Real"
        |-NameIdentifierNode="is" type=fun(a: Real) -> boolean
        |-TypeReferenceNode=boolean type=boolean
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=UNKNOWN annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=i64.and
              |-WasmAtomNode=i64.const
                |-HexLiteral=0xffffffff00000000
              |-WasmAtomNode=get_local
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
            |-WasmAtomNode=i64.const
              |-HexLiteral=0x300000000
    |-FunDirectiveNode type=fun(a: Natural) -> boolean annotations=Injected
      |-FunctionNode type=fun(a: Natural) -> boolean
        |-ParameterNode
          |-NameIdentifierNode="a" type=Natural
          |-TypeReferenceNode=Natural type=Natural
            |-QNameNode=Natural
              |-NameIdentifierNode="Natural"
        |-NameIdentifierNode="is" type=fun(a: Natural) -> boolean
        |-TypeReferenceNode=boolean type=boolean
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=UNKNOWN annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=i64.and
              |-WasmAtomNode=i64.const
                |-HexLiteral=0xffffffff00000000
              |-WasmAtomNode=get_local
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
            |-WasmAtomNode=i64.const
              |-HexLiteral=0x400000000
    |-FunDirectiveNode type=fun(a: Complex) -> boolean annotations=Injected
      |-FunctionNode type=fun(a: Complex) -> boolean
        |-ParameterNode
          |-NameIdentifierNode="a" type=Complex
          |-TypeReferenceNode=Complex type=Complex
            |-QNameNode=Complex
              |-NameIdentifierNode="Complex"
        |-NameIdentifierNode="is" type=fun(a: Complex) -> boolean
        |-TypeReferenceNode=boolean type=boolean
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=UNKNOWN annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=i64.and
              |-WasmAtomNode=i64.const
                |-HexLiteral=0xffffffff00000000
              |-WasmAtomNode=get_local
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
            |-WasmAtomNode=i64.const
              |-HexLiteral=0x500000000
    |-FunDirectiveNode type=fun(a: Number) -> boolean annotations=Injected
      |-FunctionNode type=fun(a: Number) -> boolean
        |-ParameterNode
          |-NameIdentifierNode="a" type=Number
          |-TypeReferenceNode=Number type=Number
            |-QNameNode=Number
              |-NameIdentifierNode="Number"
        |-NameIdentifierNode="is" type=fun(a: Number) -> boolean
        |-TypeReferenceNode=boolean type=boolean
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=UNKNOWN annotations=IsValueNode
          |-WasmAtomNode=local
            |-QNameNode=$mask
              |-NameIdentifierNode="$mask"
            |-QNameNode=i64
              |-NameIdentifierNode="i64"
          |-WasmAtomNode=set_local
            |-QNameNode=$mask
              |-NameIdentifierNode="$mask"
            |-WasmAtomNode=i64.and
              |-WasmAtomNode=i64.const
                |-HexLiteral=0xffffffff00000000
              |-WasmAtomNode=get_local
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
          |-WasmAtomNode=i32.or
            |-WasmAtomNode=i32.or
              |-WasmAtomNode=i32.or
                |-WasmAtomNode=i32.or
                  |-WasmAtomNode=i64.eq
                    |-WasmAtomNode=get_local
                      |-QNameNode=$mask
                        |-NameIdentifierNode="$mask"
                    |-WasmAtomNode=i64.const
                      |-HexLiteral=0x500000000
                  |-WasmAtomNode=i64.eq
                    |-WasmAtomNode=get_local
                      |-QNameNode=$mask
                        |-NameIdentifierNode="$mask"
                    |-WasmAtomNode=i64.const
                      |-HexLiteral=0x400000000
                |-WasmAtomNode=i64.eq
                  |-WasmAtomNode=get_local
                    |-QNameNode=$mask
                      |-NameIdentifierNode="$mask"
                  |-WasmAtomNode=i64.const
                    |-HexLiteral=0x300000000
              |-WasmAtomNode=i64.eq
                |-WasmAtomNode=get_local
                  |-QNameNode=$mask
                    |-NameIdentifierNode="$mask"
                |-WasmAtomNode=i64.const
                  |-HexLiteral=0x200000000
            |-WasmAtomNode=i64.eq
              |-WasmAtomNode=get_local
                |-QNameNode=$mask
                  |-NameIdentifierNode="$mask"
              |-WasmAtomNode=i64.const
                |-HexLiteral=0x100000000
    |-NameIdentifierNode="is" type=fun(a: Infinity) -> boolean & fun(a: NDet) -> boolean & fun(a: Real) -> boolean & fun(a: Natural) -> boolean & fun(a: Complex) -> boolean & fun(a: Number) -> boolean
  |-OverloadedFunctionNode type=fun() -> NDet annotations=Injected
    |-FunDirectiveNode type=fun() -> NDet annotations=Injected
      |-FunctionNode type=fun() -> NDet
        |-NameIdentifierNode="NDetAllocator" type=fun() -> NDet
        |-TypeReferenceNode=NDet type=NDet
          |-QNameNode=NDet
            |-NameIdentifierNode="NDet"
        |-WasmExpressionNode type=UNKNOWN annotations=IsValueNode
          |-WasmAtomNode=i64.const
            |-HexLiteral=0x200000000
    |-NameIdentifierNode="NDetAllocator" type=fun() -> NDet
  |-OverloadedFunctionNode type=fun(number: f32) -> Real annotations=Injected
    |-FunDirectiveNode type=fun(number: f32) -> Real annotations=Injected
      |-FunctionNode type=fun(number: f32) -> Real
        |-ParameterNode
          |-NameIdentifierNode="number" type=f32
          |-TypeReferenceNode=f32 type=f32
            |-QNameNode=f32
              |-NameIdentifierNode="f32"
        |-NameIdentifierNode="RealAllocator" type=fun(number: f32) -> Real
        |-TypeReferenceNode=Real type=Real
          |-QNameNode=Real
            |-NameIdentifierNode="Real"
        |-WasmExpressionNode type=UNKNOWN annotations=IsValueNode
          |-WasmAtomNode=local
            |-QNameNode=$_newRef
              |-NameIdentifierNode="$_newRef"
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-WasmAtomNode=set_local
            |-QNameNode=$_newRef
              |-NameIdentifierNode="$_newRef"
            |-WasmAtomNode=call
              |-VariableReferenceNode type=fun(size: i32) -> i32
                |-QNameNode=system::memory::malloc
                  |-NameIdentifierNode="system"
                  |-NameIdentifierNode="memory"
                  |-NameIdentifierNode="malloc"
              |-WasmAtomNode=i32.const
                |-IntegerLiteral=8
          |-WasmAtomNode=i64.or
            |-WasmAtomNode=i64.const
              |-HexLiteral=0x300000000
            |-WasmAtomNode=i64.extend_u/i32
              |-WasmAtomNode=get_local
                |-QNameNode=$_newRef
                  |-NameIdentifierNode="$_newRef"
    |-NameIdentifierNode="RealAllocator" type=fun(number: f32) -> Real
  |-OverloadedFunctionNode type=fun(number: i32) -> Natural annotations=Injected
    |-FunDirectiveNode type=fun(number: i32) -> Natural annotations=Injected
      |-FunctionNode type=fun(number: i32) -> Natural
        |-ParameterNode
          |-NameIdentifierNode="number" type=i32
          |-TypeReferenceNode=i32 type=i32
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
        |-NameIdentifierNode="NaturalAllocator" type=fun(number: i32) -> Natural
        |-TypeReferenceNode=Natural type=Natural
          |-QNameNode=Natural
            |-NameIdentifierNode="Natural"
        |-WasmExpressionNode type=UNKNOWN annotations=IsValueNode
          |-WasmAtomNode=local
            |-QNameNode=$_newRef
              |-NameIdentifierNode="$_newRef"
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-WasmAtomNode=set_local
            |-QNameNode=$_newRef
              |-NameIdentifierNode="$_newRef"
            |-WasmAtomNode=call
              |-VariableReferenceNode type=fun(size: i32) -> i32
                |-QNameNode=system::memory::malloc
                  |-NameIdentifierNode="system"
                  |-NameIdentifierNode="memory"
                  |-NameIdentifierNode="malloc"
              |-WasmAtomNode=i32.const
                |-IntegerLiteral=8
          |-WasmAtomNode=i64.or
            |-WasmAtomNode=i64.const
              |-HexLiteral=0x400000000
            |-WasmAtomNode=i64.extend_u/i32
              |-WasmAtomNode=get_local
                |-QNameNode=$_newRef
                  |-NameIdentifierNode="$_newRef"
    |-NameIdentifierNode="NaturalAllocator" type=fun(number: i32) -> Natural
  |-OverloadedFunctionNode type=fun(real: f32, imaginary: f32) -> Complex annotations=Injected
    |-FunDirectiveNode type=fun(real: f32, imaginary: f32) -> Complex annotations=Injected
      |-FunctionNode type=fun(real: f32, imaginary: f32) -> Complex
        |-ParameterNode
          |-NameIdentifierNode="real" type=f32
          |-TypeReferenceNode=f32 type=f32
            |-QNameNode=f32
              |-NameIdentifierNode="f32"
        |-ParameterNode
          |-NameIdentifierNode="imaginary" type=f32
          |-TypeReferenceNode=f32 type=f32
            |-QNameNode=f32
              |-NameIdentifierNode="f32"
        |-NameIdentifierNode="ComplexAllocator" type=fun(real: f32, imaginary: f32) -> Complex
        |-TypeReferenceNode=Complex type=Complex
          |-QNameNode=Complex
            |-NameIdentifierNode="Complex"
        |-WasmExpressionNode type=UNKNOWN annotations=IsValueNode
          |-WasmAtomNode=local
            |-QNameNode=$_newRef
              |-NameIdentifierNode="$_newRef"
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-WasmAtomNode=set_local
            |-QNameNode=$_newRef
              |-NameIdentifierNode="$_newRef"
            |-WasmAtomNode=call
              |-VariableReferenceNode type=fun(size: i32) -> i32
                |-QNameNode=system::memory::malloc
                  |-NameIdentifierNode="system"
                  |-NameIdentifierNode="memory"
                  |-NameIdentifierNode="malloc"
              |-WasmAtomNode=i32.const
                |-IntegerLiteral=8
          |-WasmAtomNode=i64.or
            |-WasmAtomNode=i64.const
              |-HexLiteral=0x500000000
            |-WasmAtomNode=i64.extend_u/i32
              |-WasmAtomNode=get_local
                |-QNameNode=$_newRef
                  |-NameIdentifierNode="$_newRef"
    |-NameIdentifierNode="ComplexAllocator" type=fun(real: f32, imaginary: f32) -> Complex