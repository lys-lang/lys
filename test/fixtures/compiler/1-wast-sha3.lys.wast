(module
  (memory $mem 1)
  (export "memory" (memory $mem))
  (global $system::memory::AL_BITS (mut i32) (i32.const 0))
  (global $system::memory::AL_SIZE (mut i32) (i32.const 0))
  (global $system::memory::AL_MASK (mut i32) (i32.const 0))
  (global $system::memory::MAX_SIZE_32 (mut i32) (i32.const 0))
  (global $system::memory::HEAP_BASE (mut i32) (i32.const 0))
  (global $system::memory::startOffset (mut i32) (i32.const 0))
  (global $system::memory::offset (mut i32) (i32.const 0))
  (global $system::memory::lastPtr (mut i32) (i32.const 0))
  (func $system::memory::growMemory (param $pages i32) (result i32)
    (grow_memory (get_local $pages))
  )
  (func $system::memory::currentMemory (result i32)
    (current_memory)
  )
  (func $system::memory::max (param $a i32) (param $b i32) (result i32)
    (if $IF1 (result i32) (call $system::core::i32.> (get_local $a) (get_local $b))
      (then
        (get_local $a)
      )
      (else
        (get_local $b)
      )
    )
  )
  (func $system::memory::allocBytes (param $size i32) (result i64)
    (local $allocation i32)
    (set_local $allocation (call $system::memory::malloc_2 (get_local $size)))
    (i32.store (get_local $allocation) (get_local $size))
    (i64.or (i64.extend_s/i32 (get_local $allocation)) (i64.shl (i64.extend_s/i32 (i32.const 0)) (i64.const 32)))
  )
  (func $system::memory::calloc (param $itemCount i32) (param $itemSize i32) (result i32)
    (local $size i32)
    (local $$ret i32)
    (block $B1 (result i32)
      (set_local $size (call $system::core::i32.* (get_local $itemCount) (get_local $itemSize)))
      (set_local $$ret (call $system::memory::malloc_2 (get_local $size)))
      (call $system::memory::memset_1 (get_local $$ret) (get_local $size) (i32.const 0))
      (get_local $$ret)
    )
  )
  (func $system::memory::malloc_2 (param $size i32) (result i32)
    (local $ptr i32)
    (local $newPtr i32)
    (local $pagesBefore i32)
    (local $pagesNeeded i32)
    (local $pagesWanted i32)
    (block $B1 (result i32)
      (if $IF2 (result i32) (call $system::core::i32.> (get_local $size) (i32.const 0))
          (then
            (block $B3 (result i32)
                (if $IF4 (call $system::core::i32.> (get_local $size) (get_global $system::memory::MAX_SIZE_32))
                    (then
                      (block $B5
                          (call $system::core::panic_1)
                        )
                    )
                    (else)
                  )
                (set_local $ptr (get_global $system::memory::offset))
                (set_local $newPtr (call $system::core::i32.& (call $system::core::i32.+ (call $system::core::i32.+ (get_local $ptr) (get_local $size)) (get_global $system::memory::AL_MASK)) (call $system::core::i32.~ (get_global $system::memory::AL_MASK))))
                (set_local $pagesBefore (call $system::memory::currentMemory))
                (if $IF6 (call $system::core::i32.> (get_local $newPtr) (call $system::core::i32.<< (get_local $pagesBefore) (i32.const 16)))
                    (then
                      (block $B7
                          (set_local $pagesNeeded (call $system::core::i32.>>> (call $system::core::i32.& (call $system::core::i32.+ (call $system::core::i32.- (get_local $newPtr) (get_local $ptr)) (i32.const 65535)) (call $system::core::i32.~ (i32.const 65535))) (i32.const 16)))
                          (set_local $pagesWanted (call $system::memory::max (get_local $pagesBefore) (get_local $pagesNeeded)))
                          (if $IF8 (call $system::core::i32.< (call $system::memory::growMemory (get_local $pagesWanted)) (i32.const 0))
                              (then
                                (block $B9
                                    (if $IF10 (call $system::core::i32.< (call $system::memory::growMemory (get_local $pagesNeeded)) (i32.const 0))
                                        (then
                                          (block $B11
                                              (call $system::core::panic_1)
                                            )
                                        )
                                        (else)
                                      )
                                  )
                              )
                              (else)
                            )
                        )
                    )
                    (else)
                  )
                (set_global $system::memory::offset (get_local $newPtr))
                (get_local $ptr)
              )
          )
          (else
            (block $B12 (result i32)
                (i32.const 0)
              )
          )
        )
    )
  )
  (func $system::memory::free (param $ptr i32)
    (block $B1
      (nop)
    )
  )
  (func $system::memory::discriminant (param $v i64) (result i64)
    (i64.and (i64.const 0xffffffff00000000) (get_local $v))
  )
  (func $system::memory::memcpy (param $from i32) (param $to i32) (param $len i32)
    (local $end i32)
    (set_local $end (i32.add (get_local $from) (get_local $len)))
    (block $exit (loop $cont (br_if $exit (i32.eq (get_local $from) (get_local $end))) (i32.store8 (get_local $to) (i32.load8_u (get_local $from))) (set_local $from (i32.add (get_local $from) (i32.const 1))) (set_local $to (i32.add (get_local $to) (i32.const 1))) (br $cont)))
  )
  (func $system::memory::memset_1 (param $ptr i32) (param $content i32) (param $len i32)
    (local $end i32)
    (set_local $end (i32.add (get_local $ptr) (get_local $len)))
    (block $exit (loop $cont (br_if $exit (i32.eq (get_local $ptr) (get_local $end))) (i32.store8 (get_local $ptr) (i32.load8_u (get_local $content))) (set_local $ptr (i32.add (get_local $ptr) (i32.const 1))) (br $cont)))
  )
  (func $system::hash::keccak::keccak_theta (param $context_offset i32)
    (local $C0 i64)
    (local $C1 i64)
    (local $C2 i64)
    (local $C3 i64)
    (local $C4 i64)
    (local $D0 i64)
    (local $D1 i64)
    (local $D2 i64)
    (local $D3 i64)
    (local $D4 i64)
    (set_local $C0 (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 0))) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 40))) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 80))) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 120))) (i64.load (i32.add (get_local $context_offset) (i32.const 160))))))))
    (set_local $C1 (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 8))) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 48))) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 88))) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 128))) (i64.load (i32.add (get_local $context_offset) (i32.const 168))))))))
    (set_local $C2 (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 16))) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 56))) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 96))) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 136))) (i64.load (i32.add (get_local $context_offset) (i32.const 176))))))))
    (set_local $C3 (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 24))) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 64))) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 104))) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 144))) (i64.load (i32.add (get_local $context_offset) (i32.const 184))))))))
    (set_local $C4 (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 32))) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 72))) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 112))) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 152))) (i64.load (i32.add (get_local $context_offset) (i32.const 192))))))))
    (set_local $D0 (i64.xor (get_local $C4) (i64.rotl (get_local $C1) (i64.const 1))))
    (set_local $D1 (i64.xor (get_local $C0) (i64.rotl (get_local $C2) (i64.const 1))))
    (set_local $D2 (i64.xor (get_local $C1) (i64.rotl (get_local $C3) (i64.const 1))))
    (set_local $D3 (i64.xor (get_local $C2) (i64.rotl (get_local $C4) (i64.const 1))))
    (set_local $D4 (i64.xor (get_local $C3) (i64.rotl (get_local $C0) (i64.const 1))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 0)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 0))) (get_local $D0)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 40)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 40))) (get_local $D0)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 80)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 80))) (get_local $D0)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 120)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 120))) (get_local $D0)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 160)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 160))) (get_local $D0)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 8)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 8))) (get_local $D1)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 48)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 48))) (get_local $D1)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 88)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 88))) (get_local $D1)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 128)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 128))) (get_local $D1)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 168)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 168))) (get_local $D1)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 16)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 16))) (get_local $D2)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 56)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 56))) (get_local $D2)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 96)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 96))) (get_local $D2)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 136)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 136))) (get_local $D2)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 176)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 176))) (get_local $D2)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 24)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 24))) (get_local $D3)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 64)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 64))) (get_local $D3)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 104)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 104))) (get_local $D3)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 144)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 144))) (get_local $D3)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 184)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 184))) (get_local $D3)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 32)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 32))) (get_local $D4)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 72)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 72))) (get_local $D4)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 112)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 112))) (get_local $D4)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 152)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 152))) (get_local $D4)))
    (i64.store (i32.add (get_local $context_offset) (i32.const 192)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 192))) (get_local $D4)))
  )
  (func $system::hash::keccak::keccak_rho (param $context_offset i32) (param $rotation_consts i32)
    (local $tmp i32)
    (local $i i32)
    (set_local $i (i32.const 0))
    (block $done (loop $loop (if (i32.ge_u (get_local $i) (i32.const 24)) (br $done)) (set_local $tmp (i32.add (get_local $context_offset) (i32.mul (i32.const 8) (i32.add (i32.const 1) (get_local $i))))) (i64.store (get_local $tmp) (i64.rotl (i64.load (get_local $tmp)) (i64.load8_u (i32.add (get_local $rotation_consts) (get_local $i))))) (set_local $i (i32.add (get_local $i) (i32.const 1))) (br $loop)))
  )
  (func $system::hash::keccak::keccak_pi (param $context_offset i32)
    (local $A1 i64)
    (set_local $A1 (i64.load (i32.add (get_local $context_offset) (i32.const 8))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 8)) (i64.load (i32.add (get_local $context_offset) (i32.const 48))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 48)) (i64.load (i32.add (get_local $context_offset) (i32.const 72))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 72)) (i64.load (i32.add (get_local $context_offset) (i32.const 176))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 176)) (i64.load (i32.add (get_local $context_offset) (i32.const 112))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 112)) (i64.load (i32.add (get_local $context_offset) (i32.const 160))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 160)) (i64.load (i32.add (get_local $context_offset) (i32.const 16))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 16)) (i64.load (i32.add (get_local $context_offset) (i32.const 96))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 96)) (i64.load (i32.add (get_local $context_offset) (i32.const 104))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 104)) (i64.load (i32.add (get_local $context_offset) (i32.const 152))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 152)) (i64.load (i32.add (get_local $context_offset) (i32.const 184))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 184)) (i64.load (i32.add (get_local $context_offset) (i32.const 120))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 120)) (i64.load (i32.add (get_local $context_offset) (i32.const 32))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 32)) (i64.load (i32.add (get_local $context_offset) (i32.const 192))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 192)) (i64.load (i32.add (get_local $context_offset) (i32.const 168))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 168)) (i64.load (i32.add (get_local $context_offset) (i32.const 64))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 64)) (i64.load (i32.add (get_local $context_offset) (i32.const 128))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 128)) (i64.load (i32.add (get_local $context_offset) (i32.const 40))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 40)) (i64.load (i32.add (get_local $context_offset) (i32.const 24))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 24)) (i64.load (i32.add (get_local $context_offset) (i32.const 144))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 144)) (i64.load (i32.add (get_local $context_offset) (i32.const 136))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 136)) (i64.load (i32.add (get_local $context_offset) (i32.const 88))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 88)) (i64.load (i32.add (get_local $context_offset) (i32.const 56))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 56)) (i64.load (i32.add (get_local $context_offset) (i32.const 80))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 80)) (get_local $A1))
  )
  (func $system::hash::keccak::keccak_chi (param $context_offset i32)
    (local $A0 i64)
    (local $A1 i64)
    (local $i i32)
    (set_local $i (i32.const 0))
    (block $done (loop $loop (if (i32.ge_u (get_local $i) (i32.const 25)) (br $done)) (set_local $A0 (i64.load (i32.add (get_local $context_offset) (i32.mul (i32.const 8) (get_local $i))))) (set_local $A1 (i64.load (i32.add (get_local $context_offset) (i32.mul (i32.const 8) (i32.add (get_local $i) (i32.const 1)))))) (i64.store (i32.add (get_local $context_offset) (i32.mul (i32.const 8) (get_local $i))) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.mul (i32.const 8) (get_local $i)))) (i64.and (i64.xor (get_local $A1) (i64.const 0xFFFFFFFFFFFFFFFF)) (i64.load (i32.add (get_local $context_offset) (i32.mul (i32.const 8) (i32.add (get_local $i) (i32.const 2)))))))) (i64.store (i32.add (get_local $context_offset) (i32.mul (i32.const 8) (i32.add (get_local $i) (i32.const 1)))) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.mul (i32.const 8) (i32.add (get_local $i) (i32.const 1))))) (i64.and (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.mul (i32.const 8) (i32.add (get_local $i) (i32.const 2))))) (i64.const 0xFFFFFFFFFFFFFFFF)) (i64.load (i32.add (get_local $context_offset) (i32.mul (i32.const 8) (i32.add (get_local $i) (i32.const 3)))))))) (i64.store (i32.add (get_local $context_offset) (i32.mul (i32.const 8) (i32.add (get_local $i) (i32.const 2)))) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.mul (i32.const 8) (i32.add (get_local $i) (i32.const 2))))) (i64.and (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.mul (i32.const 8) (i32.add (get_local $i) (i32.const 3))))) (i64.const 0xFFFFFFFFFFFFFFFF)) (i64.load (i32.add (get_local $context_offset) (i32.mul (i32.const 8) (i32.add (get_local $i) (i32.const 4)))))))) (i64.store (i32.add (get_local $context_offset) (i32.mul (i32.const 8) (i32.add (get_local $i) (i32.const 3)))) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.mul (i32.const 8) (i32.add (get_local $i) (i32.const 3))))) (i64.and (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.mul (i32.const 8) (i32.add (get_local $i) (i32.const 4))))) (i64.const 0xFFFFFFFFFFFFFFFF)) (get_local $A0)))) (i64.store (i32.add (get_local $context_offset) (i32.mul (i32.const 8) (i32.add (get_local $i) (i32.const 4)))) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.mul (i32.const 8) (i32.add (get_local $i) (i32.const 4))))) (i64.and (i64.xor (get_local $A0) (i64.const 0xFFFFFFFFFFFFFFFF)) (get_local $A1)))) (set_local $i (i32.add (get_local $i) (i32.const 5))) (br $loop)))
  )
  (func $system::hash::keccak::keccak_permute (param $context_offset i32)
    (local $rotation_consts i32)
    (local $round_consts i32)
    (local $round i32)
    (set_local $round_consts (i32.add (get_local $context_offset) (i32.const 400)))
    (set_local $rotation_consts (i32.add (get_local $context_offset) (i32.const 592)))
    (set_local $round (i32.const 0))
    (block $done (loop $loop (if (i32.ge_u (get_local $round) (i32.const 24)) (br $done)) (call $system::hash::keccak::keccak_theta (get_local $context_offset)) (call $system::hash::keccak::keccak_rho (get_local $context_offset) (get_local $rotation_consts)) (call $system::hash::keccak::keccak_pi (get_local $context_offset)) (call $system::hash::keccak::keccak_chi (get_local $context_offset)) (i64.store (get_local $context_offset) (i64.xor (i64.load (get_local $context_offset)) (i64.load (i32.add (get_local $round_consts) (i32.mul (i32.const 8) (get_local $round)))))) (set_local $round (i32.add (get_local $round) (i32.const 1))) (br $loop)))
  )
  (func $system::hash::keccak::keccak_block (param $input_offset i32) (param $input_length i32) (param $context_offset i32)
    (i64.store (i32.add (get_local $context_offset) (i32.const 0)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 0))) (i64.load (i32.add (get_local $input_offset) (i32.const 0)))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 8)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 8))) (i64.load (i32.add (get_local $input_offset) (i32.const 8)))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 16)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 16))) (i64.load (i32.add (get_local $input_offset) (i32.const 16)))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 24)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 24))) (i64.load (i32.add (get_local $input_offset) (i32.const 24)))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 32)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 32))) (i64.load (i32.add (get_local $input_offset) (i32.const 32)))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 40)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 40))) (i64.load (i32.add (get_local $input_offset) (i32.const 40)))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 48)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 48))) (i64.load (i32.add (get_local $input_offset) (i32.const 48)))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 56)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 56))) (i64.load (i32.add (get_local $input_offset) (i32.const 56)))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 64)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 64))) (i64.load (i32.add (get_local $input_offset) (i32.const 64)))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 72)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 72))) (i64.load (i32.add (get_local $input_offset) (i32.const 72)))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 80)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 80))) (i64.load (i32.add (get_local $input_offset) (i32.const 80)))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 88)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 88))) (i64.load (i32.add (get_local $input_offset) (i32.const 88)))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 96)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 96))) (i64.load (i32.add (get_local $input_offset) (i32.const 96)))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 104)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 104))) (i64.load (i32.add (get_local $input_offset) (i32.const 104)))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 112)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 112))) (i64.load (i32.add (get_local $input_offset) (i32.const 112)))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 120)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 120))) (i64.load (i32.add (get_local $input_offset) (i32.const 120)))))
    (i64.store (i32.add (get_local $context_offset) (i32.const 128)) (i64.xor (i64.load (i32.add (get_local $context_offset) (i32.const 128))) (i64.load (i32.add (get_local $input_offset) (i32.const 128)))))
    (call $system::hash::keccak::keccak_permute (get_local $context_offset))
  )
  (func $system::hash::keccak::keccak_init (param $context_offset i32)
    (local $round_consts i32)
    (local $rotation_consts i32)
    (call $system::hash::keccak::keccak_reset_1 (get_local $context_offset))
    (set_local $round_consts (i32.add (get_local $context_offset) (i32.const 400)))
    (i64.store (i32.add (get_local $round_consts) (i32.const 0)) (i64.const 0x0000000000000001))
    (i64.store (i32.add (get_local $round_consts) (i32.const 8)) (i64.const 0x0000000000008082))
    (i64.store (i32.add (get_local $round_consts) (i32.const 16)) (i64.const 0x800000000000808A))
    (i64.store (i32.add (get_local $round_consts) (i32.const 24)) (i64.const 0x8000000080008000))
    (i64.store (i32.add (get_local $round_consts) (i32.const 32)) (i64.const 0x000000000000808B))
    (i64.store (i32.add (get_local $round_consts) (i32.const 40)) (i64.const 0x0000000080000001))
    (i64.store (i32.add (get_local $round_consts) (i32.const 48)) (i64.const 0x8000000080008081))
    (i64.store (i32.add (get_local $round_consts) (i32.const 56)) (i64.const 0x8000000000008009))
    (i64.store (i32.add (get_local $round_consts) (i32.const 64)) (i64.const 0x000000000000008A))
    (i64.store (i32.add (get_local $round_consts) (i32.const 72)) (i64.const 0x0000000000000088))
    (i64.store (i32.add (get_local $round_consts) (i32.const 80)) (i64.const 0x0000000080008009))
    (i64.store (i32.add (get_local $round_consts) (i32.const 88)) (i64.const 0x000000008000000A))
    (i64.store (i32.add (get_local $round_consts) (i32.const 96)) (i64.const 0x000000008000808B))
    (i64.store (i32.add (get_local $round_consts) (i32.const 104)) (i64.const 0x800000000000008B))
    (i64.store (i32.add (get_local $round_consts) (i32.const 112)) (i64.const 0x8000000000008089))
    (i64.store (i32.add (get_local $round_consts) (i32.const 120)) (i64.const 0x8000000000008003))
    (i64.store (i32.add (get_local $round_consts) (i32.const 128)) (i64.const 0x8000000000008002))
    (i64.store (i32.add (get_local $round_consts) (i32.const 136)) (i64.const 0x8000000000000080))
    (i64.store (i32.add (get_local $round_consts) (i32.const 144)) (i64.const 0x000000000000800A))
    (i64.store (i32.add (get_local $round_consts) (i32.const 152)) (i64.const 0x800000008000000A))
    (i64.store (i32.add (get_local $round_consts) (i32.const 160)) (i64.const 0x8000000080008081))
    (i64.store (i32.add (get_local $round_consts) (i32.const 168)) (i64.const 0x8000000000008080))
    (i64.store (i32.add (get_local $round_consts) (i32.const 176)) (i64.const 0x0000000080000001))
    (i64.store (i32.add (get_local $round_consts) (i32.const 184)) (i64.const 0x8000000080008008))
    (set_local $rotation_consts (i32.add (get_local $context_offset) (i32.const 592)))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 0)) (i32.const 1))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 1)) (i32.const 62))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 2)) (i32.const 28))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 3)) (i32.const 27))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 4)) (i32.const 36))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 5)) (i32.const 44))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 6)) (i32.const 6))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 7)) (i32.const 55))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 8)) (i32.const 20))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 9)) (i32.const 3))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 10)) (i32.const 10))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 11)) (i32.const 43))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 12)) (i32.const 25))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 13)) (i32.const 39))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 14)) (i32.const 41))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 15)) (i32.const 45))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 16)) (i32.const 15))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 17)) (i32.const 21))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 18)) (i32.const 8))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 19)) (i32.const 18))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 20)) (i32.const 2))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 21)) (i32.const 61))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 22)) (i32.const 56))
    (i32.store8 (i32.add (get_local $rotation_consts) (i32.const 23)) (i32.const 14))
  )
  (func $system::hash::keccak::keccak_reset_1 (param $context_offset i32)
    (block $B1
      (call $system::memory::memset_1 (get_local $context_offset) (i32.const 0) (i32.const 400))
    )
  )
  (func $system::hash::keccak::keccak_update (param $context_offset i32) (param $input_offset i32) (param $input_length i32)
    (local $residue_offset i32)
    (local $residue_buffer i32)
    (local $residue_index i32)
    (local $tmp i32)
    (set_local $residue_offset (i32.add (get_local $context_offset) (i32.const 200)))
    (set_local $residue_buffer (i32.add (get_local $context_offset) (i32.const 208)))
    (set_local $residue_index (i32.load (get_local $residue_offset)))
    (if (i32.ne (get_local $residue_index) (i32.const 0)) (then (set_local $tmp (i32.sub (i32.const 136) (get_local $residue_index))) (if (i32.lt_u (get_local $input_length) (get_local $tmp)) (set_local $tmp (get_local $input_length))) (call $system::memory::memcpy (i32.add (get_local $residue_buffer) (get_local $residue_index)) (get_local $input_offset) (get_local $tmp)) (set_local $residue_index (i32.add (get_local $residue_index) (get_local $tmp))) (if (i32.eq (get_local $residue_index) (i32.const 136)) (call $system::hash::keccak::keccak_block (get_local $input_offset) (i32.const 136) (get_local $context_offset)) (set_local $residue_index (i32.const 0))) (i32.store (get_local $residue_offset) (get_local $residue_index)) (set_local $input_length (i32.sub (get_local $input_length) (get_local $tmp)))))
    (block $done (loop $loop (if (i32.lt_u (get_local $input_length) (i32.const 136)) (br $done)) (call $system::hash::keccak::keccak_block (get_local $input_offset) (i32.const 136) (get_local $context_offset)) (set_local $input_offset (i32.add (get_local $input_offset) (i32.const 136))) (set_local $input_length (i32.sub (get_local $input_length) (i32.const 136))) (br $loop)))
    (if (i32.gt_u (get_local $input_length) (i32.const 0)) (then (call $system::memory::memcpy (i32.add (get_local $residue_buffer) (get_local $residue_index)) (get_local $input_offset) (get_local $input_length)) (set_local $residue_index (i32.add (get_local $residue_index) (get_local $input_length))) (i32.store (get_local $residue_offset) (get_local $residue_index))))
  )
  (func $system::hash::keccak::keccak_finish (param $context_offset i32) (param $output_offset i32)
    (local $residue_offset i32)
    (local $residue_buffer i32)
    (local $residue_index i32)
    (local $tmp i32)
    (set_local $residue_offset (i32.add (get_local $context_offset) (i32.const 200)))
    (set_local $residue_buffer (i32.add (get_local $context_offset) (i32.const 208)))
    (set_local $residue_index (i32.load (get_local $residue_offset)))
    (set_local $tmp (get_local $residue_index))
    (call $system::memory::memset_1 (i32.add (get_local $residue_buffer) (get_local $tmp)) (i32.const 0) (i32.sub (i32.const 136) (get_local $tmp)))
    (set_local $tmp (i32.add (get_local $residue_buffer) (get_local $residue_index)))
    (i32.store8 (get_local $tmp) (i32.or (i32.load8_u (get_local $tmp)) (i32.const 0x01)))
    (set_local $tmp (i32.add (get_local $residue_buffer) (i32.const 135)))
    (i32.store8 (get_local $tmp) (i32.or (i32.load8_u (get_local $tmp)) (i32.const 0x80)))
    (call $system::hash::keccak::keccak_block (get_local $residue_buffer) (i32.const 136) (get_local $context_offset))
    (i64.store (get_local $output_offset) (i64.load (get_local $context_offset)))
    (i64.store (i32.add (get_local $output_offset) (i32.const 8)) (i64.load (i32.add (get_local $context_offset) (i32.const 8))))
    (i64.store (i32.add (get_local $output_offset) (i32.const 16)) (i64.load (i32.add (get_local $context_offset) (i32.const 16))))
    (i64.store (i32.add (get_local $output_offset) (i32.const 24)) (i64.load (i32.add (get_local $context_offset) (i32.const 24))))
  )
  (func $system::hash::keccak::keccak (param $input i64) (result i64)
    (local $context i32)
    (local $ret i64)
    (block $B1 (result i64)
      (set_local $context (call $system::memory::calloc (i32.const 616) (i32.const 1)))
      (set_local $ret (call $system::memory::allocBytes (i32.const 32)))
      (call $system::hash::keccak::keccak_init (get_local $context))
      (call $system::hash::keccak::keccak_update (get_local $context) (call $system::core::bytes.property_ptr (get_local $input)) (call $system::core::bytes.property_length (get_local $input)))
      (call $system::hash::keccak::keccak_finish (get_local $context) (call $system::core::bytes.property_ptr (get_local $ret)))
      (call $system::memory::free (get_local $context))
      (get_local $ret)
    )
  )
  (func $system::core::assert (param $x i32)
    (if $IF1 (call $system::core::boolean.== (get_local $x) (i32.const 0))
      (then
        (call $system::core::panic_1)
      )
      (else)
    )
  )
  (func $system::core::addressFromRef (param $pointer i64) (result i32)
    (i32.wrap/i64 (get_local $pointer))
  )
  (func $system::core::panic_1
    (unreachable)
  )
  (func $system::core::u8.sizeOf (result i32)
    (i32.const 1)
  )
  (func $system::core::u8.allocationSize (result i32)
    (call $system::core::u8.sizeOf)
  )
  (func $system::core::u8.as (param $lhs i32) (result i32)
    (get_local $lhs)
  )
  (func $system::core::u8.as_1 (param $lhs i32) (result i32)
    (get_local $lhs)
  )
  (func $system::core::u8.as_2 (param $lhs i32) (result i32)
    (get_local $lhs)
  )
  (func $system::core::u8.as_3 (param $lhs i32) (result i32)
    (get_local $lhs)
  )
  (func $system::core::u8.as_4 (param $lhs i32) (result i64)
    (i64.extend_u/i32 (get_local $lhs))
  )
  (func $system::core::u8.as_5 (param $lhs i32) (result i64)
    (i64.extend_s/i32 (get_local $lhs))
  )
  (func $system::core::u8.as_6 (param $lhs i32) (result f32)
    (f32.convert_u/i32 (get_local $lhs))
  )
  (func $system::core::u8.as_7 (param $lhs i32) (result f64)
    (f64.convert_u/i32 (get_local $lhs))
  )
  (func $system::core::u8.== (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u8.==_1 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u8.==_2 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u8.store (param $lhs i64) (param $rhs i32)
    (i32.store8 (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::u8.store_1 (param $lhs i64) (param $rhs i32) (param $offset i32)
    (i32.store8 (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::u8.load (param $lhs i64) (result i32)
    (i32.load8_u (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::u8.load_1 (param $lhs i64) (param $offset i32) (result i32)
    (i32.load8_u (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::i16.sizeOf (result i32)
    (i32.const 2)
  )
  (func $system::core::i16.allocationSize (result i32)
    (call $system::core::i16.sizeOf)
  )
  (func $system::core::i16.as (param $lhs i32) (result i32)
    (get_local $lhs)
  )
  (func $system::core::i16.as_1 (param $lhs i32) (result i64)
    (i64.extend_s/i32 (get_local $lhs))
  )
  (func $system::core::i16.as_2 (param $lhs i32) (result f32)
    (f32.convert_s/i32 (get_local $lhs))
  )
  (func $system::core::i16.as_3 (param $lhs i32) (result f64)
    (f64.convert_s/i32 (get_local $lhs))
  )
  (func $system::core::i16.== (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i16.==_1 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i16.store (param $lhs i64) (param $rhs i32)
    (i32.store16 (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::i16.store_1 (param $lhs i64) (param $rhs i32) (param $offset i32)
    (i32.store16 (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::i16.load (param $lhs i64) (result i32)
    (i32.load16_s (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::i16.load_1 (param $lhs i64) (param $offset i32) (result i32)
    (i32.load16_s (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::u16.sizeOf (result i32)
    (i32.const 2)
  )
  (func $system::core::u16.allocationSize (result i32)
    (call $system::core::u16.sizeOf)
  )
  (func $system::core::u16.as (param $lhs i32) (result i32)
    (get_local $lhs)
  )
  (func $system::core::u16.as_1 (param $lhs i32) (result i32)
    (get_local $lhs)
  )
  (func $system::core::u16.as_2 (param $lhs i32) (result i64)
    (i64.extend_u/i32 (get_local $lhs))
  )
  (func $system::core::u16.as_3 (param $lhs i32) (result i64)
    (i64.extend_u/i32 (get_local $lhs))
  )
  (func $system::core::u16.as_4 (param $lhs i32) (result f32)
    (f32.convert_u/i32 (get_local $lhs))
  )
  (func $system::core::u16.as_5 (param $lhs i32) (result f64)
    (f64.convert_u/i32 (get_local $lhs))
  )
  (func $system::core::u16.== (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u16.==_1 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u16.==_2 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u16.store (param $lhs i64) (param $rhs i32)
    (i32.store16 (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::u16.store_1 (param $lhs i64) (param $rhs i32) (param $offset i32)
    (i32.store16 (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::u16.load (param $lhs i64) (result i32)
    (i32.load16_u (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::u16.load_1 (param $lhs i64) (param $offset i32) (result i32)
    (i32.load16_u (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::i32.sizeOf (result i32)
    (i32.const 4)
  )
  (func $system::core::i32.allocationSize (result i32)
    (call $system::core::i32.sizeOf)
  )
  (func $system::core::i32.as (param $lhs i32) (result i64)
    (i64.extend_s/i32 (get_local $lhs))
  )
  (func $system::core::i32.as_1 (param $lhs i32) (result f32)
    (f32.convert_s/i32 (get_local $lhs))
  )
  (func $system::core::i32.as_2 (param $lhs i32) (result f64)
    (f64.convert_s/i32 (get_local $lhs))
  )
  (func $system::core::i32.as_3 (param $lhs i32) (result f32)
    (f32.convert_s/i32 (get_local $lhs))
  )
  (func $system::core::i32.as_4 (param $lhs i32) (result i64)
    (i64.extend_s/i32 (get_local $lhs))
  )
  (func $system::core::i32.== (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.==_1 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.==_2 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.!= (param $lhs i32) (param $rhs i32) (result i32)
    (i32.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.& (param $lhs i32) (param $rhs i32) (result i32)
    (i32.and (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.| (param $lhs i32) (param $rhs i32) (result i32)
    (i32.or (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.^ (param $lhs i32) (param $rhs i32) (result i32)
    (i32.xor (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.^_1 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.xor (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.+ (param $lhs i32) (param $rhs i32) (result i32)
    (i32.add (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.- (param $lhs i32) (param $rhs i32) (result i32)
    (i32.sub (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.-_1 (param $rhs i32) (result i32)
    (i32.sub (i32.const 0) (get_local $rhs))
  )
  (func $system::core::i32.* (param $lhs i32) (param $rhs i32) (result i32)
    (i32.mul (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32./ (param $lhs i32) (param $rhs i32) (result i32)
    (i32.div_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.~ (param $rhs i32) (result i32)
    (i32.xor (i32.const 0xFFFFFFFF) (get_local $rhs))
  )
  (func $system::core::i32.>>> (param $lhs i32) (param $rhs i32) (result i32)
    (i32.shr_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.>> (param $lhs i32) (param $rhs i32) (result i32)
    (i32.shr_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.<< (param $lhs i32) (param $rhs i32) (result i32)
    (i32.shl (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.>= (param $lhs i32) (param $rhs i32) (result i32)
    (i32.ge_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.<= (param $lhs i32) (param $rhs i32) (result i32)
    (i32.le_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.> (param $lhs i32) (param $rhs i32) (result i32)
    (i32.gt_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.< (param $lhs i32) (param $rhs i32) (result i32)
    (i32.lt_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.store (param $lhs i64) (param $rhs i32)
    (i32.store (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::i32.store_1 (param $lhs i64) (param $rhs i32) (param $offset i32)
    (i32.store (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::i32.load (param $lhs i64) (result i32)
    (i32.load (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::i32.load_1 (param $lhs i64) (param $offset i32) (result i32)
    (i32.load (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::u32.sizeOf (result i32)
    (i32.const 4)
  )
  (func $system::core::u32.allocationSize (result i32)
    (call $system::core::u32.sizeOf)
  )
  (func $system::core::u32.as (param $lhs i32) (result i64)
    (i64.extend_u/i32 (get_local $lhs))
  )
  (func $system::core::u32.as_1 (param $lhs i32) (result i64)
    (i64.extend_u/i32 (get_local $lhs))
  )
  (func $system::core::u32.as_2 (param $lhs i32) (result f32)
    (f32.convert_u/i32 (get_local $lhs))
  )
  (func $system::core::u32.as_3 (param $lhs i32) (result f64)
    (f64.convert_u/i32 (get_local $lhs))
  )
  (func $system::core::u32.== (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.==_1 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.==_2 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.!= (param $lhs i32) (param $rhs i32) (result i32)
    (i32.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.+ (param $lhs i32) (param $rhs i32) (result i32)
    (i32.add (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.- (param $lhs i32) (param $rhs i32) (result i32)
    (i32.sub (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.* (param $lhs i32) (param $rhs i32) (result i32)
    (i32.mul (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32./ (param $lhs i32) (param $rhs i32) (result i32)
    (i32.div_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.~ (param $rhs i32) (result i32)
    (i32.xor (i32.const 0xFFFFFFFF) (get_local $rhs))
  )
  (func $system::core::u32.>>> (param $lhs i32) (param $rhs i32) (result i32)
    (i32.shr_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.>> (param $lhs i32) (param $rhs i32) (result i32)
    (i32.shr_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.<< (param $lhs i32) (param $rhs i32) (result i32)
    (i32.shl (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.^ (param $lhs i32) (param $rhs i32) (result i32)
    (i32.xor (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.>= (param $lhs i32) (param $rhs i32) (result i32)
    (i32.ge_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.<= (param $lhs i32) (param $rhs i32) (result i32)
    (i32.le_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.> (param $lhs i32) (param $rhs i32) (result i32)
    (i32.gt_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.< (param $lhs i32) (param $rhs i32) (result i32)
    (i32.lt_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.store (param $lhs i64) (param $rhs i32)
    (i32.store (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::u32.store_1 (param $lhs i64) (param $rhs i32) (param $offset i32)
    (i32.store (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::u32.load (param $lhs i64) (result i32)
    (i32.load (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::u32.load_1 (param $lhs i64) (param $offset i32) (result i32)
    (i32.load (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::i64.sizeOf (result i32)
    (i32.const 8)
  )
  (func $system::core::i64.allocationSize (result i32)
    (call $system::core::i64.sizeOf)
  )
  (func $system::core::i64.as (param $lhs i64) (result f32)
    (f32.convert_s/i64 (get_local $lhs))
  )
  (func $system::core::i64.as_1 (param $lhs i64) (result f64)
    (f64.convert_s/i64 (get_local $lhs))
  )
  (func $system::core::i64.as_2 (param $lhs i64) (result f32)
    (f32.convert_s/i64 (get_local $lhs))
  )
  (func $system::core::i64.as_3 (param $lhs i64) (result i32)
    (i32.wrap/i64 (get_local $lhs))
  )
  (func $system::core::i64.== (param $lhs i64) (param $rhs i64) (result i32)
    (i64.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.==_1 (param $lhs i64) (param $rhs i32) (result i32)
    (i64.eq (get_local $lhs) (i64.extend_s/i32 (get_local $rhs)))
  )
  (func $system::core::i64.==_2 (param $lhs i64) (param $rhs i32) (result i32)
    (i64.eq (get_local $lhs) (i64.extend_s/i32 (get_local $rhs)))
  )
  (func $system::core::i64.!= (param $lhs i64) (param $rhs i64) (result i32)
    (i64.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.+ (param $lhs i64) (param $rhs i64) (result i64)
    (i64.add (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.- (param $lhs i64) (param $rhs i64) (result i64)
    (i64.sub (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.* (param $lhs i64) (param $rhs i64) (result i64)
    (i64.mul (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64./ (param $lhs i64) (param $rhs i64) (result i64)
    (i64.div_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.~ (param $rhs i64) (result i64)
    (i64.xor (i64.const 0xFFFFFFFFFFFFFFFF) (get_local $rhs))
  )
  (func $system::core::i64.>>> (param $lhs i64) (param $rhs i64) (result i64)
    (i64.shr_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.>> (param $lhs i64) (param $rhs i64) (result i64)
    (i64.shr_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.<< (param $lhs i64) (param $rhs i64) (result i64)
    (i64.shl (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.^ (param $lhs i64) (param $rhs i64) (result i64)
    (i64.xor (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.>= (param $lhs i64) (param $rhs i64) (result i32)
    (i64.ge_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.<= (param $lhs i64) (param $rhs i64) (result i32)
    (i64.le_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.> (param $lhs i64) (param $rhs i64) (result i32)
    (i64.gt_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.< (param $lhs i64) (param $rhs i64) (result i32)
    (i64.lt_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.store (param $lhs i64) (param $rhs i64)
    (i64.store (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::i64.store_1 (param $lhs i64) (param $rhs i64) (param $offset i32)
    (i64.store (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::i64.load (param $lhs i64) (result i64)
    (i64.load (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::i64.load_1 (param $lhs i64) (param $offset i32) (result i64)
    (i64.load (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::u64.sizeOf (result i32)
    (i32.const 8)
  )
  (func $system::core::u64.allocationSize (result i32)
    (call $system::core::u64.sizeOf)
  )
  (func $system::core::u64.as (param $lhs i64) (result f32)
    (f32.convert_u/i64 (get_local $lhs))
  )
  (func $system::core::u64.as_1 (param $lhs i64) (result f64)
    (f64.convert_u/i64 (get_local $lhs))
  )
  (func $system::core::u64.as_2 (param $lhs i64) (result f32)
    (f32.convert_u/i64 (get_local $lhs))
  )
  (func $system::core::u64.as_3 (param $lhs i64) (result i32)
    (i32.wrap/i64 (get_local $lhs))
  )
  (func $system::core::u64.== (param $lhs i64) (param $rhs i64) (result i32)
    (i64.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.==_1 (param $lhs i64) (param $rhs i32) (result i32)
    (i64.eq (get_local $lhs) (i64.extend_u/i32 (get_local $rhs)))
  )
  (func $system::core::u64.==_2 (param $lhs i64) (param $rhs i32) (result i32)
    (i64.eq (get_local $lhs) (i64.extend_u/i32 (get_local $rhs)))
  )
  (func $system::core::u64.==_3 (param $lhs i64) (param $rhs i32) (result i32)
    (i64.eq (get_local $lhs) (i64.extend_u/i32 (get_local $rhs)))
  )
  (func $system::core::u64.!= (param $lhs i64) (param $rhs i64) (result i32)
    (i64.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.+ (param $lhs i64) (param $rhs i64) (result i64)
    (i64.add (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.- (param $lhs i64) (param $rhs i64) (result i64)
    (i64.sub (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.* (param $lhs i64) (param $rhs i64) (result i64)
    (i64.mul (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64./ (param $lhs i64) (param $rhs i64) (result i64)
    (i64.div_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.~ (param $rhs i64) (result i64)
    (i64.xor (i64.const 0xFFFFFFFFFFFFFFFF) (get_local $rhs))
  )
  (func $system::core::u64.>>> (param $lhs i64) (param $rhs i64) (result i64)
    (i64.shr_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.>> (param $lhs i64) (param $rhs i64) (result i64)
    (i64.shr_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.<< (param $lhs i64) (param $rhs i64) (result i64)
    (i64.shl (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.^ (param $lhs i64) (param $rhs i64) (result i64)
    (i64.xor (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.>= (param $lhs i64) (param $rhs i64) (result i32)
    (i64.ge_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.<= (param $lhs i64) (param $rhs i64) (result i32)
    (i64.le_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.> (param $lhs i64) (param $rhs i64) (result i32)
    (i64.gt_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.< (param $lhs i64) (param $rhs i64) (result i32)
    (i64.lt_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.store (param $lhs i64) (param $rhs i64)
    (i64.store (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::u64.store_1 (param $lhs i64) (param $rhs i64) (param $offset i32)
    (i64.store (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::u64.load (param $lhs i64) (result i64)
    (i64.load (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::u64.load_1 (param $lhs i64) (param $offset i32) (result i64)
    (i64.load (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::f32.sizeOf (result i32)
    (i32.const 4)
  )
  (func $system::core::f32.allocationSize (result i32)
    (call $system::core::f32.sizeOf)
  )
  (func $system::core::f32.as (param $lhs f32) (result f64)
    (f64.promote/f32 (get_local $lhs))
  )
  (func $system::core::f32.as_1 (param $lhs f32) (result i64)
    (i64.trunc_s/f32 (get_local $lhs))
  )
  (func $system::core::f32.as_2 (param $lhs f32) (result i64)
    (i64.trunc_u/f32 (get_local $lhs))
  )
  (func $system::core::f32.as_3 (param $lhs f32) (result i32)
    (i32.trunc_s/f32 (get_local $lhs))
  )
  (func $system::core::f32.as_4 (param $lhs f32) (result i32)
    (i32.trunc_u/f32 (get_local $lhs))
  )
  (func $system::core::f32.+ (param $lhs f32) (param $rhs f32) (result f32)
    (f32.add (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f32.- (param $lhs f32) (param $rhs f32) (result f32)
    (f32.sub (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f32.* (param $lhs f32) (param $rhs f32) (result f32)
    (f32.mul (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f32./ (param $lhs f32) (param $rhs f32) (result f32)
    (f32.div (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f32.== (param $lhs f32) (param $rhs f32) (result i32)
    (f32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f32.>= (param $lhs f32) (param $rhs f32) (result i32)
    (f32.ge (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f32.<= (param $lhs f32) (param $rhs f32) (result i32)
    (f32.le (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f32.> (param $lhs f32) (param $rhs f32) (result i32)
    (f32.gt (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f32.< (param $lhs f32) (param $rhs f32) (result i32)
    (f32.lt (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f32.!= (param $lhs f32) (param $rhs f32) (result i32)
    (f32.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f32.store (param $lhs i64) (param $rhs f32)
    (f32.store (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::f32.store_1 (param $lhs i64) (param $rhs f32) (param $offset i32)
    (f32.store (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::f32.load (param $lhs i64) (result f32)
    (f32.load (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::f32.load_1 (param $lhs i64) (param $offset i32) (result f32)
    (f32.load (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::f64.sizeOf (result i32)
    (i32.const 8)
  )
  (func $system::core::f64.allocationSize (result i32)
    (call $system::core::f64.sizeOf)
  )
  (func $system::core::f64.+ (param $lhs f64) (param $rhs f64) (result f64)
    (f64.add (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f64.- (param $lhs f64) (param $rhs f64) (result f64)
    (f64.sub (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f64.* (param $lhs f64) (param $rhs f64) (result f64)
    (f64.mul (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f64./ (param $lhs f64) (param $rhs f64) (result f64)
    (f64.div (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f64.== (param $lhs f64) (param $rhs f64) (result i32)
    (f64.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f64.>= (param $lhs f64) (param $rhs f64) (result i32)
    (f64.ge (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f64.<= (param $lhs f64) (param $rhs f64) (result i32)
    (f64.le (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f64.> (param $lhs f64) (param $rhs f64) (result i32)
    (f64.gt (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f64.< (param $lhs f64) (param $rhs f64) (result i32)
    (f64.lt (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f64.!= (param $lhs f64) (param $rhs f64) (result i32)
    (f64.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f64.as (param $lhs f64) (result f32)
    (f32.demote/f64 (get_local $lhs))
  )
  (func $system::core::f64.as_1 (param $lhs f64) (result i64)
    (i64.trunc_s/f64 (get_local $lhs))
  )
  (func $system::core::f64.as_2 (param $lhs f64) (result i64)
    (i64.trunc_u/f64 (get_local $lhs))
  )
  (func $system::core::f64.as_3 (param $lhs f64) (result i32)
    (i32.trunc_s/f64 (get_local $lhs))
  )
  (func $system::core::f64.as_4 (param $lhs f64) (result i32)
    (i32.trunc_u/f64 (get_local $lhs))
  )
  (func $system::core::f64.store (param $lhs i64) (param $rhs f64)
    (f64.store (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::f64.store_1 (param $lhs i64) (param $rhs f64) (param $offset i32)
    (f64.store (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::f64.load (param $lhs i64) (result f64)
    (f64.load (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::f64.load_1 (param $lhs i64) (param $offset i32) (result f64)
    (f64.load (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::boolean.sizeOf (result i32)
    (i32.const 4)
  )
  (func $system::core::boolean.allocationSize (result i32)
    (call $system::core::boolean.sizeOf)
  )
  (func $system::core::boolean.&& (param $lhs i32) (param $rhs i32) (result i32)
    (i32.and (i32.ne (get_local $lhs) (i32.const 0)) (i32.ne (get_local $rhs) (i32.const 0)))
  )
  (func $system::core::boolean.== (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (i32.eqz (get_local $lhs)) (i32.eqz (get_local $rhs)))
  )
  (func $system::core::boolean.|| (param $lhs i32) (param $rhs i32) (result i32)
    (i32.or (i32.ne (get_local $lhs) (i32.const 0)) (i32.ne (get_local $rhs) (i32.const 0)))
  )
  (func $system::core::boolean.! (param $rhs i32) (result i32)
    (if $IF1 (result i32) (get_local $rhs)
      (then
        (i32.const 0)
      )
      (else
        (i32.const 1)
      )
    )
  )
  (func $system::core::boolean.store (param $lhs i64) (param $rhs i32)
    (i32.store (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::boolean.store_1 (param $lhs i64) (param $rhs i32) (param $offset i32)
    (i32.store (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::boolean.load (param $lhs i64) (result i32)
    (i32.load (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::boolean.load_1 (param $lhs i64) (param $offset i32) (result i32)
    (i32.load (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::ref.sizeOf (result i32)
    (i32.const 8)
  )
  (func $system::core::ref.allocationSize (result i32)
    (call $system::core::ref.sizeOf)
  )
  (func $system::core::ref.is (param $lhs i64) (result i32)
    (i32.const 1)
  )
  (func $system::core::ref.== (param $lhs i64) (param $rhs i64) (result i32)
    (i64.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::ref.!= (param $lhs i64) (param $rhs i64) (result i32)
    (call $system::core::boolean.! (call $system::core::ref.== (get_local $lhs) (get_local $rhs)))
  )
  (func $system::core::ref.store (param $lhs i64) (param $rhs i64)
    (i64.store (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::ref.store_1 (param $lhs i64) (param $rhs i64) (param $offset i32)
    (i64.store (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::ref.load (param $lhs i64) (result i64)
    (i64.load (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::ref.load_1 (param $lhs i64) (param $offset i32) (result i64)
    (i64.load (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::bytes.toAddr (param $str i64) (result i64)
    (get_local $str)
  )
  (func $system::core::bytes.as (param $lhs i64) (result i64)
    (get_local $lhs)
  )
  (func $system::core::bytes.property_length (param $str i64) (result i32)
    (call $system::core::i32.load (call $system::core::bytes.as (get_local $str)))
  )
  (func $system::core::bytes.property_ptr (param $str i64) (result i32)
    (block $B1 (result i32)
      (call $system::core::i32.+ (call $system::core::i64.as_3 (call $system::core::bytes.toAddr (get_local $str))) (i32.const 4))
    )
  )
  (func $system::core::bytes.store (param $lhs i64) (param $rhs i64)
    (i64.store (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::bytes.store_1 (param $lhs i64) (param $rhs i64) (param $offset i32)
    (i64.store (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::bytes.load (param $lhs i64) (result i64)
    (i64.load (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::bytes.load_1 (param $lhs i64) (param $offset i32) (result i64)
    (i64.load (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (export "keccak" (func $test/fixtures/compiler/1-wast-sha3.lys::keccak))
  (func $test/fixtures/compiler/1-wast-sha3.lys::keccak (param $input i64) (result i64)
    (block $B1 (result i64)
      (call $system::hash::keccak::keccak (get_local $input))
    )
  )
  (func $%%START%%
    (set_global $system::memory::AL_BITS (i32.const 3))
    (set_global $system::memory::AL_SIZE (call $system::core::i32.<< (i32.const 1) (get_global $system::memory::AL_BITS)))
    (set_global $system::memory::AL_MASK (call $system::core::i32.- (get_global $system::memory::AL_SIZE) (i32.const 1)))
    (set_global $system::memory::MAX_SIZE_32 (call $system::core::i32.<< (i32.const 1) (i32.const 30)))
    (set_global $system::memory::HEAP_BASE (i32.const 0))
    (set_global $system::memory::startOffset (call $system::core::i32.& (call $system::core::i32.+ (get_global $system::memory::HEAP_BASE) (get_global $system::memory::AL_MASK)) (call $system::core::i32.~ (get_global $system::memory::AL_MASK))))
    (set_global $system::memory::offset (get_global $system::memory::startOffset))
    (set_global $system::memory::lastPtr (i32.const 0))
  )
  (start $%%START%%)
)
