
|-DocumentNode
  |-ImportDirectiveNode
    |-QNameNode=system::core
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
  |-TypeDirectiveNode
    |-NameIdentifierNode="Enum" type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
    |-UnionTypeNode type=(type (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C))))
      |-ReferenceNode type=(type (alias A (struct A)))
        |-QNameNode=A
          |-NameIdentifierNode="A"
      |-ReferenceNode type=(type (alias B (struct B)))
        |-QNameNode=B
          |-NameIdentifierNode="B"
      |-ReferenceNode type=(type (alias C (struct C)))
        |-QNameNode=C
          |-NameIdentifierNode="C"
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=Enum
        |-NameIdentifierNode="Enum"
    |-OverloadedFunctionNode type=(fun "is" ((alias Enum)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "is" ((alias Enum)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
          |-ReferenceNode type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
            |-QNameNode=Enum
              |-NameIdentifierNode="Enum"
        |-NameIdentifierNode="is"
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-BlockNode type=(alias boolean (native boolean)) annotations=IsValueNode
          |-BinaryExpressionNode="||" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="||"
            |-BinaryExpressionNode="||" type=(alias boolean (native boolean)) annotations=IsValueNode
              |-NameIdentifierNode="||"
              |-IsExpressionNode=is type=(alias boolean (native boolean)) annotations=IsValueNode
                |-ReferenceNode type=(alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))) annotations=IsValueNode
                  |-QNameNode=a
                    |-NameIdentifierNode="a"
                |-ReferenceNode type=(type (alias A (struct A)))
                  |-QNameNode=A
                    |-NameIdentifierNode="A"
              |-IsExpressionNode=is type=(alias boolean (native boolean)) annotations=IsValueNode
                |-ReferenceNode type=(alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))) annotations=IsValueNode
                  |-QNameNode=a
                    |-NameIdentifierNode="a"
                |-ReferenceNode type=(type (alias B (struct B)))
                  |-QNameNode=B
                    |-NameIdentifierNode="B"
            |-IsExpressionNode=is type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))) annotations=IsValueNode
                |-QNameNode=a
                  |-NameIdentifierNode="a"
              |-ReferenceNode type=(type (alias C (struct C)))
                |-QNameNode=C
                  |-NameIdentifierNode="C"
      |-NameIdentifierNode="is" type=(fun "is" ((alias Enum)) (alias boolean))
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=A
        |-NameIdentifierNode="A"
    |-OverloadedFunctionNode type=(fun "as" ((alias A)) (alias Enum)) annotations=Injected
      |-FunctionNode type=(fun "as" ((alias A)) (alias Enum))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias A (struct A))
          |-ReferenceNode type=(type (alias A (struct A)))
            |-QNameNode=A
              |-NameIdentifierNode="A"
        |-NameIdentifierNode="as"
        |-ReferenceNode type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
          |-QNameNode=Enum
            |-NameIdentifierNode="Enum"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=get_local
            |-QNameNode=$a
              |-NameIdentifierNode="$a"
      |-NameIdentifierNode="as" type=(fun "as" ((alias A)) (alias Enum))
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=B
        |-NameIdentifierNode="B"
    |-OverloadedFunctionNode type=(fun "as" ((alias B)) (alias Enum)) annotations=Injected
      |-FunctionNode type=(fun "as" ((alias B)) (alias Enum))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias B (struct B))
          |-ReferenceNode type=(type (alias B (struct B)))
            |-QNameNode=B
              |-NameIdentifierNode="B"
        |-NameIdentifierNode="as"
        |-ReferenceNode type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
          |-QNameNode=Enum
            |-NameIdentifierNode="Enum"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=get_local
            |-QNameNode=$a
              |-NameIdentifierNode="$a"
      |-NameIdentifierNode="as" type=(fun "as" ((alias B)) (alias Enum))
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=C
        |-NameIdentifierNode="C"
    |-OverloadedFunctionNode type=(fun "as" ((alias C)) (alias Enum)) annotations=Injected
      |-FunctionNode type=(fun "as" ((alias C)) (alias Enum))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias C (struct C))
          |-ReferenceNode type=(type (alias C (struct C)))
            |-QNameNode=C
              |-NameIdentifierNode="C"
        |-NameIdentifierNode="as"
        |-ReferenceNode type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
          |-QNameNode=Enum
            |-NameIdentifierNode="Enum"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=get_local
            |-QNameNode=$a
              |-NameIdentifierNode="$a"
      |-NameIdentifierNode="as" type=(fun "as" ((alias C)) (alias Enum))
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=Enum
        |-NameIdentifierNode="Enum"
    |-OverloadedFunctionNode type=(intersection (fun "as" ((union (alias A) (alias B) (alias C))) (alias Enum)) (fun "as" ((alias Enum)) (alias ref))) annotations=Injected
      |-FunctionNode type=(fun "as" ((union (alias A) (alias B) (alias C))) (alias Enum))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))
          |-UnionTypeNode type=(type (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C))))
            |-ReferenceNode type=(type (alias A (struct A)))
              |-QNameNode=A
                |-NameIdentifierNode="A"
            |-ReferenceNode type=(type (alias B (struct B)))
              |-QNameNode=B
                |-NameIdentifierNode="B"
            |-ReferenceNode type=(type (alias C (struct C)))
              |-QNameNode=C
                |-NameIdentifierNode="C"
        |-NameIdentifierNode="as"
        |-ReferenceNode type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
          |-QNameNode=Enum
            |-NameIdentifierNode="Enum"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=get_local
            |-QNameNode=$a
              |-NameIdentifierNode="$a"
      |-FunctionNode type=(fun "as" ((alias Enum)) (alias ref))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
          |-ReferenceNode type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
            |-QNameNode=Enum
              |-NameIdentifierNode="Enum"
        |-NameIdentifierNode="as"
        |-ReferenceNode type=(type (alias ref (ref ?)))
          |-QNameNode=ref
            |-NameIdentifierNode="ref"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=get_local
            |-QNameNode=$a
              |-NameIdentifierNode="$a"
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((union (alias A) (alias B) (alias C))) (alias Enum)) (fun "as" ((alias Enum)) (alias ref)))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="A" type=(type (alias A (struct A)))
    |-UnknownExpressionNode
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=A
        |-NameIdentifierNode="A"
    |-OverloadedFunctionNode type=(fun "apply" () (alias A)) annotations=Injected
      |-FunctionNode type=(fun "apply" () (alias A))
        |-NameIdentifierNode="apply"
        |-ReferenceNode type=(type (alias A (struct A)))
          |-QNameNode=A
            |-NameIdentifierNode="A"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.const
            |-HexLiteral=0x200000000
      |-NameIdentifierNode="apply" type=(fun "apply" () (alias A))
    |-OverloadedFunctionNode type=(fun "is" ((alias A)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "is" ((alias A)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(type (alias A (struct A)))
          |-ReferenceNode type=(type (alias A (struct A)))
            |-QNameNode=A
              |-NameIdentifierNode="A"
        |-NameIdentifierNode="is"
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=i64.and
              |-WasmAtomNode=i64.const
                |-HexLiteral=0xffffffff00000000
              |-WasmAtomNode=get_local
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
            |-WasmAtomNode=i64.const
              |-HexLiteral=0x200000000
      |-NameIdentifierNode="is" type=(fun "is" ((alias A)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "==" ((alias A) (alias ref)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "==" ((alias A) (alias ref)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias A (struct A))
          |-ReferenceNode type=(type (alias A (struct A)))
            |-QNameNode=A
              |-NameIdentifierNode="A"
        |-ParameterNode
          |-NameIdentifierNode="b" type=(alias ref (ref ?))
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
        |-NameIdentifierNode="=="
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=get_local
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
            |-WasmAtomNode=get_local
              |-QNameNode=$b
                |-NameIdentifierNode="$b"
      |-NameIdentifierNode="==" type=(fun "==" ((alias A) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "!=" ((alias A) (alias ref)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "!=" ((alias A) (alias ref)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias A (struct A))
          |-ReferenceNode type=(type (alias A (struct A)))
            |-QNameNode=A
              |-NameIdentifierNode="A"
        |-ParameterNode
          |-NameIdentifierNode="b" type=(alias ref (ref ?))
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
        |-NameIdentifierNode="!="
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.ne
            |-WasmAtomNode=get_local
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
            |-WasmAtomNode=get_local
              |-QNameNode=$b
                |-NameIdentifierNode="$b"
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias A) (alias ref)) (alias boolean))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="B" type=(type (alias B (struct B)))
    |-UnknownExpressionNode
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=B
        |-NameIdentifierNode="B"
    |-OverloadedFunctionNode type=(fun "apply" () (alias B)) annotations=Injected
      |-FunctionNode type=(fun "apply" () (alias B))
        |-NameIdentifierNode="apply"
        |-ReferenceNode type=(type (alias B (struct B)))
          |-QNameNode=B
            |-NameIdentifierNode="B"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.const
            |-HexLiteral=0x300000000
      |-NameIdentifierNode="apply" type=(fun "apply" () (alias B))
    |-OverloadedFunctionNode type=(fun "is" ((alias B)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "is" ((alias B)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(type (alias B (struct B)))
          |-ReferenceNode type=(type (alias B (struct B)))
            |-QNameNode=B
              |-NameIdentifierNode="B"
        |-NameIdentifierNode="is"
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=i64.and
              |-WasmAtomNode=i64.const
                |-HexLiteral=0xffffffff00000000
              |-WasmAtomNode=get_local
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
            |-WasmAtomNode=i64.const
              |-HexLiteral=0x300000000
      |-NameIdentifierNode="is" type=(fun "is" ((alias B)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "==" ((alias B) (alias ref)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "==" ((alias B) (alias ref)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias B (struct B))
          |-ReferenceNode type=(type (alias B (struct B)))
            |-QNameNode=B
              |-NameIdentifierNode="B"
        |-ParameterNode
          |-NameIdentifierNode="b" type=(alias ref (ref ?))
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
        |-NameIdentifierNode="=="
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=get_local
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
            |-WasmAtomNode=get_local
              |-QNameNode=$b
                |-NameIdentifierNode="$b"
      |-NameIdentifierNode="==" type=(fun "==" ((alias B) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "!=" ((alias B) (alias ref)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "!=" ((alias B) (alias ref)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias B (struct B))
          |-ReferenceNode type=(type (alias B (struct B)))
            |-QNameNode=B
              |-NameIdentifierNode="B"
        |-ParameterNode
          |-NameIdentifierNode="b" type=(alias ref (ref ?))
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
        |-NameIdentifierNode="!="
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.ne
            |-WasmAtomNode=get_local
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
            |-WasmAtomNode=get_local
              |-QNameNode=$b
                |-NameIdentifierNode="$b"
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias B) (alias ref)) (alias boolean))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="C" type=(type (alias C (struct C)))
    |-UnknownExpressionNode
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=C
        |-NameIdentifierNode="C"
    |-OverloadedFunctionNode type=(fun "apply" () (alias C)) annotations=Injected
      |-FunctionNode type=(fun "apply" () (alias C))
        |-NameIdentifierNode="apply"
        |-ReferenceNode type=(type (alias C (struct C)))
          |-QNameNode=C
            |-NameIdentifierNode="C"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.const
            |-HexLiteral=0x400000000
      |-NameIdentifierNode="apply" type=(fun "apply" () (alias C))
    |-OverloadedFunctionNode type=(fun "is" ((alias C)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "is" ((alias C)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(type (alias C (struct C)))
          |-ReferenceNode type=(type (alias C (struct C)))
            |-QNameNode=C
              |-NameIdentifierNode="C"
        |-NameIdentifierNode="is"
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=i64.and
              |-WasmAtomNode=i64.const
                |-HexLiteral=0xffffffff00000000
              |-WasmAtomNode=get_local
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
            |-WasmAtomNode=i64.const
              |-HexLiteral=0x400000000
      |-NameIdentifierNode="is" type=(fun "is" ((alias C)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "==" ((alias C) (alias ref)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "==" ((alias C) (alias ref)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias C (struct C))
          |-ReferenceNode type=(type (alias C (struct C)))
            |-QNameNode=C
              |-NameIdentifierNode="C"
        |-ParameterNode
          |-NameIdentifierNode="b" type=(alias ref (ref ?))
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
        |-NameIdentifierNode="=="
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=get_local
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
            |-WasmAtomNode=get_local
              |-QNameNode=$b
                |-NameIdentifierNode="$b"
      |-NameIdentifierNode="==" type=(fun "==" ((alias C) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "!=" ((alias C) (alias ref)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "!=" ((alias C) (alias ref)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias C (struct C))
          |-ReferenceNode type=(type (alias C (struct C)))
            |-QNameNode=C
              |-NameIdentifierNode="C"
        |-ParameterNode
          |-NameIdentifierNode="b" type=(alias ref (ref ?))
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
        |-NameIdentifierNode="!="
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.ne
            |-WasmAtomNode=get_local
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
            |-WasmAtomNode=get_local
              |-QNameNode=$b
                |-NameIdentifierNode="$b"
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias C) (alias ref)) (alias boolean))
  |-VarDirectiveNode
    |-VarDeclarationNode
      |-NameIdentifierNode="value1" type=(alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C))))
      |-ReferenceNode type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
        |-QNameNode=Enum
          |-NameIdentifierNode="Enum"
      |-ReferenceNode type=(alias A (struct A)) annotations=IsValueNode,ImplicitCall
        |-QNameNode=A
          |-NameIdentifierNode="A"
  |-VarDirectiveNode
    |-VarDeclarationNode
      |-NameIdentifierNode="value2" type=(union (alias A (struct A)) (alias B (struct B)))
      |-UnionTypeNode type=(type (union (alias A (struct A)) (alias B (struct B))))
        |-ReferenceNode type=(type (alias A (struct A)))
          |-QNameNode=A
            |-NameIdentifierNode="A"
        |-ReferenceNode type=(type (alias B (struct B)))
          |-QNameNode=B
            |-NameIdentifierNode="B"
      |-ReferenceNode type=(alias A (struct A)) annotations=IsValueNode,ImplicitCall
        |-QNameNode=A
          |-NameIdentifierNode="A"
  |-VarDirectiveNode
    |-VarDeclarationNode
      |-NameIdentifierNode="value3" type=(alias A (struct A))
      |-ReferenceNode type=(type (alias A (struct A)))
        |-QNameNode=A
          |-NameIdentifierNode="A"
      |-ReferenceNode type=(alias A (struct A)) annotations=IsValueNode,ImplicitCall
        |-QNameNode=A
          |-NameIdentifierNode="A"
  |-OverloadedFunctionNode type=(fun "identity" ((alias ref)) (alias ref)) annotations=Injected
    |-FunctionNode type=(fun "identity" ((alias ref)) (alias ref))
      |-ParameterNode
        |-NameIdentifierNode="a" type=(alias ref (ref ?))
        |-ReferenceNode type=(type (alias ref (ref ?)))
          |-QNameNode=ref
            |-NameIdentifierNode="ref"
      |-NameIdentifierNode="identity"
      |-ReferenceNode type=(type (alias ref (ref ?)))
        |-QNameNode=ref
          |-NameIdentifierNode="ref"
      |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode
        |-QNameNode=a
          |-NameIdentifierNode="a"
    |-NameIdentifierNode="identity" type=(fun "identity" ((alias ref)) (alias ref))
  |-OverloadedFunctionNode type=(fun "test" () (alias void)) annotations=Injected
    |-FunctionNode type=(fun "test" () (alias void))
      |-NameIdentifierNode="test"
      |-ReferenceNode type=(type (alias void (void)))
        |-QNameNode=void
          |-NameIdentifierNode="void"
      |-BlockNode type=(void)
        |-VarDeclarationNode type=(void)
          |-NameIdentifierNode="x1" type=(alias boolean (native boolean))
          |-IsExpressionNode=is type=(alias boolean (native boolean)) annotations=IsValueNode
            |-ReferenceNode type=(alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))) annotations=IsValueNode
              |-QNameNode=value1
                |-NameIdentifierNode="value1"
            |-ReferenceNode type=(type (alias A (struct A)))
              |-QNameNode=A
                |-NameIdentifierNode="A"
        |-VarDeclarationNode type=(void)
          |-NameIdentifierNode="y1" type=(alias boolean (native boolean))
          |-IsExpressionNode=is type=(alias boolean (native boolean)) annotations=IsValueNode
            |-ReferenceNode type=(alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))) annotations=IsValueNode
              |-QNameNode=value1
                |-NameIdentifierNode="value1"
            |-ReferenceNode type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
              |-QNameNode=Enum
                |-NameIdentifierNode="Enum"
        |-VarDeclarationNode type=(void)
          |-NameIdentifierNode="z1" type=(alias boolean (native boolean))
          |-IsExpressionNode=is type=(alias boolean (native boolean)) annotations=IsValueNode
            |-ReferenceNode type=(alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))) annotations=IsValueNode
              |-QNameNode=value1
                |-NameIdentifierNode="value1"
            |-ReferenceNode type=(type (alias B (struct B)))
              |-QNameNode=B
                |-NameIdentifierNode="B"
        |-VarDeclarationNode type=(void)
          |-NameIdentifierNode="x2" type=(alias boolean (native boolean))
          |-IsExpressionNode=is type=(alias boolean (native boolean)) annotations=IsValueNode
            |-ReferenceNode type=(union (alias A (struct A)) (alias B (struct B))) annotations=IsValueNode
              |-QNameNode=value2
                |-NameIdentifierNode="value2"
            |-ReferenceNode type=(type (alias A (struct A)))
              |-QNameNode=A
                |-NameIdentifierNode="A"
        |-VarDeclarationNode type=(void)
          |-NameIdentifierNode="y2" type=(alias boolean (native boolean))
          |-IsExpressionNode=is type=(alias boolean (native boolean)) annotations=IsValueNode
            |-ReferenceNode type=(union (alias A (struct A)) (alias B (struct B))) annotations=IsValueNode
              |-QNameNode=value2
                |-NameIdentifierNode="value2"
            |-ReferenceNode type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
              |-QNameNode=Enum
                |-NameIdentifierNode="Enum"
        |-VarDeclarationNode type=(void)
          |-NameIdentifierNode="z2" type=(alias boolean (native boolean))
          |-IsExpressionNode=is type=(alias boolean (native boolean)) annotations=IsValueNode
            |-ReferenceNode type=(union (alias A (struct A)) (alias B (struct B))) annotations=IsValueNode
              |-QNameNode=value2
                |-NameIdentifierNode="value2"
            |-ReferenceNode type=(type (alias B (struct B)))
              |-QNameNode=B
                |-NameIdentifierNode="B"
        |-VarDeclarationNode type=(void)
          |-NameIdentifierNode="x3" type=(alias boolean (native boolean))
          |-IsExpressionNode=is type=(alias boolean (native boolean)) annotations=IsValueNode
            |-ReferenceNode type=(alias A (struct A)) annotations=IsValueNode
              |-QNameNode=value3
                |-NameIdentifierNode="value3"
            |-ReferenceNode type=(type (alias A (struct A)))
              |-QNameNode=A
                |-NameIdentifierNode="A"
        |-VarDeclarationNode type=(void)
          |-NameIdentifierNode="y3" type=(alias boolean (native boolean))
          |-IsExpressionNode=is type=(alias boolean (native boolean)) annotations=IsValueNode
            |-ReferenceNode type=(alias A (struct A)) annotations=IsValueNode
              |-QNameNode=value3
                |-NameIdentifierNode="value3"
            |-ReferenceNode type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
              |-QNameNode=Enum
                |-NameIdentifierNode="Enum"
        |-VarDeclarationNode type=(void)
          |-NameIdentifierNode="z3" type=(alias boolean (native boolean))
          |-IsExpressionNode=is type=(alias boolean (native boolean)) annotations=IsValueNode
            |-FunctionCallNode type=(alias ref (ref ?)) annotations=IsValueNode
              |-ReferenceNode type=(fun "identity" ((alias ref)) (alias ref))
                |-QNameNode=identity
                  |-NameIdentifierNode="identity"
              |-ReferenceNode type=(alias A (struct A)) annotations=IsValueNode
                |-QNameNode=value3
                  |-NameIdentifierNode="value3"
            |-ReferenceNode type=(type (alias B (struct B)))
              |-QNameNode=B
                |-NameIdentifierNode="B"
    |-NameIdentifierNode="test" type=(fun "test" () (alias void))