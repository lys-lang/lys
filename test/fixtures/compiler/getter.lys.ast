
|-DocumentNode
  |-ImportDirectiveNode
    |-QNameNode=system::core
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Color" type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
    |-StructTypeNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
      |-ParameterNode
        |-NameIdentifierNode="r"
        |-ReferenceNode
          |-QNameNode=i32
            |-NameIdentifierNode="i32"
      |-ParameterNode
        |-NameIdentifierNode="g"
        |-ReferenceNode
          |-QNameNode=i32
            |-NameIdentifierNode="i32"
      |-ParameterNode
        |-NameIdentifierNode="b"
        |-ReferenceNode
          |-QNameNode=i32
            |-NameIdentifierNode="i32"
  |-ImplDirective
    |-ReferenceNode
      |-QNameNode=Color
        |-NameIdentifierNode="Color"
    |-OverloadedFunctionNode type=(fun "Color$discriminant" () (alias u64)) annotations=Injected
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "Color$discriminant" () (alias u64)) annotations=IsOverloaded
          |-NameIdentifierNode="Color$discriminant" annotations=Inline
          |-ReferenceNode type=(type (alias u64 (native u64)))
            |-QNameNode=u64
              |-NameIdentifierNode="u64"
          |-BlockNode type=(alias u64 (native u64)) annotations=IsValueNode
            |-ValDeclarationNode type=(native void) annotations=Local(test/fixtures/compiler/getter.lys::discriminant:u32#0)
              |-NameIdentifierNode="discriminant" type=(alias u32 (native u32))
              |-ReferenceNode type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
              |-MemberNode type=(native u32) annotations=IsValueNode
                |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
                  |-QNameNode=Color
                    |-NameIdentifierNode="Color"
                |-NameIdentifierNode="discriminant"
            |-BinaryExpressionNode=(fun "<<" ((alias u64) (alias i32)) (alias u64)) type=(alias u64 (native u64)) annotations=IsValueNode,IsReturnExpression
              |-NameIdentifierNode="<<"
              |-AsExpressionNode=(fun "as" ((alias u32)) (alias u64)) type=(alias u64 (native u64)) annotations=IsValueNode
                |-ReferenceNode type=(alias u32 (native u32)) annotations=IsValueNode,Local(test/fixtures/compiler/getter.lys::discriminant:u32#0)
                  |-QNameNode=discriminant
                    |-NameIdentifierNode="discriminant"
                |-ReferenceNode type=(type (alias u64 (native u64)))
                  |-QNameNode=u64
                    |-NameIdentifierNode="u64"
              |-IntegerLiteral=32 type=(alias i32 (native i32)) annotations=IsValueNode
      |-NameIdentifierNode="Color$discriminant" type=(fun "Color$discriminant" () (alias u64))
    |-OverloadedFunctionNode type=(fun "apply" ((alias i32) (alias i32) (alias i32)) (alias Color)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "apply" ((alias i32) (alias i32) (alias i32)) (alias Color)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(r:i32#0)
            |-NameIdentifierNode="r" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-ParameterNode annotations=Local(g:i32#1)
            |-NameIdentifierNode="g" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-ParameterNode annotations=Local(b:i32#2)
            |-NameIdentifierNode="b" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-NameIdentifierNode="apply"
          |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
          |-BlockNode type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode
            |-VarDeclarationNode type=(native void) annotations=Local(test/fixtures/compiler/getter.lys::$ref:Color#3)
              |-NameIdentifierNode="$ref" type=(alias Color (struct r:<null> g:<null> b:<null>))
              |-FunctionCallNode=(fun "fromPointer" ((alias u32)) (alias Color)) type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode
                |-ReferenceNode type=(fun "fromPointer" ((alias u32)) (alias Color))
                  |-QNameNode=fromPointer
                    |-NameIdentifierNode="fromPointer"
                |-FunctionCallNode=(fun "calloc" ((alias u32) (alias u32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
                  |-ReferenceNode type=(fun "calloc" ((alias u32) (alias u32)) (alias u32))
                    |-QNameNode=system::memory::calloc
                      |-NameIdentifierNode="system"
                      |-NameIdentifierNode="memory"
                      |-NameIdentifierNode="calloc"
                  |-AsExpressionNode=(fun "as" ((alias i32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
                    |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
                    |-ReferenceNode type=(type (alias u32 (native u32)))
                      |-QNameNode=u32
                        |-NameIdentifierNode="u32"
                  |-MemberNode type=(native u32) annotations=IsValueNode
                    |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
                      |-QNameNode=Color
                        |-NameIdentifierNode="Color"
                    |-NameIdentifierNode="allocationSize"
            |-FunctionCallNode=(fun "property$0" ((alias Color) (alias i32)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "property$0" ((alias Color)) (alias i32)) (fun "property$0" ((alias Color) (alias i32)) (alias void)))
                |-QNameNode=property$0
                  |-NameIdentifierNode="property$0"
              |-ReferenceNode type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(test/fixtures/compiler/getter.lys::$ref:Color#3)
                |-QNameNode=$ref
                  |-NameIdentifierNode="$ref"
              |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(r:i32#0)
                |-QNameNode=r
                  |-NameIdentifierNode="r"
            |-FunctionCallNode=(fun "property$1" ((alias Color) (alias i32)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "property$1" ((alias Color)) (alias i32)) (fun "property$1" ((alias Color) (alias i32)) (alias void)))
                |-QNameNode=property$1
                  |-NameIdentifierNode="property$1"
              |-ReferenceNode type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(test/fixtures/compiler/getter.lys::$ref:Color#3)
                |-QNameNode=$ref
                  |-NameIdentifierNode="$ref"
              |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(g:i32#1)
                |-QNameNode=g
                  |-NameIdentifierNode="g"
            |-FunctionCallNode=(fun "property$2" ((alias Color) (alias i32)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "property$2" ((alias Color)) (alias i32)) (fun "property$2" ((alias Color) (alias i32)) (alias void)))
                |-QNameNode=property$2
                  |-NameIdentifierNode="property$2"
              |-ReferenceNode type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(test/fixtures/compiler/getter.lys::$ref:Color#3)
                |-QNameNode=$ref
                  |-NameIdentifierNode="$ref"
              |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(b:i32#2)
                |-QNameNode=b
                  |-NameIdentifierNode="b"
            |-ReferenceNode type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,IsReturnExpression,Local(test/fixtures/compiler/getter.lys::$ref:Color#3)
              |-QNameNode=$ref
                |-NameIdentifierNode="$ref"
      |-NameIdentifierNode="apply" type=(fun "apply" ((alias i32) (alias i32) (alias i32)) (alias Color))
    |-OverloadedFunctionNode type=(fun "fromPointer" ((alias u32)) (alias Color)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "fromPointer" ((alias u32)) (alias Color)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(ptr:u32#0)
            |-NameIdentifierNode="ptr" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="fromPointer"
          |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-ReferenceNode type=(fun "Color$discriminant" () (alias u64))
                  |-QNameNode=Color$discriminant
                    |-NameIdentifierNode="Color$discriminant"
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$ptr
                    |-NameIdentifierNode="$ptr"
      |-NameIdentifierNode="fromPointer" type=(fun "fromPointer" ((alias u32)) (alias Color))
    |-OverloadedFunctionNode type=(fun "==" ((alias Color) (alias Color)) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "==" ((alias Color) (alias Color)) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Color#0)
            |-NameIdentifierNode="a" type=(alias Color (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-ParameterNode annotations=Local(b:Color#1)
            |-NameIdentifierNode="b" type=(alias Color (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-NameIdentifierNode="=="
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
      |-NameIdentifierNode="==" type=(fun "==" ((alias Color) (alias Color)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "!=" ((alias Color) (alias Color)) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "!=" ((alias Color) (alias Color)) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Color#0)
            |-NameIdentifierNode="a" type=(alias Color (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-ParameterNode annotations=Local(b:Color#1)
            |-NameIdentifierNode="b" type=(alias Color (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-NameIdentifierNode="!="
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias Color) (alias Color)) (alias boolean))
    |-OverloadedFunctionNode type=(intersection (fun "property_r" ((alias Color)) (alias i32)) (fun "property_r" ((alias Color) (alias i32)) (alias void))) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_r" ((alias Color)) (alias i32)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Color#0)
            |-NameIdentifierNode="self" type=(alias Color (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-NameIdentifierNode="property_r"
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "property$0" ((alias Color)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode type=(intersection (fun "property$0" ((alias Color)) (alias i32)) (fun "property$0" ((alias Color) (alias i32)) (alias void)))
              |-QNameNode=property$0
                |-NameIdentifierNode="property$0"
            |-ReferenceNode type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Color#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_r" ((alias Color) (alias i32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Color#0)
            |-NameIdentifierNode="self" type=(alias Color (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-NameIdentifierNode="property_r"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "property$0" ((alias Color) (alias i32)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "property$0" ((alias Color)) (alias i32)) (fun "property$0" ((alias Color) (alias i32)) (alias void)))
              |-QNameNode=property$0
                |-NameIdentifierNode="property$0"
            |-ReferenceNode type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Color#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
      |-NameIdentifierNode="property_r" type=(intersection (fun "property_r" ((alias Color)) (alias i32)) (fun "property_r" ((alias Color) (alias i32)) (alias void)))
    |-OverloadedFunctionNode type=(intersection (fun "property$0" ((alias Color)) (alias i32)) (fun "property$0" ((alias Color) (alias i32)) (alias void))) annotations=Injected
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$0" ((alias Color)) (alias i32)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Color#0)
            |-NameIdentifierNode="self" type=(alias Color (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-NameIdentifierNode="property$0" annotations=Inline
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "load" ((alias ref) (alias u32)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="load"
            |-ReferenceNode type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Color#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
                |-QNameNode=Color
                  |-NameIdentifierNode="Color"
              |-NameIdentifierNode="property$0_offset"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$0" ((alias Color) (alias i32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Color#0)
            |-NameIdentifierNode="self" type=(alias Color (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-NameIdentifierNode="property$0" annotations=Inline
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)) type=(alias void (native void))
            |-MemberNode type=(intersection (fun "store" ((alias ref) (alias i32)) (alias void)) (fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="store"
            |-ReferenceNode type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Color#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
                |-QNameNode=Color
                  |-NameIdentifierNode="Color"
              |-NameIdentifierNode="property$0_offset"
      |-NameIdentifierNode="property$0" type=(intersection (fun "property$0" ((alias Color)) (alias i32)) (fun "property$0" ((alias Color) (alias i32)) (alias void)))
    |-OverloadedFunctionNode type=(intersection (fun "property_g" ((alias Color)) (alias i32)) (fun "property_g" ((alias Color) (alias i32)) (alias void))) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_g" ((alias Color)) (alias i32)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Color#0)
            |-NameIdentifierNode="self" type=(alias Color (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-NameIdentifierNode="property_g"
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "property$1" ((alias Color)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode type=(intersection (fun "property$1" ((alias Color)) (alias i32)) (fun "property$1" ((alias Color) (alias i32)) (alias void)))
              |-QNameNode=property$1
                |-NameIdentifierNode="property$1"
            |-ReferenceNode type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Color#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_g" ((alias Color) (alias i32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Color#0)
            |-NameIdentifierNode="self" type=(alias Color (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-NameIdentifierNode="property_g"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "property$1" ((alias Color) (alias i32)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "property$1" ((alias Color)) (alias i32)) (fun "property$1" ((alias Color) (alias i32)) (alias void)))
              |-QNameNode=property$1
                |-NameIdentifierNode="property$1"
            |-ReferenceNode type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Color#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
      |-NameIdentifierNode="property_g" type=(intersection (fun "property_g" ((alias Color)) (alias i32)) (fun "property_g" ((alias Color) (alias i32)) (alias void)))
    |-OverloadedFunctionNode type=(intersection (fun "property$1" ((alias Color)) (alias i32)) (fun "property$1" ((alias Color) (alias i32)) (alias void))) annotations=Injected
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$1" ((alias Color)) (alias i32)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Color#0)
            |-NameIdentifierNode="self" type=(alias Color (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-NameIdentifierNode="property$1" annotations=Inline
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "load" ((alias ref) (alias u32)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="load"
            |-ReferenceNode type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Color#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
                |-QNameNode=Color
                  |-NameIdentifierNode="Color"
              |-NameIdentifierNode="property$1_offset"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$1" ((alias Color) (alias i32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Color#0)
            |-NameIdentifierNode="self" type=(alias Color (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-NameIdentifierNode="property$1" annotations=Inline
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)) type=(alias void (native void))
            |-MemberNode type=(intersection (fun "store" ((alias ref) (alias i32)) (alias void)) (fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="store"
            |-ReferenceNode type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Color#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
                |-QNameNode=Color
                  |-NameIdentifierNode="Color"
              |-NameIdentifierNode="property$1_offset"
      |-NameIdentifierNode="property$1" type=(intersection (fun "property$1" ((alias Color)) (alias i32)) (fun "property$1" ((alias Color) (alias i32)) (alias void)))
    |-OverloadedFunctionNode type=(intersection (fun "property_b" ((alias Color)) (alias i32)) (fun "property_b" ((alias Color) (alias i32)) (alias void))) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_b" ((alias Color)) (alias i32)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Color#0)
            |-NameIdentifierNode="self" type=(alias Color (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-NameIdentifierNode="property_b"
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "property$2" ((alias Color)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode type=(intersection (fun "property$2" ((alias Color)) (alias i32)) (fun "property$2" ((alias Color) (alias i32)) (alias void)))
              |-QNameNode=property$2
                |-NameIdentifierNode="property$2"
            |-ReferenceNode type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Color#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_b" ((alias Color) (alias i32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Color#0)
            |-NameIdentifierNode="self" type=(alias Color (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-NameIdentifierNode="property_b"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "property$2" ((alias Color) (alias i32)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "property$2" ((alias Color)) (alias i32)) (fun "property$2" ((alias Color) (alias i32)) (alias void)))
              |-QNameNode=property$2
                |-NameIdentifierNode="property$2"
            |-ReferenceNode type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Color#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
      |-NameIdentifierNode="property_b" type=(intersection (fun "property_b" ((alias Color)) (alias i32)) (fun "property_b" ((alias Color) (alias i32)) (alias void)))
    |-OverloadedFunctionNode type=(intersection (fun "property$2" ((alias Color)) (alias i32)) (fun "property$2" ((alias Color) (alias i32)) (alias void))) annotations=Injected
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$2" ((alias Color)) (alias i32)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Color#0)
            |-NameIdentifierNode="self" type=(alias Color (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-NameIdentifierNode="property$2" annotations=Inline
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "load" ((alias ref) (alias u32)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="load"
            |-ReferenceNode type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Color#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
                |-QNameNode=Color
                  |-NameIdentifierNode="Color"
              |-NameIdentifierNode="property$2_offset"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$2" ((alias Color) (alias i32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Color#0)
            |-NameIdentifierNode="self" type=(alias Color (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-NameIdentifierNode="property$2" annotations=Inline
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)) type=(alias void (native void))
            |-MemberNode type=(intersection (fun "store" ((alias ref) (alias i32)) (alias void)) (fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="store"
            |-ReferenceNode type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Color#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
                |-QNameNode=Color
                  |-NameIdentifierNode="Color"
              |-NameIdentifierNode="property$2_offset"
      |-NameIdentifierNode="property$2" type=(intersection (fun "property$2" ((alias Color)) (alias i32)) (fun "property$2" ((alias Color) (alias i32)) (alias void)))
    |-OverloadedFunctionNode type=(fun "is" ((union (alias Color) (alias ref))) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "is" ((union (alias Color) (alias ref))) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Color | ref#0)
            |-NameIdentifierNode="a" type=(union (alias Color (struct r:<null> g:<null> b:<null>)) (alias ref (ref ?)))
            |-UnionTypeNode type=(type (union (alias Color (struct r:<null> g:<null> b:<null>)) (alias ref (ref ?))))
              |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
                |-QNameNode=Color
                  |-NameIdentifierNode="Color"
              |-ReferenceNode type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-NameIdentifierNode="is"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-HexLiteral=18446744069414584000
                |-WasmAtomNode
                  |-QNameNode=$a
                    |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-ReferenceNode type=(fun "Color$discriminant" () (alias u64))
                  |-QNameNode=Color$discriminant
                    |-NameIdentifierNode="Color$discriminant"
      |-NameIdentifierNode="is" type=(fun "is" ((union (alias Color) (alias ref))) (alias boolean))
    |-OverloadedFunctionNode type=(fun "store" ((alias ref) (alias Color) (alias u32)) (alias void)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "store" ((alias ref) (alias Color) (alias u32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:Color#1)
            |-NameIdentifierNode="rhs" type=(alias Color (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="store"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
      |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Color) (alias u32)) (alias void))
    |-OverloadedFunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Color)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Color)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="load"
          |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
      |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Color))
    |-OverloadedFunctionNode type=(fun "as" ((alias Color)) (alias ref)) annotations=Injected
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode type=(fun "as" ((alias Color)) (alias ref)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:Color#0)
            |-NameIdentifierNode="lhs" type=(alias Color (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-NameIdentifierNode="as" annotations=Explicit
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-NameIdentifierNode="as" type=(fun "as" ((alias Color)) (alias ref))
  |-OverloadedFunctionNode type=(fun "main" ((alias Color)) (alias i32)) annotations=Injected
    |-FunDirectiveNode
      |-DecoratorNode
        |-NameIdentifierNode="export"
      |-FunctionNode type=(fun "main" ((alias Color)) (alias i32)) annotations=IsOverloaded
        |-ParameterNode annotations=Local(color:Color#0)
          |-NameIdentifierNode="color" type=(alias Color (struct r:<null> g:<null> b:<null>))
          |-ReferenceNode type=(type (alias Color (struct r:<null> g:<null> b:<null>)))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
        |-NameIdentifierNode="main" annotations=Export
        |-ReferenceNode type=(type (alias i32 (native i32)))
          |-QNameNode=i32
            |-NameIdentifierNode="i32"
        |-BinaryExpressionNode=(fun "|" ((alias i32) (alias i32)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
          |-NameIdentifierNode="|"
          |-BinaryExpressionNode=(fun "|" ((alias i32) (alias i32)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode
            |-NameIdentifierNode="|"
            |-BinaryExpressionNode=(fun "*" ((alias i32) (alias i32)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode
              |-NameIdentifierNode="*"
              |-MemberNode type=(alias i32 (native i32)) annotations=IsValueNode,ImplicitCall(fun "property_r" ((alias Color)) (alias i32))
                |-ReferenceNode type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=Local(color:Color#0)
                  |-QNameNode=color
                    |-NameIdentifierNode="color"
                |-NameIdentifierNode="r"
              |-HexLiteral=65536 type=(alias i32 (native i32)) annotations=IsValueNode
            |-BinaryExpressionNode=(fun "*" ((alias i32) (alias i32)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode
              |-NameIdentifierNode="*"
              |-MemberNode type=(alias i32 (native i32)) annotations=IsValueNode,ImplicitCall(fun "property_g" ((alias Color)) (alias i32))
                |-ReferenceNode type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=Local(color:Color#0)
                  |-QNameNode=color
                    |-NameIdentifierNode="color"
                |-NameIdentifierNode="g"
              |-HexLiteral=256 type=(alias i32 (native i32)) annotations=IsValueNode
          |-MemberNode type=(alias i32 (native i32)) annotations=IsValueNode,ImplicitCall(fun "property_b" ((alias Color)) (alias i32))
            |-ReferenceNode type=(alias Color (struct r:<null> g:<null> b:<null>)) annotations=Local(color:Color#0)
              |-QNameNode=color
                |-NameIdentifierNode="color"
            |-NameIdentifierNode="b"
    |-NameIdentifierNode="main" type=(fun "main" ((alias Color)) (alias i32))