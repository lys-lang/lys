
|-DocumentNode
  |-ImportDirectiveNode
    |-QNameNode=system::core::native
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="native"
  |-ImportDirectiveNode
    |-QNameNode=system::core::boolean
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="boolean"
  |-ImportDirectiveNode
    |-QNameNode=system::core::u8
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="u8"
  |-ImportDirectiveNode
    |-QNameNode=system::core::u16
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="u16"
  |-ImportDirectiveNode
    |-QNameNode=system::core::u32
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="u32"
  |-ImportDirectiveNode
    |-QNameNode=system::core::u64
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="u64"
  |-ImportDirectiveNode
    |-QNameNode=system::core::i16
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="i16"
  |-ImportDirectiveNode
    |-QNameNode=system::core::i32
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="i32"
  |-ImportDirectiveNode
    |-QNameNode=system::core::i64
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="i64"
  |-ImportDirectiveNode
    |-QNameNode=system::core::f32
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="f32"
  |-ImportDirectiveNode
    |-QNameNode=system::core::f64
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="f64"
  |-ImportDirectiveNode
    |-QNameNode=system::core::bytes
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="bytes"
  |-ImportDirectiveNode
    |-QNameNode=system::core::string
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="string"
  |-OverloadedFunctionNode annotations=Injected
    |-NameIdentifierNode="test" type=(intersection (fun "test" () (alias void)))
    |-FunDirectiveNode
      |-DecoratorNode
        |-NameIdentifierNode="export"
      |-FunctionNode annotations=IsOverloaded
        |-NameIdentifierNode="test" type=(fun "test" () (alias void)) annotations=Export
        |-ReferenceNode resolvedReference=system::core::native::void type=(type (alias void (native void)))
          |-QNameNode=void
            |-NameIdentifierNode="void"
        |-BlockNode type=(native void)
          |-LoopNode type=(native void) annotations=LabelId
            |-BlockNode type=(native void)
              |-BreakNode annotations=CurrentLoop
  |-OverloadedFunctionNode annotations=Injected
    |-NameIdentifierNode="test1" type=(intersection (fun "test1" () (alias void)))
    |-FunDirectiveNode
      |-DecoratorNode
        |-NameIdentifierNode="export"
      |-FunctionNode annotations=IsOverloaded
        |-NameIdentifierNode="test1" type=(fun "test1" () (alias void)) annotations=Export
        |-ReferenceNode resolvedReference=system::core::native::void type=(type (alias void (native void)))
          |-QNameNode=void
            |-NameIdentifierNode="void"
        |-BlockNode type=(native void)
          |-VarDeclarationNode annotations=Local(test::fixtures::compiler::loops::x:i32#0)
            |-NameIdentifierNode="x" type=(alias i32 (native i32))
            |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
          |-LoopNode type=(native void) annotations=LabelId
            |-BlockNode type=(native void)
              |-AssignmentNode type=(native void)
                |-ReferenceNode resolvedReference=x type=(alias i32 (native i32)) annotations=IsAssignationLHS,Local(test::fixtures::compiler::loops::x:i32#0)
                  |-QNameNode=x
                    |-NameIdentifierNode="x"
                |-BinaryExpressionNode=(fun "+" ((alias i32) (alias i32)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode
                  |-ReferenceNode resolvedReference=x type=(alias i32 (native i32)) annotations=IsValueNode,Local(test::fixtures::compiler::loops::x:i32#0)
                    |-QNameNode=x
                      |-NameIdentifierNode="x"
                  |-NameIdentifierNode="+"
                  |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
              |-IfNode type=(native void)
                |-BinaryExpressionNode=(fun ">" ((alias i32) (alias i32)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                  |-ReferenceNode resolvedReference=x type=(alias i32 (native i32)) annotations=IsValueNode,Local(test::fixtures::compiler::loops::x:i32#0)
                    |-QNameNode=x
                      |-NameIdentifierNode="x"
                  |-NameIdentifierNode=">"
                  |-IntegerLiteral=10 type=(alias i32 (native i32)) annotations=IsValueNode
                |-BreakNode annotations=CurrentLoop
  |-OverloadedFunctionNode annotations=Injected
    |-NameIdentifierNode="test2" type=(intersection (fun "test2" () (alias void)))
    |-FunDirectiveNode
      |-DecoratorNode
        |-NameIdentifierNode="export"
      |-FunctionNode annotations=IsOverloaded
        |-NameIdentifierNode="test2" type=(fun "test2" () (alias void)) annotations=Export
        |-ReferenceNode resolvedReference=system::core::native::void type=(type (alias void (native void)))
          |-QNameNode=void
            |-NameIdentifierNode="void"
        |-BlockNode type=(native void)
          |-VarDeclarationNode annotations=Local(test::fixtures::compiler::loops::x_1:i32#0)
            |-NameIdentifierNode="x" type=(alias i32 (native i32))
            |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
          |-LoopNode type=(native void) annotations=LabelId
            |-BlockNode type=(native void)
              |-AssignmentNode type=(native void)
                |-ReferenceNode resolvedReference=x type=(alias i32 (native i32)) annotations=IsAssignationLHS,Local(test::fixtures::compiler::loops::x_1:i32#0)
                  |-QNameNode=x
                    |-NameIdentifierNode="x"
                |-BinaryExpressionNode=(fun "+" ((alias i32) (alias i32)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode
                  |-ReferenceNode resolvedReference=x type=(alias i32 (native i32)) annotations=IsValueNode,Local(test::fixtures::compiler::loops::x_1:i32#0)
                    |-QNameNode=x
                      |-NameIdentifierNode="x"
                  |-NameIdentifierNode="+"
                  |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
              |-ContinueNode annotations=CurrentLoop
  |-OverloadedFunctionNode annotations=Injected
    |-NameIdentifierNode="test3" type=(intersection (fun "test3" () (alias void)))
    |-FunDirectiveNode
      |-DecoratorNode
        |-NameIdentifierNode="export"
      |-FunctionNode annotations=IsOverloaded
        |-NameIdentifierNode="test3" type=(fun "test3" () (alias void)) annotations=Export
        |-ReferenceNode resolvedReference=system::core::native::void type=(type (alias void (native void)))
          |-QNameNode=void
            |-NameIdentifierNode="void"
        |-BlockNode type=(native void)
          |-VarDeclarationNode annotations=Local(test::fixtures::compiler::loops::x_2:i32#0)
            |-NameIdentifierNode="x" type=(alias i32 (native i32))
            |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
          |-LoopNode type=(native void) annotations=LabelId
            |-BlockNode type=(native void)
              |-LoopNode type=(native void) annotations=LabelId
                |-BlockNode type=(native void)
                  |-AssignmentNode type=(native void)
                    |-ReferenceNode resolvedReference=x type=(alias i32 (native i32)) annotations=IsAssignationLHS,Local(test::fixtures::compiler::loops::x_2:i32#0)
                      |-QNameNode=x
                        |-NameIdentifierNode="x"
                    |-BinaryExpressionNode=(fun "+" ((alias i32) (alias i32)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode
                      |-ReferenceNode resolvedReference=x type=(alias i32 (native i32)) annotations=IsValueNode,Local(test::fixtures::compiler::loops::x_2:i32#0)
                        |-QNameNode=x
                          |-NameIdentifierNode="x"
                      |-NameIdentifierNode="+"
                      |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
                  |-IfNode type=(native void)
                    |-BinaryExpressionNode=(fun "==" ((alias i32) (alias i32)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                      |-ReferenceNode resolvedReference=x type=(alias i32 (native i32)) annotations=IsValueNode,Local(test::fixtures::compiler::loops::x_2:i32#0)
                        |-QNameNode=x
                          |-NameIdentifierNode="x"
                      |-NameIdentifierNode="=="
                      |-IntegerLiteral=10 type=(alias i32 (native i32)) annotations=IsValueNode
                    |-BreakNode annotations=CurrentLoop
              |-IfNode type=(native void)
                |-BinaryExpressionNode=(fun ">" ((alias i32) (alias i32)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                  |-ReferenceNode resolvedReference=x type=(alias i32 (native i32)) annotations=IsValueNode,Local(test::fixtures::compiler::loops::x_2:i32#0)
                    |-QNameNode=x
                      |-NameIdentifierNode="x"
                  |-NameIdentifierNode=">"
                  |-IntegerLiteral=100 type=(alias i32 (native i32)) annotations=IsValueNode
                |-BreakNode annotations=CurrentLoop
              |-BreakNode annotations=CurrentLoop