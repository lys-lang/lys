
|-DocumentNode
  |-ImportDirectiveNode
    |-QNameNode=system::core
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
  |-TypeDirectiveNode
    |-NameIdentifierNode="Enum" type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
    |-UnionTypeNode type=(type (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C))))
      |-ReferenceNode type=(type (alias A (struct A)))
        |-QNameNode=A
          |-NameIdentifierNode="A"
      |-ReferenceNode type=(type (alias B (struct B)))
        |-QNameNode=B
          |-NameIdentifierNode="B"
      |-ReferenceNode type=(type (alias C (struct C)))
        |-QNameNode=C
          |-NameIdentifierNode="C"
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=Enum
        |-NameIdentifierNode="Enum"
    |-OverloadedFunctionNode type=(fun "is" ((alias Enum)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "is" ((alias Enum)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
          |-ReferenceNode type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
            |-QNameNode=Enum
              |-NameIdentifierNode="Enum"
        |-NameIdentifierNode="is"
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-BlockNode type=(alias boolean (native boolean)) annotations=IsValueNode
          |-BinaryExpressionNode="||" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="||"
            |-BinaryExpressionNode="||" type=(alias boolean (native boolean)) annotations=IsValueNode
              |-NameIdentifierNode="||"
              |-IsExpressionNode=is type=(alias boolean (native boolean)) annotations=IsValueNode
                |-ReferenceNode type=(alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))) annotations=IsValueNode
                  |-QNameNode=a
                    |-NameIdentifierNode="a"
                |-ReferenceNode type=(type (alias A (struct A)))
                  |-QNameNode=A
                    |-NameIdentifierNode="A"
              |-IsExpressionNode=is type=(alias boolean (native boolean)) annotations=IsValueNode
                |-ReferenceNode type=(alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))) annotations=IsValueNode
                  |-QNameNode=a
                    |-NameIdentifierNode="a"
                |-ReferenceNode type=(type (alias B (struct B)))
                  |-QNameNode=B
                    |-NameIdentifierNode="B"
            |-IsExpressionNode=is type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))) annotations=IsValueNode
                |-QNameNode=a
                  |-NameIdentifierNode="a"
              |-ReferenceNode type=(type (alias C (struct C)))
                |-QNameNode=C
                  |-NameIdentifierNode="C"
      |-NameIdentifierNode="is" type=(fun "is" ((alias Enum)) (alias boolean))
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=A
        |-NameIdentifierNode="A"
    |-OverloadedFunctionNode type=(fun "as" ((alias A)) (alias Enum)) annotations=Injected
      |-FunctionNode type=(fun "as" ((alias A)) (alias Enum))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias A (struct A))
          |-ReferenceNode type=(type (alias A (struct A)))
            |-QNameNode=A
              |-NameIdentifierNode="A"
        |-NameIdentifierNode="as"
        |-ReferenceNode type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
          |-QNameNode=Enum
            |-NameIdentifierNode="Enum"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=get_local
            |-QNameNode=$a
              |-NameIdentifierNode="$a"
      |-NameIdentifierNode="as" type=(fun "as" ((alias A)) (alias Enum))
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=B
        |-NameIdentifierNode="B"
    |-OverloadedFunctionNode type=(fun "as" ((alias B)) (alias Enum)) annotations=Injected
      |-FunctionNode type=(fun "as" ((alias B)) (alias Enum))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias B (struct B))
          |-ReferenceNode type=(type (alias B (struct B)))
            |-QNameNode=B
              |-NameIdentifierNode="B"
        |-NameIdentifierNode="as"
        |-ReferenceNode type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
          |-QNameNode=Enum
            |-NameIdentifierNode="Enum"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=get_local
            |-QNameNode=$a
              |-NameIdentifierNode="$a"
      |-NameIdentifierNode="as" type=(fun "as" ((alias B)) (alias Enum))
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=C
        |-NameIdentifierNode="C"
    |-OverloadedFunctionNode type=(fun "as" ((alias C)) (alias Enum)) annotations=Injected
      |-FunctionNode type=(fun "as" ((alias C)) (alias Enum))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias C (struct C))
          |-ReferenceNode type=(type (alias C (struct C)))
            |-QNameNode=C
              |-NameIdentifierNode="C"
        |-NameIdentifierNode="as"
        |-ReferenceNode type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
          |-QNameNode=Enum
            |-NameIdentifierNode="Enum"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=get_local
            |-QNameNode=$a
              |-NameIdentifierNode="$a"
      |-NameIdentifierNode="as" type=(fun "as" ((alias C)) (alias Enum))
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=Enum
        |-NameIdentifierNode="Enum"
    |-OverloadedFunctionNode type=(intersection (fun "as" ((union (alias A) (alias B) (alias C))) (alias Enum)) (fun "as" ((alias Enum)) (alias ref))) annotations=Injected
      |-FunctionNode type=(fun "as" ((union (alias A) (alias B) (alias C))) (alias Enum))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))
          |-UnionTypeNode type=(type (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C))))
            |-ReferenceNode type=(type (alias A (struct A)))
              |-QNameNode=A
                |-NameIdentifierNode="A"
            |-ReferenceNode type=(type (alias B (struct B)))
              |-QNameNode=B
                |-NameIdentifierNode="B"
            |-ReferenceNode type=(type (alias C (struct C)))
              |-QNameNode=C
                |-NameIdentifierNode="C"
        |-NameIdentifierNode="as"
        |-ReferenceNode type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
          |-QNameNode=Enum
            |-NameIdentifierNode="Enum"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=get_local
            |-QNameNode=$a
              |-NameIdentifierNode="$a"
      |-FunctionNode type=(fun "as" ((alias Enum)) (alias ref))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
          |-ReferenceNode type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
            |-QNameNode=Enum
              |-NameIdentifierNode="Enum"
        |-NameIdentifierNode="as"
        |-ReferenceNode type=(type (alias ref (ref ?)))
          |-QNameNode=ref
            |-NameIdentifierNode="ref"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=get_local
            |-QNameNode=$a
              |-NameIdentifierNode="$a"
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((union (alias A) (alias B) (alias C))) (alias Enum)) (fun "as" ((alias Enum)) (alias ref)))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="A" type=(type (alias A (struct A)))
    |-UnknownExpressionNode
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=A
        |-NameIdentifierNode="A"
    |-OverloadedFunctionNode type=(fun "apply" () (alias A)) annotations=Injected
      |-FunctionNode type=(fun "apply" () (alias A))
        |-NameIdentifierNode="apply"
        |-ReferenceNode type=(type (alias A (struct A)))
          |-QNameNode=A
            |-NameIdentifierNode="A"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.const
            |-HexLiteral=0x200000000
      |-NameIdentifierNode="apply" type=(fun "apply" () (alias A))
    |-OverloadedFunctionNode type=(fun "is" ((alias A)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "is" ((alias A)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(type (alias A (struct A)))
          |-ReferenceNode type=(type (alias A (struct A)))
            |-QNameNode=A
              |-NameIdentifierNode="A"
        |-NameIdentifierNode="is"
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=i64.and
              |-WasmAtomNode=i64.const
                |-HexLiteral=0xffffffff00000000
              |-WasmAtomNode=get_local
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
            |-WasmAtomNode=i64.const
              |-HexLiteral=0x200000000
      |-NameIdentifierNode="is" type=(fun "is" ((alias A)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "==" ((alias A) (alias ref)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "==" ((alias A) (alias ref)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias A (struct A))
          |-ReferenceNode type=(type (alias A (struct A)))
            |-QNameNode=A
              |-NameIdentifierNode="A"
        |-ParameterNode
          |-NameIdentifierNode="b" type=(alias ref (ref ?))
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
        |-NameIdentifierNode="=="
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=get_local
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
            |-WasmAtomNode=get_local
              |-QNameNode=$b
                |-NameIdentifierNode="$b"
      |-NameIdentifierNode="==" type=(fun "==" ((alias A) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "!=" ((alias A) (alias ref)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "!=" ((alias A) (alias ref)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias A (struct A))
          |-ReferenceNode type=(type (alias A (struct A)))
            |-QNameNode=A
              |-NameIdentifierNode="A"
        |-ParameterNode
          |-NameIdentifierNode="b" type=(alias ref (ref ?))
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
        |-NameIdentifierNode="!="
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.ne
            |-WasmAtomNode=get_local
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
            |-WasmAtomNode=get_local
              |-QNameNode=$b
                |-NameIdentifierNode="$b"
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias A) (alias ref)) (alias boolean))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="B" type=(type (alias B (struct B)))
    |-UnknownExpressionNode
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=B
        |-NameIdentifierNode="B"
    |-OverloadedFunctionNode type=(fun "apply" () (alias B)) annotations=Injected
      |-FunctionNode type=(fun "apply" () (alias B))
        |-NameIdentifierNode="apply"
        |-ReferenceNode type=(type (alias B (struct B)))
          |-QNameNode=B
            |-NameIdentifierNode="B"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.const
            |-HexLiteral=0x300000000
      |-NameIdentifierNode="apply" type=(fun "apply" () (alias B))
    |-OverloadedFunctionNode type=(fun "is" ((alias B)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "is" ((alias B)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(type (alias B (struct B)))
          |-ReferenceNode type=(type (alias B (struct B)))
            |-QNameNode=B
              |-NameIdentifierNode="B"
        |-NameIdentifierNode="is"
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=i64.and
              |-WasmAtomNode=i64.const
                |-HexLiteral=0xffffffff00000000
              |-WasmAtomNode=get_local
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
            |-WasmAtomNode=i64.const
              |-HexLiteral=0x300000000
      |-NameIdentifierNode="is" type=(fun "is" ((alias B)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "==" ((alias B) (alias ref)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "==" ((alias B) (alias ref)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias B (struct B))
          |-ReferenceNode type=(type (alias B (struct B)))
            |-QNameNode=B
              |-NameIdentifierNode="B"
        |-ParameterNode
          |-NameIdentifierNode="b" type=(alias ref (ref ?))
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
        |-NameIdentifierNode="=="
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=get_local
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
            |-WasmAtomNode=get_local
              |-QNameNode=$b
                |-NameIdentifierNode="$b"
      |-NameIdentifierNode="==" type=(fun "==" ((alias B) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "!=" ((alias B) (alias ref)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "!=" ((alias B) (alias ref)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias B (struct B))
          |-ReferenceNode type=(type (alias B (struct B)))
            |-QNameNode=B
              |-NameIdentifierNode="B"
        |-ParameterNode
          |-NameIdentifierNode="b" type=(alias ref (ref ?))
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
        |-NameIdentifierNode="!="
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.ne
            |-WasmAtomNode=get_local
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
            |-WasmAtomNode=get_local
              |-QNameNode=$b
                |-NameIdentifierNode="$b"
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias B) (alias ref)) (alias boolean))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="C" type=(type (alias C (struct C)))
    |-UnknownExpressionNode
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=C
        |-NameIdentifierNode="C"
    |-OverloadedFunctionNode type=(fun "apply" () (alias C)) annotations=Injected
      |-FunctionNode type=(fun "apply" () (alias C))
        |-NameIdentifierNode="apply"
        |-ReferenceNode type=(type (alias C (struct C)))
          |-QNameNode=C
            |-NameIdentifierNode="C"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.const
            |-HexLiteral=0x400000000
      |-NameIdentifierNode="apply" type=(fun "apply" () (alias C))
    |-OverloadedFunctionNode type=(fun "is" ((alias C)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "is" ((alias C)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(type (alias C (struct C)))
          |-ReferenceNode type=(type (alias C (struct C)))
            |-QNameNode=C
              |-NameIdentifierNode="C"
        |-NameIdentifierNode="is"
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=i64.and
              |-WasmAtomNode=i64.const
                |-HexLiteral=0xffffffff00000000
              |-WasmAtomNode=get_local
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
            |-WasmAtomNode=i64.const
              |-HexLiteral=0x400000000
      |-NameIdentifierNode="is" type=(fun "is" ((alias C)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "==" ((alias C) (alias ref)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "==" ((alias C) (alias ref)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias C (struct C))
          |-ReferenceNode type=(type (alias C (struct C)))
            |-QNameNode=C
              |-NameIdentifierNode="C"
        |-ParameterNode
          |-NameIdentifierNode="b" type=(alias ref (ref ?))
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
        |-NameIdentifierNode="=="
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=get_local
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
            |-WasmAtomNode=get_local
              |-QNameNode=$b
                |-NameIdentifierNode="$b"
      |-NameIdentifierNode="==" type=(fun "==" ((alias C) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "!=" ((alias C) (alias ref)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "!=" ((alias C) (alias ref)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias C (struct C))
          |-ReferenceNode type=(type (alias C (struct C)))
            |-QNameNode=C
              |-NameIdentifierNode="C"
        |-ParameterNode
          |-NameIdentifierNode="b" type=(alias ref (ref ?))
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
        |-NameIdentifierNode="!="
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.ne
            |-WasmAtomNode=get_local
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
            |-WasmAtomNode=get_local
              |-QNameNode=$b
                |-NameIdentifierNode="$b"
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias C) (alias ref)) (alias boolean))
  |-TypeDirectiveNode
    |-NameIdentifierNode="Color" type=(type (alias Color (union (alias Red (struct Red)) (alias Green (struct Green)) (alias Blue (struct Blue)) (alias Custom (struct Custom)))))
    |-UnionTypeNode type=(type (union (alias Red (struct Red)) (alias Green (struct Green)) (alias Blue (struct Blue)) (alias Custom (struct Custom))))
      |-ReferenceNode type=(type (alias Red (struct Red)))
        |-QNameNode=Red
          |-NameIdentifierNode="Red"
      |-ReferenceNode type=(type (alias Green (struct Green)))
        |-QNameNode=Green
          |-NameIdentifierNode="Green"
      |-ReferenceNode type=(type (alias Blue (struct Blue)))
        |-QNameNode=Blue
          |-NameIdentifierNode="Blue"
      |-ReferenceNode type=(type (alias Custom (struct Custom)))
        |-QNameNode=Custom
          |-NameIdentifierNode="Custom"
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=Color
        |-NameIdentifierNode="Color"
    |-OverloadedFunctionNode type=(fun "is" ((alias Color)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "is" ((alias Color)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(type (alias Color (union (alias Red (struct Red)) (alias Green (struct Green)) (alias Blue (struct Blue)) (alias Custom (struct Custom)))))
          |-ReferenceNode type=(type (alias Color (union (alias Red (struct Red)) (alias Green (struct Green)) (alias Blue (struct Blue)) (alias Custom (struct Custom)))))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
        |-NameIdentifierNode="is"
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-BlockNode type=(alias boolean (native boolean)) annotations=IsValueNode
          |-BinaryExpressionNode="||" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="||"
            |-BinaryExpressionNode="||" type=(alias boolean (native boolean)) annotations=IsValueNode
              |-NameIdentifierNode="||"
              |-BinaryExpressionNode="||" type=(alias boolean (native boolean)) annotations=IsValueNode
                |-NameIdentifierNode="||"
                |-IsExpressionNode=is type=(alias boolean (native boolean)) annotations=IsValueNode
                  |-ReferenceNode type=(alias Color (union (alias Red (struct Red)) (alias Green (struct Green)) (alias Blue (struct Blue)) (alias Custom (struct Custom)))) annotations=IsValueNode
                    |-QNameNode=a
                      |-NameIdentifierNode="a"
                  |-ReferenceNode type=(type (alias Red (struct Red)))
                    |-QNameNode=Red
                      |-NameIdentifierNode="Red"
                |-IsExpressionNode=is type=(alias boolean (native boolean)) annotations=IsValueNode
                  |-ReferenceNode type=(alias Color (union (alias Red (struct Red)) (alias Green (struct Green)) (alias Blue (struct Blue)) (alias Custom (struct Custom)))) annotations=IsValueNode
                    |-QNameNode=a
                      |-NameIdentifierNode="a"
                  |-ReferenceNode type=(type (alias Green (struct Green)))
                    |-QNameNode=Green
                      |-NameIdentifierNode="Green"
              |-IsExpressionNode=is type=(alias boolean (native boolean)) annotations=IsValueNode
                |-ReferenceNode type=(alias Color (union (alias Red (struct Red)) (alias Green (struct Green)) (alias Blue (struct Blue)) (alias Custom (struct Custom)))) annotations=IsValueNode
                  |-QNameNode=a
                    |-NameIdentifierNode="a"
                |-ReferenceNode type=(type (alias Blue (struct Blue)))
                  |-QNameNode=Blue
                    |-NameIdentifierNode="Blue"
            |-IsExpressionNode=is type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(alias Color (union (alias Red (struct Red)) (alias Green (struct Green)) (alias Blue (struct Blue)) (alias Custom (struct Custom)))) annotations=IsValueNode
                |-QNameNode=a
                  |-NameIdentifierNode="a"
              |-ReferenceNode type=(type (alias Custom (struct Custom)))
                |-QNameNode=Custom
                  |-NameIdentifierNode="Custom"
      |-NameIdentifierNode="is" type=(fun "is" ((alias Color)) (alias boolean))
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=Red
        |-NameIdentifierNode="Red"
    |-OverloadedFunctionNode type=(fun "as" ((alias Red)) (alias Color)) annotations=Injected
      |-FunctionNode type=(fun "as" ((alias Red)) (alias Color))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias Red (struct Red))
          |-ReferenceNode type=(type (alias Red (struct Red)))
            |-QNameNode=Red
              |-NameIdentifierNode="Red"
        |-NameIdentifierNode="as"
        |-ReferenceNode type=(type (alias Color (union (alias Red (struct Red)) (alias Green (struct Green)) (alias Blue (struct Blue)) (alias Custom (struct Custom)))))
          |-QNameNode=Color
            |-NameIdentifierNode="Color"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=get_local
            |-QNameNode=$a
              |-NameIdentifierNode="$a"
      |-NameIdentifierNode="as" type=(fun "as" ((alias Red)) (alias Color))
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=Green
        |-NameIdentifierNode="Green"
    |-OverloadedFunctionNode type=(fun "as" ((alias Green)) (alias Color)) annotations=Injected
      |-FunctionNode type=(fun "as" ((alias Green)) (alias Color))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias Green (struct Green))
          |-ReferenceNode type=(type (alias Green (struct Green)))
            |-QNameNode=Green
              |-NameIdentifierNode="Green"
        |-NameIdentifierNode="as"
        |-ReferenceNode type=(type (alias Color (union (alias Red (struct Red)) (alias Green (struct Green)) (alias Blue (struct Blue)) (alias Custom (struct Custom)))))
          |-QNameNode=Color
            |-NameIdentifierNode="Color"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=get_local
            |-QNameNode=$a
              |-NameIdentifierNode="$a"
      |-NameIdentifierNode="as" type=(fun "as" ((alias Green)) (alias Color))
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=Blue
        |-NameIdentifierNode="Blue"
    |-OverloadedFunctionNode type=(fun "as" ((alias Blue)) (alias Color)) annotations=Injected
      |-FunctionNode type=(fun "as" ((alias Blue)) (alias Color))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias Blue (struct Blue))
          |-ReferenceNode type=(type (alias Blue (struct Blue)))
            |-QNameNode=Blue
              |-NameIdentifierNode="Blue"
        |-NameIdentifierNode="as"
        |-ReferenceNode type=(type (alias Color (union (alias Red (struct Red)) (alias Green (struct Green)) (alias Blue (struct Blue)) (alias Custom (struct Custom)))))
          |-QNameNode=Color
            |-NameIdentifierNode="Color"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=get_local
            |-QNameNode=$a
              |-NameIdentifierNode="$a"
      |-NameIdentifierNode="as" type=(fun "as" ((alias Blue)) (alias Color))
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=Custom
        |-NameIdentifierNode="Custom"
    |-OverloadedFunctionNode type=(fun "as" ((alias Custom)) (alias Color)) annotations=Injected
      |-FunctionNode type=(fun "as" ((alias Custom)) (alias Color))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias Custom (struct Custom))
          |-ReferenceNode type=(type (alias Custom (struct Custom)))
            |-QNameNode=Custom
              |-NameIdentifierNode="Custom"
        |-NameIdentifierNode="as"
        |-ReferenceNode type=(type (alias Color (union (alias Red (struct Red)) (alias Green (struct Green)) (alias Blue (struct Blue)) (alias Custom (struct Custom)))))
          |-QNameNode=Color
            |-NameIdentifierNode="Color"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=get_local
            |-QNameNode=$a
              |-NameIdentifierNode="$a"
      |-NameIdentifierNode="as" type=(fun "as" ((alias Custom)) (alias Color))
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=Color
        |-NameIdentifierNode="Color"
    |-OverloadedFunctionNode type=(intersection (fun "as" ((union (alias Red) (alias Green) (alias Blue) (alias Custom))) (alias Color)) (fun "as" ((alias Color)) (alias ref))) annotations=Injected
      |-FunctionNode type=(fun "as" ((union (alias Red) (alias Green) (alias Blue) (alias Custom))) (alias Color))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(union (alias Red (struct Red)) (alias Green (struct Green)) (alias Blue (struct Blue)) (alias Custom (struct Custom)))
          |-UnionTypeNode type=(type (union (alias Red (struct Red)) (alias Green (struct Green)) (alias Blue (struct Blue)) (alias Custom (struct Custom))))
            |-ReferenceNode type=(type (alias Red (struct Red)))
              |-QNameNode=Red
                |-NameIdentifierNode="Red"
            |-ReferenceNode type=(type (alias Green (struct Green)))
              |-QNameNode=Green
                |-NameIdentifierNode="Green"
            |-ReferenceNode type=(type (alias Blue (struct Blue)))
              |-QNameNode=Blue
                |-NameIdentifierNode="Blue"
            |-ReferenceNode type=(type (alias Custom (struct Custom)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
        |-NameIdentifierNode="as"
        |-ReferenceNode type=(type (alias Color (union (alias Red (struct Red)) (alias Green (struct Green)) (alias Blue (struct Blue)) (alias Custom (struct Custom)))))
          |-QNameNode=Color
            |-NameIdentifierNode="Color"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=get_local
            |-QNameNode=$a
              |-NameIdentifierNode="$a"
      |-FunctionNode type=(fun "as" ((alias Color)) (alias ref))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(type (alias Color (union (alias Red (struct Red)) (alias Green (struct Green)) (alias Blue (struct Blue)) (alias Custom (struct Custom)))))
          |-ReferenceNode type=(type (alias Color (union (alias Red (struct Red)) (alias Green (struct Green)) (alias Blue (struct Blue)) (alias Custom (struct Custom)))))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
        |-NameIdentifierNode="as"
        |-ReferenceNode type=(type (alias ref (ref ?)))
          |-QNameNode=ref
            |-NameIdentifierNode="ref"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=get_local
            |-QNameNode=$a
              |-NameIdentifierNode="$a"
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((union (alias Red) (alias Green) (alias Blue) (alias Custom))) (alias Color)) (fun "as" ((alias Color)) (alias ref)))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Red" type=(type (alias Red (struct Red)))
    |-UnknownExpressionNode
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=Red
        |-NameIdentifierNode="Red"
    |-OverloadedFunctionNode type=(fun "apply" () (alias Red)) annotations=Injected
      |-FunctionNode type=(fun "apply" () (alias Red))
        |-NameIdentifierNode="apply"
        |-ReferenceNode type=(type (alias Red (struct Red)))
          |-QNameNode=Red
            |-NameIdentifierNode="Red"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.const
            |-HexLiteral=0x600000000
      |-NameIdentifierNode="apply" type=(fun "apply" () (alias Red))
    |-OverloadedFunctionNode type=(fun "is" ((alias Red)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "is" ((alias Red)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(type (alias Red (struct Red)))
          |-ReferenceNode type=(type (alias Red (struct Red)))
            |-QNameNode=Red
              |-NameIdentifierNode="Red"
        |-NameIdentifierNode="is"
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=i64.and
              |-WasmAtomNode=i64.const
                |-HexLiteral=0xffffffff00000000
              |-WasmAtomNode=get_local
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
            |-WasmAtomNode=i64.const
              |-HexLiteral=0x600000000
      |-NameIdentifierNode="is" type=(fun "is" ((alias Red)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "==" ((alias Red) (alias ref)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "==" ((alias Red) (alias ref)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias Red (struct Red))
          |-ReferenceNode type=(type (alias Red (struct Red)))
            |-QNameNode=Red
              |-NameIdentifierNode="Red"
        |-ParameterNode
          |-NameIdentifierNode="b" type=(alias ref (ref ?))
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
        |-NameIdentifierNode="=="
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=get_local
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
            |-WasmAtomNode=get_local
              |-QNameNode=$b
                |-NameIdentifierNode="$b"
      |-NameIdentifierNode="==" type=(fun "==" ((alias Red) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "!=" ((alias Red) (alias ref)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "!=" ((alias Red) (alias ref)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias Red (struct Red))
          |-ReferenceNode type=(type (alias Red (struct Red)))
            |-QNameNode=Red
              |-NameIdentifierNode="Red"
        |-ParameterNode
          |-NameIdentifierNode="b" type=(alias ref (ref ?))
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
        |-NameIdentifierNode="!="
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.ne
            |-WasmAtomNode=get_local
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
            |-WasmAtomNode=get_local
              |-QNameNode=$b
                |-NameIdentifierNode="$b"
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias Red) (alias ref)) (alias boolean))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Green" type=(type (alias Green (struct Green)))
    |-UnknownExpressionNode
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=Green
        |-NameIdentifierNode="Green"
    |-OverloadedFunctionNode type=(fun "apply" () (alias Green)) annotations=Injected
      |-FunctionNode type=(fun "apply" () (alias Green))
        |-NameIdentifierNode="apply"
        |-ReferenceNode type=(type (alias Green (struct Green)))
          |-QNameNode=Green
            |-NameIdentifierNode="Green"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.const
            |-HexLiteral=0x700000000
      |-NameIdentifierNode="apply" type=(fun "apply" () (alias Green))
    |-OverloadedFunctionNode type=(fun "is" ((alias Green)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "is" ((alias Green)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(type (alias Green (struct Green)))
          |-ReferenceNode type=(type (alias Green (struct Green)))
            |-QNameNode=Green
              |-NameIdentifierNode="Green"
        |-NameIdentifierNode="is"
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=i64.and
              |-WasmAtomNode=i64.const
                |-HexLiteral=0xffffffff00000000
              |-WasmAtomNode=get_local
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
            |-WasmAtomNode=i64.const
              |-HexLiteral=0x700000000
      |-NameIdentifierNode="is" type=(fun "is" ((alias Green)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "==" ((alias Green) (alias ref)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "==" ((alias Green) (alias ref)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias Green (struct Green))
          |-ReferenceNode type=(type (alias Green (struct Green)))
            |-QNameNode=Green
              |-NameIdentifierNode="Green"
        |-ParameterNode
          |-NameIdentifierNode="b" type=(alias ref (ref ?))
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
        |-NameIdentifierNode="=="
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=get_local
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
            |-WasmAtomNode=get_local
              |-QNameNode=$b
                |-NameIdentifierNode="$b"
      |-NameIdentifierNode="==" type=(fun "==" ((alias Green) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "!=" ((alias Green) (alias ref)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "!=" ((alias Green) (alias ref)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias Green (struct Green))
          |-ReferenceNode type=(type (alias Green (struct Green)))
            |-QNameNode=Green
              |-NameIdentifierNode="Green"
        |-ParameterNode
          |-NameIdentifierNode="b" type=(alias ref (ref ?))
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
        |-NameIdentifierNode="!="
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.ne
            |-WasmAtomNode=get_local
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
            |-WasmAtomNode=get_local
              |-QNameNode=$b
                |-NameIdentifierNode="$b"
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias Green) (alias ref)) (alias boolean))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Blue" type=(type (alias Blue (struct Blue)))
    |-UnknownExpressionNode
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=Blue
        |-NameIdentifierNode="Blue"
    |-OverloadedFunctionNode type=(fun "apply" () (alias Blue)) annotations=Injected
      |-FunctionNode type=(fun "apply" () (alias Blue))
        |-NameIdentifierNode="apply"
        |-ReferenceNode type=(type (alias Blue (struct Blue)))
          |-QNameNode=Blue
            |-NameIdentifierNode="Blue"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.const
            |-HexLiteral=0x800000000
      |-NameIdentifierNode="apply" type=(fun "apply" () (alias Blue))
    |-OverloadedFunctionNode type=(fun "is" ((alias Blue)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "is" ((alias Blue)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(type (alias Blue (struct Blue)))
          |-ReferenceNode type=(type (alias Blue (struct Blue)))
            |-QNameNode=Blue
              |-NameIdentifierNode="Blue"
        |-NameIdentifierNode="is"
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=i64.and
              |-WasmAtomNode=i64.const
                |-HexLiteral=0xffffffff00000000
              |-WasmAtomNode=get_local
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
            |-WasmAtomNode=i64.const
              |-HexLiteral=0x800000000
      |-NameIdentifierNode="is" type=(fun "is" ((alias Blue)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "==" ((alias Blue) (alias ref)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "==" ((alias Blue) (alias ref)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias Blue (struct Blue))
          |-ReferenceNode type=(type (alias Blue (struct Blue)))
            |-QNameNode=Blue
              |-NameIdentifierNode="Blue"
        |-ParameterNode
          |-NameIdentifierNode="b" type=(alias ref (ref ?))
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
        |-NameIdentifierNode="=="
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=get_local
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
            |-WasmAtomNode=get_local
              |-QNameNode=$b
                |-NameIdentifierNode="$b"
      |-NameIdentifierNode="==" type=(fun "==" ((alias Blue) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "!=" ((alias Blue) (alias ref)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "!=" ((alias Blue) (alias ref)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias Blue (struct Blue))
          |-ReferenceNode type=(type (alias Blue (struct Blue)))
            |-QNameNode=Blue
              |-NameIdentifierNode="Blue"
        |-ParameterNode
          |-NameIdentifierNode="b" type=(alias ref (ref ?))
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
        |-NameIdentifierNode="!="
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.ne
            |-WasmAtomNode=get_local
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
            |-WasmAtomNode=get_local
              |-QNameNode=$b
                |-NameIdentifierNode="$b"
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias Blue) (alias ref)) (alias boolean))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Custom" type=(type (alias Custom (struct Custom)))
    |-UnknownExpressionNode
  |-NameSpaceDirective
    |-ReferenceNode
      |-QNameNode=Custom
        |-NameIdentifierNode="Custom"
    |-OverloadedFunctionNode type=(fun "discriminant" () (alias u64)) annotations=Injected
      |-FunctionNode type=(fun "discriminant" () (alias u64))
        |-NameIdentifierNode="discriminant"
        |-ReferenceNode type=(type (alias u64 (native u64)))
          |-QNameNode=u64
            |-NameIdentifierNode="u64"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.const
            |-HexLiteral=0x900000000
      |-NameIdentifierNode="discriminant" type=(fun "discriminant" () (alias u64))
    |-OverloadedFunctionNode type=(fun "sizeOf" () (alias i32)) annotations=Injected
      |-FunctionNode type=(fun "sizeOf" () (alias i32))
        |-NameIdentifierNode="sizeOf"
        |-ReferenceNode type=(type (alias i32 (native i32)))
          |-QNameNode=i32
            |-NameIdentifierNode="i32"
        |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
      |-NameIdentifierNode="sizeOf" type=(fun "sizeOf" () (alias i32))
    |-OverloadedFunctionNode type=(fun "apply" ((alias i32)) (alias Custom)) annotations=Injected
      |-FunctionNode type=(fun "apply" ((alias i32)) (alias Custom))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(alias i32 (native i32))
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
        |-NameIdentifierNode="apply"
        |-ReferenceNode type=(type (alias Custom (struct Custom)))
          |-QNameNode=Custom
            |-NameIdentifierNode="Custom"
        |-FunctionCallNode type=(alias Custom (struct Custom)) annotations=IsValueNode
          |-ReferenceNode type=(fun "fromPointer" ((union (alias i32) (alias u32))) (alias Custom))
            |-QNameNode=fromPointer
              |-NameIdentifierNode="fromPointer"
          |-FunctionCallNode type=(alias i32 (native i32)) annotations=IsValueNode
            |-ReferenceNode type=(fun "malloc" ((alias i32)) (alias i32))
              |-QNameNode=system::memory::malloc
                |-NameIdentifierNode="system"
                |-NameIdentifierNode="memory"
                |-NameIdentifierNode="malloc"
            |-FunctionCallNode type=(alias i32 (native i32)) annotations=IsValueNode
              |-ReferenceNode type=(fun "sizeOf" () (alias i32))
                |-QNameNode=sizeOf
                  |-NameIdentifierNode="sizeOf"
      |-NameIdentifierNode="apply" type=(fun "apply" ((alias i32)) (alias Custom))
    |-OverloadedFunctionNode type=(fun "fromPointer" ((union (alias i32) (alias u32))) (alias Custom)) annotations=Injected
      |-FunctionNode type=(fun "fromPointer" ((union (alias i32) (alias u32))) (alias Custom))
        |-ParameterNode
          |-NameIdentifierNode="ptr" type=(type (union (alias i32 (native i32)) (alias u32 (native u32))))
          |-UnionTypeNode type=(type (union (alias i32 (native i32)) (alias u32 (native u32))))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
        |-NameIdentifierNode="fromPointer"
        |-ReferenceNode type=(type (alias Custom (struct Custom)))
          |-QNameNode=Custom
            |-NameIdentifierNode="Custom"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.or
            |-WasmAtomNode=i64.const
              |-HexLiteral=0x900000000
            |-WasmAtomNode=i64.extend_u/i32
              |-WasmAtomNode=get_local
                |-QNameNode=$ptr
                  |-NameIdentifierNode="$ptr"
      |-NameIdentifierNode="fromPointer" type=(fun "fromPointer" ((union (alias i32) (alias u32))) (alias Custom))
    |-OverloadedFunctionNode type=(fun "get_a" ((alias Custom)) (alias i32)) annotations=Injected
      |-FunctionNode type=(fun "get_a" ((alias Custom)) (alias i32))
        |-ParameterNode
          |-NameIdentifierNode="target" type=(alias Custom (struct Custom))
          |-ReferenceNode type=(type (alias Custom (struct Custom)))
            |-QNameNode=Custom
              |-NameIdentifierNode="Custom"
        |-NameIdentifierNode="get_a"
        |-ReferenceNode type=(type (alias i32 (native i32)))
          |-QNameNode=i32
            |-NameIdentifierNode="i32"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=local
            |-QNameNode=$offset
              |-NameIdentifierNode="$offset"
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-WasmAtomNode=set_local
            |-QNameNode=$offset
              |-NameIdentifierNode="$offset"
            |-WasmAtomNode=i32.const
              |-IntegerLiteral=0
          |-WasmAtomNode=unreachable
      |-NameIdentifierNode="get_a" type=(fun "get_a" ((alias Custom)) (alias i32))
    |-OverloadedFunctionNode type=(fun "set_a" ((alias Custom) (alias i32)) (alias void)) annotations=Injected
      |-FunctionNode type=(fun "set_a" ((alias Custom) (alias i32)) (alias void))
        |-ParameterNode
          |-NameIdentifierNode="target" type=(alias Custom (struct Custom))
          |-ReferenceNode type=(type (alias Custom (struct Custom)))
            |-QNameNode=Custom
              |-NameIdentifierNode="Custom"
        |-ParameterNode
          |-NameIdentifierNode="value" type=(alias i32 (native i32))
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
        |-NameIdentifierNode="set_a"
        |-ReferenceNode type=(type (alias void (void)))
          |-QNameNode=void
            |-NameIdentifierNode="void"
        |-WasmExpressionNode type=(void)
          |-WasmAtomNode=local
            |-QNameNode=$offset
              |-NameIdentifierNode="$offset"
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-WasmAtomNode=set_local
            |-QNameNode=$offset
              |-NameIdentifierNode="$offset"
            |-WasmAtomNode=i32.const
              |-IntegerLiteral=0
          |-WasmAtomNode=unreachable
      |-NameIdentifierNode="set_a" type=(fun "set_a" ((alias Custom) (alias i32)) (alias void))
    |-OverloadedFunctionNode type=(fun "is" ((alias Custom)) (alias boolean)) annotations=Injected
      |-FunctionNode type=(fun "is" ((alias Custom)) (alias boolean))
        |-ParameterNode
          |-NameIdentifierNode="a" type=(type (alias Custom (struct Custom)))
          |-ReferenceNode type=(type (alias Custom (struct Custom)))
            |-QNameNode=Custom
              |-NameIdentifierNode="Custom"
        |-NameIdentifierNode="is"
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-WasmExpressionNode type=(void) annotations=IsValueNode
          |-WasmAtomNode=i64.eq
            |-WasmAtomNode=i64.and
              |-WasmAtomNode=i64.const
                |-HexLiteral=0xffffffff00000000
              |-WasmAtomNode=get_local
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
            |-WasmAtomNode=i64.const
              |-HexLiteral=0x900000000
      |-NameIdentifierNode="is" type=(fun "is" ((alias Custom)) (alias boolean))
  |-VarDirectiveNode
    |-VarDeclarationNode
      |-NameIdentifierNode="value1" type=(alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C))))
      |-ReferenceNode type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
        |-QNameNode=Enum
          |-NameIdentifierNode="Enum"
      |-ReferenceNode type=(alias A (struct A)) annotations=IsValueNode,ImplicitCall
        |-QNameNode=A
          |-NameIdentifierNode="A"
  |-VarDirectiveNode
    |-VarDeclarationNode
      |-NameIdentifierNode="value2" type=(union (alias A (struct A)) (alias B (struct B)))
      |-UnionTypeNode type=(type (union (alias A (struct A)) (alias B (struct B))))
        |-ReferenceNode type=(type (alias A (struct A)))
          |-QNameNode=A
            |-NameIdentifierNode="A"
        |-ReferenceNode type=(type (alias B (struct B)))
          |-QNameNode=B
            |-NameIdentifierNode="B"
      |-ReferenceNode type=(alias A (struct A)) annotations=IsValueNode,ImplicitCall
        |-QNameNode=A
          |-NameIdentifierNode="A"
  |-VarDirectiveNode
    |-VarDeclarationNode
      |-NameIdentifierNode="value3" type=(alias A (struct A))
      |-ReferenceNode type=(type (alias A (struct A)))
        |-QNameNode=A
          |-NameIdentifierNode="A"
      |-ReferenceNode type=(alias A (struct A)) annotations=IsValueNode,ImplicitCall
        |-QNameNode=A
          |-NameIdentifierNode="A"
  |-OverloadedFunctionNode type=(fun "isA" ((alias ref)) (alias boolean)) annotations=Injected
    |-FunctionNode type=(fun "isA" ((alias ref)) (alias boolean))
      |-ParameterNode
        |-NameIdentifierNode="x" type=(alias ref (ref ?))
        |-ReferenceNode type=(type (alias ref (ref ?)))
          |-QNameNode=ref
            |-NameIdentifierNode="ref"
      |-NameIdentifierNode="isA"
      |-ReferenceNode type=(type (alias boolean (native boolean)))
        |-QNameNode=boolean
          |-NameIdentifierNode="boolean"
      |-BlockNode type=(alias boolean (native boolean)) annotations=IsValueNode
        |-PatternMatcherNode type=(alias boolean (native boolean)) annotations=IsValueNode
          |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode
            |-QNameNode=x
              |-NameIdentifierNode="x"
          |-MatchCaseIsNode type=(alias boolean (native boolean)) annotations=IsValueNode
            |-ReferenceNode type=(type (alias A (struct A)))
              |-QNameNode=A
                |-NameIdentifierNode="A"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
          |-MatchDefaultNode type=(alias boolean (native boolean)) annotations=IsValueNode
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
    |-NameIdentifierNode="isA" type=(fun "isA" ((alias ref)) (alias boolean))
  |-OverloadedFunctionNode type=(fun "isB" ((alias ref)) (alias boolean)) annotations=Injected
    |-FunctionNode type=(fun "isB" ((alias ref)) (alias boolean))
      |-ParameterNode
        |-NameIdentifierNode="x" type=(alias ref (ref ?))
        |-ReferenceNode type=(type (alias ref (ref ?)))
          |-QNameNode=ref
            |-NameIdentifierNode="ref"
      |-NameIdentifierNode="isB"
      |-ReferenceNode type=(type (alias boolean (native boolean)))
        |-QNameNode=boolean
          |-NameIdentifierNode="boolean"
      |-BlockNode type=(alias boolean (native boolean)) annotations=IsValueNode
        |-PatternMatcherNode type=(alias boolean (native boolean)) annotations=IsValueNode
          |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode
            |-QNameNode=x
              |-NameIdentifierNode="x"
          |-MatchCaseIsNode type=(alias boolean (native boolean)) annotations=IsValueNode
            |-ReferenceNode type=(type (alias B (struct B)))
              |-QNameNode=B
                |-NameIdentifierNode="B"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
          |-MatchDefaultNode type=(alias boolean (native boolean)) annotations=IsValueNode
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
    |-NameIdentifierNode="isB" type=(fun "isB" ((alias ref)) (alias boolean))
  |-OverloadedFunctionNode type=(fun "isEnum" ((alias ref)) (alias boolean)) annotations=Injected
    |-FunctionNode type=(fun "isEnum" ((alias ref)) (alias boolean))
      |-ParameterNode
        |-NameIdentifierNode="x" type=(alias ref (ref ?))
        |-ReferenceNode type=(type (alias ref (ref ?)))
          |-QNameNode=ref
            |-NameIdentifierNode="ref"
      |-NameIdentifierNode="isEnum"
      |-ReferenceNode type=(type (alias boolean (native boolean)))
        |-QNameNode=boolean
          |-NameIdentifierNode="boolean"
      |-BlockNode type=(alias boolean (native boolean)) annotations=IsValueNode
        |-PatternMatcherNode type=(alias boolean (native boolean)) annotations=IsValueNode
          |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode
            |-QNameNode=x
              |-NameIdentifierNode="x"
          |-MatchCaseIsNode type=(alias boolean (native boolean)) annotations=IsValueNode
            |-ReferenceNode type=(type (alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))))
              |-QNameNode=Enum
                |-NameIdentifierNode="Enum"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
          |-MatchDefaultNode type=(alias boolean (native boolean)) annotations=IsValueNode
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
    |-NameIdentifierNode="isEnum" type=(fun "isEnum" ((alias ref)) (alias boolean))
  |-OverloadedFunctionNode type=(fun "isRed" ((alias ref)) (alias boolean)) annotations=Injected
    |-FunctionNode type=(fun "isRed" ((alias ref)) (alias boolean))
      |-ParameterNode
        |-NameIdentifierNode="x" type=(alias ref (ref ?))
        |-ReferenceNode type=(type (alias ref (ref ?)))
          |-QNameNode=ref
            |-NameIdentifierNode="ref"
      |-NameIdentifierNode="isRed"
      |-ReferenceNode type=(type (alias boolean (native boolean)))
        |-QNameNode=boolean
          |-NameIdentifierNode="boolean"
      |-BlockNode type=(alias boolean (native boolean)) annotations=IsValueNode
        |-PatternMatcherNode type=(alias boolean (native boolean)) annotations=IsValueNode
          |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode
            |-QNameNode=x
              |-NameIdentifierNode="x"
          |-MatchCaseIsNode type=(alias boolean (native boolean)) annotations=IsValueNode
            |-ReferenceNode type=(type (alias Red (struct Red)))
              |-QNameNode=Red
                |-NameIdentifierNode="Red"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
          |-MatchDefaultNode type=(alias boolean (native boolean)) annotations=IsValueNode
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
    |-NameIdentifierNode="isRed" type=(fun "isRed" ((alias ref)) (alias boolean))
  |-OverloadedFunctionNode type=(fun "isColor" ((alias ref)) (alias boolean)) annotations=Injected
    |-FunctionNode type=(fun "isColor" ((alias ref)) (alias boolean))
      |-ParameterNode
        |-NameIdentifierNode="x" type=(alias ref (ref ?))
        |-ReferenceNode type=(type (alias ref (ref ?)))
          |-QNameNode=ref
            |-NameIdentifierNode="ref"
      |-NameIdentifierNode="isColor"
      |-ReferenceNode type=(type (alias boolean (native boolean)))
        |-QNameNode=boolean
          |-NameIdentifierNode="boolean"
      |-BlockNode type=(alias boolean (native boolean)) annotations=IsValueNode
        |-PatternMatcherNode type=(alias boolean (native boolean)) annotations=IsValueNode
          |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode
            |-QNameNode=x
              |-NameIdentifierNode="x"
          |-MatchCaseIsNode type=(alias boolean (native boolean)) annotations=IsValueNode
            |-ReferenceNode type=(type (alias Color (union (alias Red (struct Red)) (alias Green (struct Green)) (alias Blue (struct Blue)) (alias Custom (struct Custom)))))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
          |-MatchDefaultNode type=(alias boolean (native boolean)) annotations=IsValueNode
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
    |-NameIdentifierNode="isColor" type=(fun "isColor" ((alias ref)) (alias boolean))
  |-OverloadedFunctionNode type=(fun "isCustom" ((alias ref)) (alias boolean)) annotations=Injected
    |-FunctionNode type=(fun "isCustom" ((alias ref)) (alias boolean))
      |-ParameterNode
        |-NameIdentifierNode="x" type=(alias ref (ref ?))
        |-ReferenceNode type=(type (alias ref (ref ?)))
          |-QNameNode=ref
            |-NameIdentifierNode="ref"
      |-NameIdentifierNode="isCustom"
      |-ReferenceNode type=(type (alias boolean (native boolean)))
        |-QNameNode=boolean
          |-NameIdentifierNode="boolean"
      |-BlockNode type=(alias boolean (native boolean)) annotations=IsValueNode
        |-PatternMatcherNode type=(alias boolean (native boolean)) annotations=IsValueNode
          |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode
            |-QNameNode=x
              |-NameIdentifierNode="x"
          |-MatchCaseIsNode type=(alias boolean (native boolean)) annotations=IsValueNode
            |-ReferenceNode type=(type (alias Custom (struct Custom)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
          |-MatchDefaultNode type=(alias boolean (native boolean)) annotations=IsValueNode
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
    |-NameIdentifierNode="isCustom" type=(fun "isCustom" ((alias ref)) (alias boolean))
  |-OverloadedFunctionNode type=(fun "testPassing" () (alias void)) annotations=Injected
    |-FunctionNode type=(fun "testPassing" () (alias void))
      |-NameIdentifierNode="testPassing"
      |-ReferenceNode type=(type (alias void (void)))
        |-QNameNode=void
          |-NameIdentifierNode="void"
      |-BlockNode type=(void)
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isA" ((alias ref)) (alias boolean))
                |-QNameNode=isA
                  |-NameIdentifierNode="isA"
              |-ReferenceNode type=(alias A (struct A)) annotations=IsValueNode,ImplicitCall
                |-QNameNode=A
                  |-NameIdentifierNode="A"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isEnum" ((alias ref)) (alias boolean))
                |-QNameNode=isEnum
                  |-NameIdentifierNode="isEnum"
              |-ReferenceNode type=(alias A (struct A)) annotations=IsValueNode,ImplicitCall
                |-QNameNode=A
                  |-NameIdentifierNode="A"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isB" ((alias ref)) (alias boolean))
                |-QNameNode=isB
                  |-NameIdentifierNode="isB"
              |-ReferenceNode type=(alias B (struct B)) annotations=IsValueNode,ImplicitCall
                |-QNameNode=B
                  |-NameIdentifierNode="B"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isA" ((alias ref)) (alias boolean))
                |-QNameNode=isA
                  |-NameIdentifierNode="isA"
              |-ReferenceNode type=(alias B (struct B)) annotations=IsValueNode,ImplicitCall
                |-QNameNode=B
                  |-NameIdentifierNode="B"
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isEnum" ((alias ref)) (alias boolean))
                |-QNameNode=isEnum
                  |-NameIdentifierNode="isEnum"
              |-ReferenceNode type=(alias B (struct B)) annotations=IsValueNode,ImplicitCall
                |-QNameNode=B
                  |-NameIdentifierNode="B"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isB" ((alias ref)) (alias boolean))
                |-QNameNode=isB
                  |-NameIdentifierNode="isB"
              |-ReferenceNode type=(alias B (struct B)) annotations=IsValueNode,ImplicitCall
                |-QNameNode=B
                  |-NameIdentifierNode="B"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isA" ((alias ref)) (alias boolean))
                |-QNameNode=isA
                  |-NameIdentifierNode="isA"
              |-ReferenceNode type=(alias C (struct C)) annotations=IsValueNode,ImplicitCall
                |-QNameNode=C
                  |-NameIdentifierNode="C"
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isEnum" ((alias ref)) (alias boolean))
                |-QNameNode=isEnum
                  |-NameIdentifierNode="isEnum"
              |-ReferenceNode type=(alias C (struct C)) annotations=IsValueNode,ImplicitCall
                |-QNameNode=C
                  |-NameIdentifierNode="C"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isB" ((alias ref)) (alias boolean))
                |-QNameNode=isB
                  |-NameIdentifierNode="isB"
              |-ReferenceNode type=(alias C (struct C)) annotations=IsValueNode,ImplicitCall
                |-QNameNode=C
                  |-NameIdentifierNode="C"
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isA" ((alias ref)) (alias boolean))
                |-QNameNode=isA
                  |-NameIdentifierNode="isA"
              |-ReferenceNode type=(alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))) annotations=IsValueNode
                |-QNameNode=value1
                  |-NameIdentifierNode="value1"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isB" ((alias ref)) (alias boolean))
                |-QNameNode=isB
                  |-NameIdentifierNode="isB"
              |-ReferenceNode type=(alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))) annotations=IsValueNode
                |-QNameNode=value1
                  |-NameIdentifierNode="value1"
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isEnum" ((alias ref)) (alias boolean))
                |-QNameNode=isEnum
                  |-NameIdentifierNode="isEnum"
              |-ReferenceNode type=(alias Enum (union (alias A (struct A)) (alias B (struct B)) (alias C (struct C)))) annotations=IsValueNode
                |-QNameNode=value1
                  |-NameIdentifierNode="value1"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isA" ((alias ref)) (alias boolean))
                |-QNameNode=isA
                  |-NameIdentifierNode="isA"
              |-ReferenceNode type=(union (alias A (struct A)) (alias B (struct B))) annotations=IsValueNode
                |-QNameNode=value2
                  |-NameIdentifierNode="value2"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isB" ((alias ref)) (alias boolean))
                |-QNameNode=isB
                  |-NameIdentifierNode="isB"
              |-ReferenceNode type=(union (alias A (struct A)) (alias B (struct B))) annotations=IsValueNode
                |-QNameNode=value2
                  |-NameIdentifierNode="value2"
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isEnum" ((alias ref)) (alias boolean))
                |-QNameNode=isEnum
                  |-NameIdentifierNode="isEnum"
              |-ReferenceNode type=(union (alias A (struct A)) (alias B (struct B))) annotations=IsValueNode
                |-QNameNode=value2
                  |-NameIdentifierNode="value2"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isA" ((alias ref)) (alias boolean))
                |-QNameNode=isA
                  |-NameIdentifierNode="isA"
              |-ReferenceNode type=(alias A (struct A)) annotations=IsValueNode
                |-QNameNode=value3
                  |-NameIdentifierNode="value3"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isB" ((alias ref)) (alias boolean))
                |-QNameNode=isB
                  |-NameIdentifierNode="isB"
              |-ReferenceNode type=(alias A (struct A)) annotations=IsValueNode
                |-QNameNode=value3
                  |-NameIdentifierNode="value3"
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isEnum" ((alias ref)) (alias boolean))
                |-QNameNode=isEnum
                  |-NameIdentifierNode="isEnum"
              |-ReferenceNode type=(alias A (struct A)) annotations=IsValueNode
                |-QNameNode=value3
                  |-NameIdentifierNode="value3"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isRed" ((alias ref)) (alias boolean))
                |-QNameNode=isRed
                  |-NameIdentifierNode="isRed"
              |-ReferenceNode type=(alias A (struct A)) annotations=IsValueNode
                |-QNameNode=value3
                  |-NameIdentifierNode="value3"
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isRed" ((alias ref)) (alias boolean))
                |-QNameNode=isRed
                  |-NameIdentifierNode="isRed"
              |-ReferenceNode type=(alias Red (struct Red)) annotations=IsValueNode,ImplicitCall
                |-QNameNode=Red
                  |-NameIdentifierNode="Red"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isColor" ((alias ref)) (alias boolean))
                |-QNameNode=isColor
                  |-NameIdentifierNode="isColor"
              |-FunctionCallNode type=(alias Custom (struct Custom)) annotations=IsValueNode
                |-MemberNode type=(fun "apply" ((alias i32)) (alias Custom))
                  |-ReferenceNode type=(type (alias Custom (struct Custom)))
                    |-QNameNode=Custom
                      |-NameIdentifierNode="Custom"
                  |-NameIdentifierNode="apply"
                |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isCustom" ((alias ref)) (alias boolean))
                |-QNameNode=isCustom
                  |-NameIdentifierNode="isCustom"
              |-FunctionCallNode type=(alias Custom (struct Custom)) annotations=IsValueNode
                |-MemberNode type=(fun "apply" ((alias i32)) (alias Custom))
                  |-ReferenceNode type=(type (alias Custom (struct Custom)))
                    |-QNameNode=Custom
                      |-NameIdentifierNode="Custom"
                  |-NameIdentifierNode="apply"
                |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isRed" ((alias ref)) (alias boolean))
                |-QNameNode=isRed
                  |-NameIdentifierNode="isRed"
              |-FunctionCallNode type=(alias Custom (struct Custom)) annotations=IsValueNode
                |-MemberNode type=(fun "apply" ((alias i32)) (alias Custom))
                  |-ReferenceNode type=(type (alias Custom (struct Custom)))
                    |-QNameNode=Custom
                      |-NameIdentifierNode="Custom"
                  |-NameIdentifierNode="apply"
                |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
        |-FunctionCallNode type=(alias void (void))
          |-ReferenceNode type=(fun "assert" ((alias boolean)) (alias void))
            |-QNameNode=support::test::assert
              |-NameIdentifierNode="support"
              |-NameIdentifierNode="test"
              |-NameIdentifierNode="assert"
          |-BinaryExpressionNode="==" type=(alias boolean (native boolean)) annotations=IsValueNode
            |-NameIdentifierNode="=="
            |-FunctionCallNode type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isB" ((alias ref)) (alias boolean))
                |-QNameNode=isB
                  |-NameIdentifierNode="isB"
              |-FunctionCallNode type=(alias Custom (struct Custom)) annotations=IsValueNode
                |-MemberNode type=(fun "apply" ((alias i32)) (alias Custom))
                  |-ReferenceNode type=(type (alias Custom (struct Custom)))
                    |-QNameNode=Custom
                      |-NameIdentifierNode="Custom"
                  |-NameIdentifierNode="apply"
                |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
    |-NameIdentifierNode="testPassing" type=(fun "testPassing" () (alias void))