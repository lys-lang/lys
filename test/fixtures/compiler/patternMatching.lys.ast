
|-DocumentNode
  |-ImportDirectiveNode
    |-QNameNode=system::core
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
  |-TypeDirectiveNode
    |-NameIdentifierNode="Maybe" type=(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))))
    |-UnionTypeNode type=(type (union (alias None (struct)) (alias Some (struct value:<null>))))
      |-ReferenceNode type=(type (alias None (struct)))
        |-QNameNode=None
          |-NameIdentifierNode="None"
      |-ReferenceNode type=(type (alias Some (struct value:<null>)))
        |-QNameNode=Some
          |-NameIdentifierNode="Some"
  |-ImplDirective
    |-ReferenceNode
      |-QNameNode=Maybe
        |-NameIdentifierNode="Maybe"
    |-OverloadedFunctionNode type=(fun "is" ((union (alias Maybe) (alias ref))) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "is" ((union (alias Maybe) (alias ref))) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Maybe | ref#0)
            |-NameIdentifierNode="a" type=(union (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))) (alias ref (ref ?)))
            |-UnionTypeNode type=(type (union (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))) (alias ref (ref ?))))
              |-ReferenceNode type=(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))))
                |-QNameNode=Maybe
                  |-NameIdentifierNode="Maybe"
              |-ReferenceNode type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-NameIdentifierNode="is"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-BlockNode type=(alias boolean (native boolean)) annotations=IsValueNode
            |-BinaryExpressionNode=(fun "||" ((alias boolean) (alias boolean)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
              |-NameIdentifierNode="||"
              |-IsExpressionNode=(fun "is" ((union (alias None) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-ReferenceNode type=(union (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))) (alias ref (ref ?))) annotations=IsValueNode,Local(a:Maybe | ref#0)
                  |-QNameNode=a
                    |-NameIdentifierNode="a"
                |-ReferenceNode type=(type (alias None (struct)))
                  |-QNameNode=None
                    |-NameIdentifierNode="None"
              |-IsExpressionNode=(fun "is" ((union (alias Some) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-ReferenceNode type=(union (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))) (alias ref (ref ?))) annotations=IsValueNode,Local(a:Maybe | ref#0)
                  |-QNameNode=a
                    |-NameIdentifierNode="a"
                |-ReferenceNode type=(type (alias Some (struct value:<null>)))
                  |-QNameNode=Some
                    |-NameIdentifierNode="Some"
      |-NameIdentifierNode="is" type=(fun "is" ((union (alias Maybe) (alias ref))) (alias boolean))
    |-OverloadedFunctionNode type=(fun "as" ((alias Maybe)) (alias ref)) annotations=Injected
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode type=(fun "as" ((alias Maybe)) (alias ref)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Maybe#0)
            |-NameIdentifierNode="a" type=(alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>))))
            |-ReferenceNode type=(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))))
              |-QNameNode=Maybe
                |-NameIdentifierNode="Maybe"
          |-NameIdentifierNode="as" annotations=Explicit
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
      |-NameIdentifierNode="as" type=(fun "as" ((alias Maybe)) (alias ref))
    |-OverloadedFunctionNode type=(fun "==" ((alias ref) (alias ref)) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "==" ((alias ref) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:ref#1)
            |-NameIdentifierNode="rhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-NameIdentifierNode="=="
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-BinaryExpressionNode=(fun "==" ((alias ref) (alias ref)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
            |-NameIdentifierNode="=="
            |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode,Local(lhs:ref#0)
              |-QNameNode=lhs
                |-NameIdentifierNode="lhs"
            |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode,Local(rhs:ref#1)
              |-QNameNode=rhs
                |-NameIdentifierNode="rhs"
      |-NameIdentifierNode="==" type=(fun "==" ((alias ref) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "!=" ((alias ref) (alias ref)) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "!=" ((alias ref) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:ref#1)
            |-NameIdentifierNode="rhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-NameIdentifierNode="!="
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-BinaryExpressionNode=(fun "!=" ((alias ref) (alias ref)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
            |-NameIdentifierNode="!="
            |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode,Local(lhs:ref#0)
              |-QNameNode=lhs
                |-NameIdentifierNode="lhs"
            |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode,Local(rhs:ref#1)
              |-QNameNode=rhs
                |-NameIdentifierNode="rhs"
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias ref) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "store" ((alias ref) (alias Maybe) (alias u32)) (alias void)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "store" ((alias ref) (alias Maybe) (alias u32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:Maybe#1)
            |-NameIdentifierNode="rhs" type=(alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>))))
            |-ReferenceNode type=(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))))
              |-QNameNode=Maybe
                |-NameIdentifierNode="Maybe"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="store"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
      |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Maybe) (alias u32)) (alias void))
    |-OverloadedFunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Maybe)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Maybe)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="load"
          |-ReferenceNode type=(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))))
            |-QNameNode=Maybe
              |-NameIdentifierNode="Maybe"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
      |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Maybe))
  |-ImplDirective
    |-ReferenceNode
      |-QNameNode=None
        |-NameIdentifierNode="None"
    |-OverloadedFunctionNode type=(intersection (fun "as" ((alias None)) (alias Maybe)) (fun "as" ((alias None)) (alias ref))) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "as" ((alias None)) (alias Maybe)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:None#0)
            |-NameIdentifierNode="lhs" type=(alias None (struct))
            |-ReferenceNode type=(type (alias None (struct)))
              |-QNameNode=None
                |-NameIdentifierNode="None"
          |-NameIdentifierNode="as"
          |-ReferenceNode type=(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))))
            |-QNameNode=Maybe
              |-NameIdentifierNode="Maybe"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode type=(fun "as" ((alias None)) (alias ref)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:None#0)
            |-NameIdentifierNode="lhs" type=(alias None (struct))
            |-ReferenceNode type=(type (alias None (struct)))
              |-QNameNode=None
                |-NameIdentifierNode="None"
          |-NameIdentifierNode="as" annotations=Explicit
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((alias None)) (alias Maybe)) (fun "as" ((alias None)) (alias ref)))
    |-OverloadedFunctionNode type=(fun "None$discriminant" () (alias i64)) annotations=Injected
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "None$discriminant" () (alias i64)) annotations=IsOverloaded
          |-NameIdentifierNode="None$discriminant" annotations=Inline
          |-ReferenceNode type=(type (alias i64 (native i64)))
            |-QNameNode=i64
              |-NameIdentifierNode="i64"
          |-BlockNode type=(alias i64 (native i64)) annotations=IsValueNode
            |-ValDeclarationNode type=(native void) annotations=Local(test/fixtures/compiler/patternMatching.lys::discriminant:u32#0)
              |-NameIdentifierNode="discriminant" type=(alias u32 (native u32))
              |-ReferenceNode type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
              |-MemberNode type=(native u32) annotations=IsValueNode
                |-ReferenceNode type=(type (alias None (struct)))
                  |-QNameNode=None
                    |-NameIdentifierNode="None"
                |-NameIdentifierNode="discriminant"
            |-BinaryExpressionNode=(fun "<<" ((alias i64) (alias i32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode,IsReturnExpression
              |-NameIdentifierNode="<<"
              |-AsExpressionNode=(fun "as" ((alias u32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode
                |-ReferenceNode type=(alias u32 (native u32)) annotations=IsValueNode,Local(test/fixtures/compiler/patternMatching.lys::discriminant:u32#0)
                  |-QNameNode=discriminant
                    |-NameIdentifierNode="discriminant"
                |-ReferenceNode type=(type (alias i64 (native i64)))
                  |-QNameNode=i64
                    |-NameIdentifierNode="i64"
              |-IntegerLiteral=32 type=(alias i32 (native i32)) annotations=IsValueNode
      |-NameIdentifierNode="None$discriminant" type=(fun "None$discriminant" () (alias i64))
    |-OverloadedFunctionNode type=(fun "apply" () (alias None)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "apply" () (alias None)) annotations=IsOverloaded
          |-NameIdentifierNode="apply"
          |-ReferenceNode type=(type (alias None (struct)))
            |-QNameNode=None
              |-NameIdentifierNode="None"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-ReferenceNode type=(fun "None$discriminant" () (alias i64))
                |-QNameNode=None$discriminant
                  |-NameIdentifierNode="None$discriminant"
      |-NameIdentifierNode="apply" type=(fun "apply" () (alias None))
    |-OverloadedFunctionNode type=(fun "is" ((union (alias None) (alias ref))) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "is" ((union (alias None) (alias ref))) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:None | ref#0)
            |-NameIdentifierNode="a" type=(union (alias None (struct)) (alias ref (ref ?)))
            |-UnionTypeNode type=(type (union (alias None (struct)) (alias ref (ref ?))))
              |-ReferenceNode type=(type (alias None (struct)))
                |-QNameNode=None
                  |-NameIdentifierNode="None"
              |-ReferenceNode type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-NameIdentifierNode="is"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-HexLiteral=18446744069414584000
                |-WasmAtomNode
                  |-QNameNode=$a
                    |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-ReferenceNode type=(fun "None$discriminant" () (alias i64))
                  |-QNameNode=None$discriminant
                    |-NameIdentifierNode="None$discriminant"
      |-NameIdentifierNode="is" type=(fun "is" ((union (alias None) (alias ref))) (alias boolean))
    |-OverloadedFunctionNode type=(fun "==" ((alias None) (alias ref)) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "==" ((alias None) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:None#0)
            |-NameIdentifierNode="a" type=(alias None (struct))
            |-ReferenceNode type=(type (alias None (struct)))
              |-QNameNode=None
                |-NameIdentifierNode="None"
          |-ParameterNode annotations=Local(b:ref#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-NameIdentifierNode="=="
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
      |-NameIdentifierNode="==" type=(fun "==" ((alias None) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "!=" ((alias None) (alias ref)) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "!=" ((alias None) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:None#0)
            |-NameIdentifierNode="a" type=(alias None (struct))
            |-ReferenceNode type=(type (alias None (struct)))
              |-QNameNode=None
                |-NameIdentifierNode="None"
          |-ParameterNode annotations=Local(b:ref#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-NameIdentifierNode="!="
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias None) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "store" ((alias ref) (alias None) (alias u32)) (alias void)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "store" ((alias ref) (alias None) (alias u32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:None#1)
            |-NameIdentifierNode="rhs" type=(alias None (struct))
            |-ReferenceNode type=(type (alias None (struct)))
              |-QNameNode=None
                |-NameIdentifierNode="None"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="store"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
      |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias None) (alias u32)) (alias void))
    |-OverloadedFunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias None)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias None)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="load"
          |-ReferenceNode type=(type (alias None (struct)))
            |-QNameNode=None
              |-NameIdentifierNode="None"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
      |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias None))
  |-ImplDirective
    |-ReferenceNode
      |-QNameNode=Some
        |-NameIdentifierNode="Some"
    |-OverloadedFunctionNode type=(intersection (fun "as" ((alias Some)) (alias Maybe)) (fun "as" ((alias Some)) (alias ref))) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "as" ((alias Some)) (alias Maybe)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:Some#0)
            |-NameIdentifierNode="lhs" type=(alias Some (struct value:<null>))
            |-ReferenceNode type=(type (alias Some (struct value:<null>)))
              |-QNameNode=Some
                |-NameIdentifierNode="Some"
          |-NameIdentifierNode="as"
          |-ReferenceNode type=(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))))
            |-QNameNode=Maybe
              |-NameIdentifierNode="Maybe"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode type=(fun "as" ((alias Some)) (alias ref)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:Some#0)
            |-NameIdentifierNode="lhs" type=(alias Some (struct value:<null>))
            |-ReferenceNode type=(type (alias Some (struct value:<null>)))
              |-QNameNode=Some
                |-NameIdentifierNode="Some"
          |-NameIdentifierNode="as" annotations=Explicit
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((alias Some)) (alias Maybe)) (fun "as" ((alias Some)) (alias ref)))
    |-OverloadedFunctionNode type=(fun "Some$discriminant" () (alias u64)) annotations=Injected
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "Some$discriminant" () (alias u64)) annotations=IsOverloaded
          |-NameIdentifierNode="Some$discriminant" annotations=Inline
          |-ReferenceNode type=(type (alias u64 (native u64)))
            |-QNameNode=u64
              |-NameIdentifierNode="u64"
          |-BlockNode type=(alias u64 (native u64)) annotations=IsValueNode
            |-ValDeclarationNode type=(native void) annotations=Local(test/fixtures/compiler/patternMatching.lys::discriminant_3:u32#0)
              |-NameIdentifierNode="discriminant" type=(alias u32 (native u32))
              |-ReferenceNode type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
              |-MemberNode type=(native u32) annotations=IsValueNode
                |-ReferenceNode type=(type (alias Some (struct value:<null>)))
                  |-QNameNode=Some
                    |-NameIdentifierNode="Some"
                |-NameIdentifierNode="discriminant"
            |-BinaryExpressionNode=(fun "<<" ((alias u64) (alias i32)) (alias u64)) type=(alias u64 (native u64)) annotations=IsValueNode,IsReturnExpression
              |-NameIdentifierNode="<<"
              |-AsExpressionNode=(fun "as" ((alias u32)) (alias u64)) type=(alias u64 (native u64)) annotations=IsValueNode
                |-ReferenceNode type=(alias u32 (native u32)) annotations=IsValueNode,Local(test/fixtures/compiler/patternMatching.lys::discriminant_3:u32#0)
                  |-QNameNode=discriminant
                    |-NameIdentifierNode="discriminant"
                |-ReferenceNode type=(type (alias u64 (native u64)))
                  |-QNameNode=u64
                    |-NameIdentifierNode="u64"
              |-IntegerLiteral=32 type=(alias i32 (native i32)) annotations=IsValueNode
      |-NameIdentifierNode="Some$discriminant" type=(fun "Some$discriminant" () (alias u64))
    |-OverloadedFunctionNode type=(fun "apply" ((alias i32)) (alias Some)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "apply" ((alias i32)) (alias Some)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(value:i32#0)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-NameIdentifierNode="apply"
          |-ReferenceNode type=(type (alias Some (struct value:<null>)))
            |-QNameNode=Some
              |-NameIdentifierNode="Some"
          |-BlockNode type=(alias Some (struct value:<null>)) annotations=IsValueNode
            |-VarDeclarationNode type=(native void) annotations=Local(test/fixtures/compiler/patternMatching.lys::$ref:Some#1)
              |-NameIdentifierNode="$ref" type=(alias Some (struct value:<null>))
              |-FunctionCallNode=(fun "fromPointer" ((alias u32)) (alias Some)) type=(alias Some (struct value:<null>)) annotations=IsValueNode
                |-ReferenceNode type=(fun "fromPointer" ((alias u32)) (alias Some))
                  |-QNameNode=fromPointer
                    |-NameIdentifierNode="fromPointer"
                |-FunctionCallNode=(fun "calloc" ((alias u32) (alias u32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
                  |-ReferenceNode type=(fun "calloc" ((alias u32) (alias u32)) (alias u32))
                    |-QNameNode=system::memory::calloc
                      |-NameIdentifierNode="system"
                      |-NameIdentifierNode="memory"
                      |-NameIdentifierNode="calloc"
                  |-AsExpressionNode=(fun "as" ((alias i32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
                    |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
                    |-ReferenceNode type=(type (alias u32 (native u32)))
                      |-QNameNode=u32
                        |-NameIdentifierNode="u32"
                  |-MemberNode type=(native u32) annotations=IsValueNode
                    |-ReferenceNode type=(type (alias Some (struct value:<null>)))
                      |-QNameNode=Some
                        |-NameIdentifierNode="Some"
                    |-NameIdentifierNode="allocationSize"
            |-FunctionCallNode=(fun "property$0" ((alias Some) (alias i32)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "property$0" ((alias Some)) (alias i32)) (fun "property$0" ((alias Some) (alias i32)) (alias void)))
                |-QNameNode=property$0
                  |-NameIdentifierNode="property$0"
              |-ReferenceNode type=(alias Some (struct value:<null>)) annotations=IsValueNode,Local(test/fixtures/compiler/patternMatching.lys::$ref:Some#1)
                |-QNameNode=$ref
                  |-NameIdentifierNode="$ref"
              |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#0)
                |-QNameNode=value
                  |-NameIdentifierNode="value"
            |-ReferenceNode type=(alias Some (struct value:<null>)) annotations=IsValueNode,IsReturnExpression,Local(test/fixtures/compiler/patternMatching.lys::$ref:Some#1)
              |-QNameNode=$ref
                |-NameIdentifierNode="$ref"
      |-NameIdentifierNode="apply" type=(fun "apply" ((alias i32)) (alias Some))
    |-OverloadedFunctionNode type=(fun "fromPointer" ((alias u32)) (alias Some)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "fromPointer" ((alias u32)) (alias Some)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(ptr:u32#0)
            |-NameIdentifierNode="ptr" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="fromPointer"
          |-ReferenceNode type=(type (alias Some (struct value:<null>)))
            |-QNameNode=Some
              |-NameIdentifierNode="Some"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-ReferenceNode type=(fun "Some$discriminant" () (alias u64))
                  |-QNameNode=Some$discriminant
                    |-NameIdentifierNode="Some$discriminant"
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$ptr
                    |-NameIdentifierNode="$ptr"
      |-NameIdentifierNode="fromPointer" type=(fun "fromPointer" ((alias u32)) (alias Some))
    |-OverloadedFunctionNode type=(fun "==" ((alias Some) (alias Some)) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "==" ((alias Some) (alias Some)) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Some#0)
            |-NameIdentifierNode="a" type=(alias Some (struct value:<null>))
            |-ReferenceNode type=(type (alias Some (struct value:<null>)))
              |-QNameNode=Some
                |-NameIdentifierNode="Some"
          |-ParameterNode annotations=Local(b:Some#1)
            |-NameIdentifierNode="b" type=(alias Some (struct value:<null>))
            |-ReferenceNode type=(type (alias Some (struct value:<null>)))
              |-QNameNode=Some
                |-NameIdentifierNode="Some"
          |-NameIdentifierNode="=="
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
      |-NameIdentifierNode="==" type=(fun "==" ((alias Some) (alias Some)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "!=" ((alias Some) (alias Some)) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "!=" ((alias Some) (alias Some)) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Some#0)
            |-NameIdentifierNode="a" type=(alias Some (struct value:<null>))
            |-ReferenceNode type=(type (alias Some (struct value:<null>)))
              |-QNameNode=Some
                |-NameIdentifierNode="Some"
          |-ParameterNode annotations=Local(b:Some#1)
            |-NameIdentifierNode="b" type=(alias Some (struct value:<null>))
            |-ReferenceNode type=(type (alias Some (struct value:<null>)))
              |-QNameNode=Some
                |-NameIdentifierNode="Some"
          |-NameIdentifierNode="!="
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias Some) (alias Some)) (alias boolean))
    |-OverloadedFunctionNode type=(intersection (fun "property_value" ((alias Some)) (alias i32)) (fun "property_value" ((alias Some) (alias i32)) (alias void))) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_value" ((alias Some)) (alias i32)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Some#0)
            |-NameIdentifierNode="self" type=(alias Some (struct value:<null>))
            |-ReferenceNode type=(type (alias Some (struct value:<null>)))
              |-QNameNode=Some
                |-NameIdentifierNode="Some"
          |-NameIdentifierNode="property_value"
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "property$0" ((alias Some)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode type=(intersection (fun "property$0" ((alias Some)) (alias i32)) (fun "property$0" ((alias Some) (alias i32)) (alias void)))
              |-QNameNode=property$0
                |-NameIdentifierNode="property$0"
            |-ReferenceNode type=(alias Some (struct value:<null>)) annotations=IsValueNode,Local(self:Some#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_value" ((alias Some) (alias i32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Some#0)
            |-NameIdentifierNode="self" type=(alias Some (struct value:<null>))
            |-ReferenceNode type=(type (alias Some (struct value:<null>)))
              |-QNameNode=Some
                |-NameIdentifierNode="Some"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-NameIdentifierNode="property_value"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "property$0" ((alias Some) (alias i32)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "property$0" ((alias Some)) (alias i32)) (fun "property$0" ((alias Some) (alias i32)) (alias void)))
              |-QNameNode=property$0
                |-NameIdentifierNode="property$0"
            |-ReferenceNode type=(alias Some (struct value:<null>)) annotations=IsValueNode,Local(self:Some#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
      |-NameIdentifierNode="property_value" type=(intersection (fun "property_value" ((alias Some)) (alias i32)) (fun "property_value" ((alias Some) (alias i32)) (alias void)))
    |-OverloadedFunctionNode type=(intersection (fun "property$0" ((alias Some)) (alias i32)) (fun "property$0" ((alias Some) (alias i32)) (alias void))) annotations=Injected
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$0" ((alias Some)) (alias i32)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Some#0)
            |-NameIdentifierNode="self" type=(alias Some (struct value:<null>))
            |-ReferenceNode type=(type (alias Some (struct value:<null>)))
              |-QNameNode=Some
                |-NameIdentifierNode="Some"
          |-NameIdentifierNode="property$0" annotations=Inline
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "load" ((alias ref) (alias u32)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="load"
            |-ReferenceNode type=(alias Some (struct value:<null>)) annotations=IsValueNode,Local(self:Some#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Some (struct value:<null>)))
                |-QNameNode=Some
                  |-NameIdentifierNode="Some"
              |-NameIdentifierNode="property$0_offset"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$0" ((alias Some) (alias i32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Some#0)
            |-NameIdentifierNode="self" type=(alias Some (struct value:<null>))
            |-ReferenceNode type=(type (alias Some (struct value:<null>)))
              |-QNameNode=Some
                |-NameIdentifierNode="Some"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-NameIdentifierNode="property$0" annotations=Inline
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)) type=(alias void (native void))
            |-MemberNode type=(intersection (fun "store" ((alias ref) (alias i32)) (alias void)) (fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="store"
            |-ReferenceNode type=(alias Some (struct value:<null>)) annotations=IsValueNode,Local(self:Some#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Some (struct value:<null>)))
                |-QNameNode=Some
                  |-NameIdentifierNode="Some"
              |-NameIdentifierNode="property$0_offset"
      |-NameIdentifierNode="property$0" type=(intersection (fun "property$0" ((alias Some)) (alias i32)) (fun "property$0" ((alias Some) (alias i32)) (alias void)))
    |-OverloadedFunctionNode type=(fun "is" ((union (alias Some) (alias ref))) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "is" ((union (alias Some) (alias ref))) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Some | ref#0)
            |-NameIdentifierNode="a" type=(union (alias Some (struct value:<null>)) (alias ref (ref ?)))
            |-UnionTypeNode type=(type (union (alias Some (struct value:<null>)) (alias ref (ref ?))))
              |-ReferenceNode type=(type (alias Some (struct value:<null>)))
                |-QNameNode=Some
                  |-NameIdentifierNode="Some"
              |-ReferenceNode type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-NameIdentifierNode="is"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-HexLiteral=18446744069414584000
                |-WasmAtomNode
                  |-QNameNode=$a
                    |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-ReferenceNode type=(fun "Some$discriminant" () (alias u64))
                  |-QNameNode=Some$discriminant
                    |-NameIdentifierNode="Some$discriminant"
      |-NameIdentifierNode="is" type=(fun "is" ((union (alias Some) (alias ref))) (alias boolean))
    |-OverloadedFunctionNode type=(fun "store" ((alias ref) (alias Some) (alias u32)) (alias void)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "store" ((alias ref) (alias Some) (alias u32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:Some#1)
            |-NameIdentifierNode="rhs" type=(alias Some (struct value:<null>))
            |-ReferenceNode type=(type (alias Some (struct value:<null>)))
              |-QNameNode=Some
                |-NameIdentifierNode="Some"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="store"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
      |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Some) (alias u32)) (alias void))
    |-OverloadedFunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Some)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Some)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="load"
          |-ReferenceNode type=(type (alias Some (struct value:<null>)))
            |-QNameNode=Some
              |-NameIdentifierNode="Some"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
      |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Some))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="None" type=(type (alias None (struct)))
    |-StructTypeNode type=(type (alias None (struct)))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Some" type=(type (alias Some (struct value:<null>)))
    |-StructTypeNode type=(type (alias Some (struct value:<null>)))
      |-ParameterNode
        |-NameIdentifierNode="value"
        |-ReferenceNode
          |-QNameNode=i32
            |-NameIdentifierNode="i32"
  |-OverloadedFunctionNode type=(fun "test" ((alias i32)) (alias boolean)) annotations=Injected
    |-FunDirectiveNode
      |-DecoratorNode
        |-NameIdentifierNode="export"
      |-FunctionNode type=(fun "test" ((alias i32)) (alias boolean)) annotations=IsOverloaded
        |-ParameterNode annotations=Local(a:i32#0)
          |-NameIdentifierNode="a" type=(alias i32 (native i32))
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
        |-NameIdentifierNode="test" annotations=Export
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-PatternMatcherNode type=(alias boolean (native boolean)) annotations=IsValueNode,Local(var$1:i32#1)
          |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(a:i32#0)
            |-QNameNode=a
              |-NameIdentifierNode="a"
          |-MatchLiteralNode type=(alias boolean (native boolean)) annotations=IsValueNode,Local(var$1:i32#1)
            |-IntegerLiteral=1 type=(alias i32 (native i32))
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
          |-MatchDefaultNode type=(alias boolean (native boolean)) annotations=IsValueNode,Local(var$1:i32#1)
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
    |-NameIdentifierNode="test" type=(fun "test" ((alias i32)) (alias boolean))
  |-OverloadedFunctionNode type=(fun "test2" ((alias i32)) (alias i32)) annotations=Injected
    |-FunDirectiveNode
      |-DecoratorNode
        |-NameIdentifierNode="export"
      |-FunctionNode type=(fun "test2" ((alias i32)) (alias i32)) annotations=IsOverloaded
        |-ParameterNode annotations=Local(a:i32#0)
          |-NameIdentifierNode="a" type=(alias i32 (native i32))
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
        |-NameIdentifierNode="test2" annotations=Export
        |-ReferenceNode type=(type (alias i32 (native i32)))
          |-QNameNode=i32
            |-NameIdentifierNode="i32"
        |-PatternMatcherNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(var$1:i32#1)
          |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(a:i32#0)
            |-QNameNode=a
              |-NameIdentifierNode="a"
          |-MatchLiteralNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(var$1:i32#1)
            |-IntegerLiteral=10 type=(alias i32 (native i32))
            |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
          |-MatchLiteralNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(var$1:i32#1)
            |-IntegerLiteral=20 type=(alias i32 (native i32))
            |-IntegerLiteral=2 type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
          |-MatchLiteralNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(var$1:i32#1)
            |-IntegerLiteral=30 type=(alias i32 (native i32))
            |-IntegerLiteral=3 type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
          |-MatchLiteralNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(var$1:i32#1)
            |-IntegerLiteral=40 type=(alias i32 (native i32))
            |-IntegerLiteral=4 type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
          |-MatchLiteralNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(var$1:i32#1)
            |-IntegerLiteral=50 type=(alias i32 (native i32))
            |-IntegerLiteral=5 type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
          |-MatchLiteralNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(var$1:i32#1)
            |-IntegerLiteral=60 type=(alias i32 (native i32))
            |-IntegerLiteral=6 type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
          |-MatchLiteralNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(var$1:i32#1)
            |-IntegerLiteral=70 type=(alias i32 (native i32))
            |-IntegerLiteral=7 type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
          |-MatchLiteralNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(var$1:i32#1)
            |-IntegerLiteral=80 type=(alias i32 (native i32))
            |-IntegerLiteral=8 type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
          |-MatchLiteralNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(var$1:i32#1)
            |-IntegerLiteral=90 type=(alias i32 (native i32))
            |-IntegerLiteral=9 type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
          |-MatchDefaultNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(var$1:i32#1)
            |-IntegerLiteral=0 type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
    |-NameIdentifierNode="test2" type=(fun "test2" ((alias i32)) (alias i32))
  |-OverloadedFunctionNode type=(fun "test3" ((alias Maybe)) (alias boolean)) annotations=Injected
    |-FunDirectiveNode
      |-DecoratorNode
        |-NameIdentifierNode="export"
      |-FunctionNode type=(fun "test3" ((alias Maybe)) (alias boolean)) annotations=IsOverloaded
        |-ParameterNode annotations=Local(a:Maybe#0)
          |-NameIdentifierNode="a" type=(alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>))))
          |-ReferenceNode type=(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))))
            |-QNameNode=Maybe
              |-NameIdentifierNode="Maybe"
        |-NameIdentifierNode="test3" annotations=Export
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-PatternMatcherNode type=(alias boolean (native boolean)) annotations=IsValueNode,Local(var$1:Maybe#1)
          |-ReferenceNode type=(alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))) annotations=IsValueNode,Local(a:Maybe#0)
            |-QNameNode=a
              |-NameIdentifierNode="a"
          |-MatchCaseIsNode type=(alias boolean (native boolean)) annotations=IsValueNode,Local(var$1:Maybe#1)
            |-NameIdentifierNode="$" type=(alias Some (struct value:<null>))
            |-ReferenceNode type=(type (alias Some (struct value:<null>)))
              |-QNameNode=Some
                |-NameIdentifierNode="Some"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
          |-MatchCaseIsNode type=(alias boolean (native boolean)) annotations=IsValueNode,Local(var$1:Maybe#1)
            |-NameIdentifierNode="$" type=(alias None (struct))
            |-ReferenceNode type=(type (alias None (struct)))
              |-QNameNode=None
                |-NameIdentifierNode="None"
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
    |-NameIdentifierNode="test3" type=(fun "test3" ((alias Maybe)) (alias boolean))
  |-OverloadedFunctionNode type=(fun "test4" ((alias Maybe)) (alias Some)) annotations=Injected
    |-FunDirectiveNode
      |-DecoratorNode
        |-NameIdentifierNode="export"
      |-FunctionNode type=(fun "test4" ((alias Maybe)) (alias Some)) annotations=IsOverloaded
        |-ParameterNode annotations=Local(a:Maybe#0)
          |-NameIdentifierNode="a" type=(alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>))))
          |-ReferenceNode type=(type (alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))))
            |-QNameNode=Maybe
              |-NameIdentifierNode="Maybe"
        |-NameIdentifierNode="test4" annotations=Export
        |-ReferenceNode type=(type (alias Some (struct value:<null>)))
          |-QNameNode=Some
            |-NameIdentifierNode="Some"
        |-PatternMatcherNode type=(alias Some (struct value:<null>)) annotations=IsValueNode,Local(var$1:Maybe#1)
          |-ReferenceNode type=(alias Maybe (union (alias None (struct)) (alias Some (struct value:<null>)))) annotations=IsValueNode,Local(a:Maybe#0)
            |-QNameNode=a
              |-NameIdentifierNode="a"
          |-MatchCaseIsNode type=(alias Some (struct value:<null>)) annotations=IsValueNode,Local(var$1:Maybe#1)
            |-NameIdentifierNode="x" type=(alias Some (struct value:<null>))
            |-ReferenceNode type=(type (alias Some (struct value:<null>)))
              |-QNameNode=Some
                |-NameIdentifierNode="Some"
            |-ReferenceNode type=(alias Some (struct value:<null>)) annotations=IsValueNode,IsReturnExpression,Local(var$1:Maybe#1)
              |-QNameNode=x
                |-NameIdentifierNode="x"
          |-MatchCaseIsNode type=(alias Some (struct value:<null>)) annotations=IsValueNode,Local(var$1:Maybe#1)
            |-NameIdentifierNode="$" type=(alias None (struct))
            |-ReferenceNode type=(type (alias None (struct)))
              |-QNameNode=None
                |-NameIdentifierNode="None"
            |-FunctionCallNode=(fun "apply" ((alias i32)) (alias Some)) type=(alias Some (struct value:<null>)) annotations=IsValueNode,IsReturnExpression
              |-MemberNode type=(fun "apply" ((alias i32)) (alias Some))
                |-ReferenceNode type=(type (alias Some (struct value:<null>)))
                  |-QNameNode=Some
                    |-NameIdentifierNode="Some"
                |-NameIdentifierNode="apply"
              |-IntegerLiteral=0 type=(alias i32 (native i32)) annotations=IsValueNode
    |-NameIdentifierNode="test4" type=(fun "test4" ((alias Maybe)) (alias Some))