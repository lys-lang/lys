
|-DocumentNode
  |-ImportDirectiveNode
    |-QNameNode=system::core
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
  |-TypeDirectiveNode
    |-NameIdentifierNode="Color" type=(type (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>)))))
    |-UnionTypeNode type=(type (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>))))
      |-ReferenceNode type=(type (alias Red (struct)))
        |-QNameNode=Red
          |-NameIdentifierNode="Red"
      |-ReferenceNode type=(type (alias Green (struct)))
        |-QNameNode=Green
          |-NameIdentifierNode="Green"
      |-ReferenceNode type=(type (alias Blue (struct)))
        |-QNameNode=Blue
          |-NameIdentifierNode="Blue"
      |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
        |-QNameNode=Custom
          |-NameIdentifierNode="Custom"
  |-ImplDirective
    |-ReferenceNode
      |-QNameNode=Color
        |-NameIdentifierNode="Color"
    |-OverloadedFunctionNode type=(fun "is" ((union (alias Color) (alias ref))) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="is" type=(fun "is" ((union (alias Color) (alias ref))) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "is" ((union (alias Color) (alias ref))) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="is"
          |-ParameterNode annotations=Local(a:Color | ref#0)
            |-NameIdentifierNode="a" type=(union (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>)))) (alias ref (ref ?)))
            |-UnionTypeNode type=(type (union (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>)))) (alias ref (ref ?))))
              |-ReferenceNode type=(type (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>)))))
                |-QNameNode=Color
                  |-NameIdentifierNode="Color"
              |-ReferenceNode type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-BlockNode type=(alias boolean (native boolean)) annotations=IsValueNode
            |-BinaryExpressionNode=(fun "||" ((alias boolean) (alias boolean)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
              |-BinaryExpressionNode=(fun "||" ((alias boolean) (alias boolean)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-BinaryExpressionNode=(fun "||" ((alias boolean) (alias boolean)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                  |-IsExpressionNode=(fun "is" ((union (alias Red) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                    |-ReferenceNode type=(union (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>)))) (alias ref (ref ?))) annotations=IsValueNode,Local(a:Color | ref#0)
                      |-QNameNode=a
                        |-NameIdentifierNode="a"
                    |-ReferenceNode type=(type (alias Red (struct)))
                      |-QNameNode=Red
                        |-NameIdentifierNode="Red"
                  |-NameIdentifierNode="||"
                  |-IsExpressionNode=(fun "is" ((union (alias Green) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                    |-ReferenceNode type=(union (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>)))) (alias ref (ref ?))) annotations=IsValueNode,Local(a:Color | ref#0)
                      |-QNameNode=a
                        |-NameIdentifierNode="a"
                    |-ReferenceNode type=(type (alias Green (struct)))
                      |-QNameNode=Green
                        |-NameIdentifierNode="Green"
                |-NameIdentifierNode="||"
                |-IsExpressionNode=(fun "is" ((union (alias Blue) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                  |-ReferenceNode type=(union (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>)))) (alias ref (ref ?))) annotations=IsValueNode,Local(a:Color | ref#0)
                    |-QNameNode=a
                      |-NameIdentifierNode="a"
                  |-ReferenceNode type=(type (alias Blue (struct)))
                    |-QNameNode=Blue
                      |-NameIdentifierNode="Blue"
              |-NameIdentifierNode="||"
              |-IsExpressionNode=(fun "is" ((union (alias Custom) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-ReferenceNode type=(union (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>)))) (alias ref (ref ?))) annotations=IsValueNode,Local(a:Color | ref#0)
                  |-QNameNode=a
                    |-NameIdentifierNode="a"
                |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
                  |-QNameNode=Custom
                    |-NameIdentifierNode="Custom"
    |-OverloadedFunctionNode type=(fun "as" ((alias Color)) (alias ref)) annotations=Injected
      |-NameIdentifierNode="as" type=(fun "as" ((alias Color)) (alias ref))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode type=(fun "as" ((alias Color)) (alias ref)) annotations=IsOverloaded
          |-NameIdentifierNode="as" annotations=Explicit
          |-ParameterNode annotations=Local(a:Color#0)
            |-NameIdentifierNode="a" type=(alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>))))
            |-ReferenceNode type=(type (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>)))))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
    |-OverloadedFunctionNode type=(fun "==" ((alias ref) (alias ref)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="==" type=(fun "==" ((alias ref) (alias ref)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "==" ((alias ref) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="=="
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:ref#1)
            |-NameIdentifierNode="rhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-BinaryExpressionNode=(fun "==" ((alias ref) (alias ref)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode,Local(lhs:ref#0)
              |-QNameNode=lhs
                |-NameIdentifierNode="lhs"
            |-NameIdentifierNode="=="
            |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode,Local(rhs:ref#1)
              |-QNameNode=rhs
                |-NameIdentifierNode="rhs"
    |-OverloadedFunctionNode type=(fun "!=" ((alias ref) (alias ref)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias ref) (alias ref)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "!=" ((alias ref) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="!="
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:ref#1)
            |-NameIdentifierNode="rhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-BinaryExpressionNode=(fun "!=" ((alias ref) (alias ref)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode,Local(lhs:ref#0)
              |-QNameNode=lhs
                |-NameIdentifierNode="lhs"
            |-NameIdentifierNode="!="
            |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode,Local(rhs:ref#1)
              |-QNameNode=rhs
                |-NameIdentifierNode="rhs"
    |-OverloadedFunctionNode type=(fun "store" ((alias ref) (alias Color) (alias u32)) (alias void)) annotations=Injected
      |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Color) (alias u32)) (alias void))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "store" ((alias ref) (alias Color) (alias u32)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="store"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:Color#1)
            |-NameIdentifierNode="rhs" type=(alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>))))
            |-ReferenceNode type=(type (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>)))))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
    |-OverloadedFunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Color)) annotations=Injected
      |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Color))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Color)) annotations=IsOverloaded
          |-NameIdentifierNode="load"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>)))))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
  |-ImplDirective
    |-ReferenceNode
      |-QNameNode=Red
        |-NameIdentifierNode="Red"
    |-OverloadedFunctionNode type=(intersection (fun "as" ((alias Red)) (alias Color)) (fun "as" ((alias Red)) (alias ref))) annotations=Injected
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((alias Red)) (alias Color)) (fun "as" ((alias Red)) (alias ref)))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "as" ((alias Red)) (alias Color)) annotations=IsOverloaded
          |-NameIdentifierNode="as"
          |-ParameterNode annotations=Local(lhs:Red#0)
            |-NameIdentifierNode="lhs" type=(alias Red (struct))
            |-ReferenceNode type=(type (alias Red (struct)))
              |-QNameNode=Red
                |-NameIdentifierNode="Red"
          |-ReferenceNode type=(type (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>)))))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode type=(fun "as" ((alias Red)) (alias ref)) annotations=IsOverloaded
          |-NameIdentifierNode="as" annotations=Explicit
          |-ParameterNode annotations=Local(lhs:Red#0)
            |-NameIdentifierNode="lhs" type=(alias Red (struct))
            |-ReferenceNode type=(type (alias Red (struct)))
              |-QNameNode=Red
                |-NameIdentifierNode="Red"
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
    |-OverloadedFunctionNode type=(fun "Red$discriminant" () (alias i64)) annotations=Injected
      |-NameIdentifierNode="Red$discriminant" type=(fun "Red$discriminant" () (alias i64))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "Red$discriminant" () (alias i64)) annotations=IsOverloaded
          |-NameIdentifierNode="Red$discriminant" annotations=Inline
          |-ReferenceNode type=(type (alias i64 (native i64)))
            |-QNameNode=i64
              |-NameIdentifierNode="i64"
          |-BlockNode type=(alias i64 (native i64)) annotations=IsValueNode
            |-ValDeclarationNode type=(native void) annotations=Local(test::fixtures::compiler::deconstruct::discriminant:u32#0)
              |-NameIdentifierNode="discriminant" type=(alias u32 (native u32))
              |-ReferenceNode type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
              |-MemberNode type=(native u32) annotations=IsValueNode
                |-ReferenceNode type=(type (alias Red (struct)))
                  |-QNameNode=Red
                    |-NameIdentifierNode="Red"
                |-NameIdentifierNode="discriminant"
            |-BinaryExpressionNode=(fun "<<" ((alias i64) (alias i32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode,IsReturnExpression
              |-AsExpressionNode=(fun "as" ((alias u32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode
                |-ReferenceNode type=(alias u32 (native u32)) annotations=IsValueNode,Local(test::fixtures::compiler::deconstruct::discriminant:u32#0)
                  |-QNameNode=discriminant
                    |-NameIdentifierNode="discriminant"
                |-ReferenceNode type=(type (alias i64 (native i64)))
                  |-QNameNode=i64
                    |-NameIdentifierNode="i64"
              |-NameIdentifierNode="<<"
              |-IntegerLiteral=32 type=(alias i32 (native i32)) annotations=IsValueNode
    |-OverloadedFunctionNode type=(fun "apply" () (alias Red)) annotations=Injected
      |-NameIdentifierNode="apply" type=(fun "apply" () (alias Red))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "apply" () (alias Red)) annotations=IsOverloaded
          |-NameIdentifierNode="apply"
          |-ReferenceNode type=(type (alias Red (struct)))
            |-QNameNode=Red
              |-NameIdentifierNode="Red"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-ReferenceNode type=(fun "Red$discriminant" () (alias i64))
                |-QNameNode=Red$discriminant
                  |-NameIdentifierNode="Red$discriminant"
    |-OverloadedFunctionNode type=(fun "is" ((union (alias Red) (alias ref))) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="is" type=(fun "is" ((union (alias Red) (alias ref))) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "is" ((union (alias Red) (alias ref))) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="is"
          |-ParameterNode annotations=Local(a:Red | ref#0)
            |-NameIdentifierNode="a" type=(union (alias Red (struct)) (alias ref (ref ?)))
            |-UnionTypeNode type=(type (union (alias Red (struct)) (alias ref (ref ?))))
              |-ReferenceNode type=(type (alias Red (struct)))
                |-QNameNode=Red
                  |-NameIdentifierNode="Red"
              |-ReferenceNode type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-HexLiteral=18446744069414584000
                |-WasmAtomNode
                  |-QNameNode=$a
                    |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-ReferenceNode type=(fun "Red$discriminant" () (alias i64))
                  |-QNameNode=Red$discriminant
                    |-NameIdentifierNode="Red$discriminant"
    |-OverloadedFunctionNode type=(fun "==" ((alias Red) (alias ref)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="==" type=(fun "==" ((alias Red) (alias ref)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "==" ((alias Red) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="=="
          |-ParameterNode annotations=Local(a:Red#0)
            |-NameIdentifierNode="a" type=(alias Red (struct))
            |-ReferenceNode type=(type (alias Red (struct)))
              |-QNameNode=Red
                |-NameIdentifierNode="Red"
          |-ParameterNode annotations=Local(b:ref#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode type=(fun "!=" ((alias Red) (alias ref)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias Red) (alias ref)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "!=" ((alias Red) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="!="
          |-ParameterNode annotations=Local(a:Red#0)
            |-NameIdentifierNode="a" type=(alias Red (struct))
            |-ReferenceNode type=(type (alias Red (struct)))
              |-QNameNode=Red
                |-NameIdentifierNode="Red"
          |-ParameterNode annotations=Local(b:ref#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode type=(fun "store" ((alias ref) (alias Red) (alias u32)) (alias void)) annotations=Injected
      |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Red) (alias u32)) (alias void))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "store" ((alias ref) (alias Red) (alias u32)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="store"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:Red#1)
            |-NameIdentifierNode="rhs" type=(alias Red (struct))
            |-ReferenceNode type=(type (alias Red (struct)))
              |-QNameNode=Red
                |-NameIdentifierNode="Red"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
    |-OverloadedFunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Red)) annotations=Injected
      |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Red))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Red)) annotations=IsOverloaded
          |-NameIdentifierNode="load"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias Red (struct)))
            |-QNameNode=Red
              |-NameIdentifierNode="Red"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
  |-ImplDirective
    |-ReferenceNode
      |-QNameNode=Green
        |-NameIdentifierNode="Green"
    |-OverloadedFunctionNode type=(intersection (fun "as" ((alias Green)) (alias Color)) (fun "as" ((alias Green)) (alias ref))) annotations=Injected
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((alias Green)) (alias Color)) (fun "as" ((alias Green)) (alias ref)))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "as" ((alias Green)) (alias Color)) annotations=IsOverloaded
          |-NameIdentifierNode="as"
          |-ParameterNode annotations=Local(lhs:Green#0)
            |-NameIdentifierNode="lhs" type=(alias Green (struct))
            |-ReferenceNode type=(type (alias Green (struct)))
              |-QNameNode=Green
                |-NameIdentifierNode="Green"
          |-ReferenceNode type=(type (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>)))))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode type=(fun "as" ((alias Green)) (alias ref)) annotations=IsOverloaded
          |-NameIdentifierNode="as" annotations=Explicit
          |-ParameterNode annotations=Local(lhs:Green#0)
            |-NameIdentifierNode="lhs" type=(alias Green (struct))
            |-ReferenceNode type=(type (alias Green (struct)))
              |-QNameNode=Green
                |-NameIdentifierNode="Green"
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
    |-OverloadedFunctionNode type=(fun "Green$discriminant" () (alias i64)) annotations=Injected
      |-NameIdentifierNode="Green$discriminant" type=(fun "Green$discriminant" () (alias i64))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "Green$discriminant" () (alias i64)) annotations=IsOverloaded
          |-NameIdentifierNode="Green$discriminant" annotations=Inline
          |-ReferenceNode type=(type (alias i64 (native i64)))
            |-QNameNode=i64
              |-NameIdentifierNode="i64"
          |-BlockNode type=(alias i64 (native i64)) annotations=IsValueNode
            |-ValDeclarationNode type=(native void) annotations=Local(test::fixtures::compiler::deconstruct::discriminant_3:u32#0)
              |-NameIdentifierNode="discriminant" type=(alias u32 (native u32))
              |-ReferenceNode type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
              |-MemberNode type=(native u32) annotations=IsValueNode
                |-ReferenceNode type=(type (alias Green (struct)))
                  |-QNameNode=Green
                    |-NameIdentifierNode="Green"
                |-NameIdentifierNode="discriminant"
            |-BinaryExpressionNode=(fun "<<" ((alias i64) (alias i32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode,IsReturnExpression
              |-AsExpressionNode=(fun "as" ((alias u32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode
                |-ReferenceNode type=(alias u32 (native u32)) annotations=IsValueNode,Local(test::fixtures::compiler::deconstruct::discriminant_3:u32#0)
                  |-QNameNode=discriminant
                    |-NameIdentifierNode="discriminant"
                |-ReferenceNode type=(type (alias i64 (native i64)))
                  |-QNameNode=i64
                    |-NameIdentifierNode="i64"
              |-NameIdentifierNode="<<"
              |-IntegerLiteral=32 type=(alias i32 (native i32)) annotations=IsValueNode
    |-OverloadedFunctionNode type=(fun "apply" () (alias Green)) annotations=Injected
      |-NameIdentifierNode="apply" type=(fun "apply" () (alias Green))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "apply" () (alias Green)) annotations=IsOverloaded
          |-NameIdentifierNode="apply"
          |-ReferenceNode type=(type (alias Green (struct)))
            |-QNameNode=Green
              |-NameIdentifierNode="Green"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-ReferenceNode type=(fun "Green$discriminant" () (alias i64))
                |-QNameNode=Green$discriminant
                  |-NameIdentifierNode="Green$discriminant"
    |-OverloadedFunctionNode type=(fun "is" ((union (alias Green) (alias ref))) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="is" type=(fun "is" ((union (alias Green) (alias ref))) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "is" ((union (alias Green) (alias ref))) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="is"
          |-ParameterNode annotations=Local(a:Green | ref#0)
            |-NameIdentifierNode="a" type=(union (alias Green (struct)) (alias ref (ref ?)))
            |-UnionTypeNode type=(type (union (alias Green (struct)) (alias ref (ref ?))))
              |-ReferenceNode type=(type (alias Green (struct)))
                |-QNameNode=Green
                  |-NameIdentifierNode="Green"
              |-ReferenceNode type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-HexLiteral=18446744069414584000
                |-WasmAtomNode
                  |-QNameNode=$a
                    |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-ReferenceNode type=(fun "Green$discriminant" () (alias i64))
                  |-QNameNode=Green$discriminant
                    |-NameIdentifierNode="Green$discriminant"
    |-OverloadedFunctionNode type=(fun "==" ((alias Green) (alias ref)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="==" type=(fun "==" ((alias Green) (alias ref)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "==" ((alias Green) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="=="
          |-ParameterNode annotations=Local(a:Green#0)
            |-NameIdentifierNode="a" type=(alias Green (struct))
            |-ReferenceNode type=(type (alias Green (struct)))
              |-QNameNode=Green
                |-NameIdentifierNode="Green"
          |-ParameterNode annotations=Local(b:ref#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode type=(fun "!=" ((alias Green) (alias ref)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias Green) (alias ref)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "!=" ((alias Green) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="!="
          |-ParameterNode annotations=Local(a:Green#0)
            |-NameIdentifierNode="a" type=(alias Green (struct))
            |-ReferenceNode type=(type (alias Green (struct)))
              |-QNameNode=Green
                |-NameIdentifierNode="Green"
          |-ParameterNode annotations=Local(b:ref#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode type=(fun "store" ((alias ref) (alias Green) (alias u32)) (alias void)) annotations=Injected
      |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Green) (alias u32)) (alias void))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "store" ((alias ref) (alias Green) (alias u32)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="store"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:Green#1)
            |-NameIdentifierNode="rhs" type=(alias Green (struct))
            |-ReferenceNode type=(type (alias Green (struct)))
              |-QNameNode=Green
                |-NameIdentifierNode="Green"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
    |-OverloadedFunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Green)) annotations=Injected
      |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Green))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Green)) annotations=IsOverloaded
          |-NameIdentifierNode="load"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias Green (struct)))
            |-QNameNode=Green
              |-NameIdentifierNode="Green"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
  |-ImplDirective
    |-ReferenceNode
      |-QNameNode=Blue
        |-NameIdentifierNode="Blue"
    |-OverloadedFunctionNode type=(intersection (fun "as" ((alias Blue)) (alias Color)) (fun "as" ((alias Blue)) (alias ref))) annotations=Injected
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((alias Blue)) (alias Color)) (fun "as" ((alias Blue)) (alias ref)))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "as" ((alias Blue)) (alias Color)) annotations=IsOverloaded
          |-NameIdentifierNode="as"
          |-ParameterNode annotations=Local(lhs:Blue#0)
            |-NameIdentifierNode="lhs" type=(alias Blue (struct))
            |-ReferenceNode type=(type (alias Blue (struct)))
              |-QNameNode=Blue
                |-NameIdentifierNode="Blue"
          |-ReferenceNode type=(type (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>)))))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode type=(fun "as" ((alias Blue)) (alias ref)) annotations=IsOverloaded
          |-NameIdentifierNode="as" annotations=Explicit
          |-ParameterNode annotations=Local(lhs:Blue#0)
            |-NameIdentifierNode="lhs" type=(alias Blue (struct))
            |-ReferenceNode type=(type (alias Blue (struct)))
              |-QNameNode=Blue
                |-NameIdentifierNode="Blue"
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
    |-OverloadedFunctionNode type=(fun "Blue$discriminant" () (alias i64)) annotations=Injected
      |-NameIdentifierNode="Blue$discriminant" type=(fun "Blue$discriminant" () (alias i64))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "Blue$discriminant" () (alias i64)) annotations=IsOverloaded
          |-NameIdentifierNode="Blue$discriminant" annotations=Inline
          |-ReferenceNode type=(type (alias i64 (native i64)))
            |-QNameNode=i64
              |-NameIdentifierNode="i64"
          |-BlockNode type=(alias i64 (native i64)) annotations=IsValueNode
            |-ValDeclarationNode type=(native void) annotations=Local(test::fixtures::compiler::deconstruct::discriminant_6:u32#0)
              |-NameIdentifierNode="discriminant" type=(alias u32 (native u32))
              |-ReferenceNode type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
              |-MemberNode type=(native u32) annotations=IsValueNode
                |-ReferenceNode type=(type (alias Blue (struct)))
                  |-QNameNode=Blue
                    |-NameIdentifierNode="Blue"
                |-NameIdentifierNode="discriminant"
            |-BinaryExpressionNode=(fun "<<" ((alias i64) (alias i32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode,IsReturnExpression
              |-AsExpressionNode=(fun "as" ((alias u32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode
                |-ReferenceNode type=(alias u32 (native u32)) annotations=IsValueNode,Local(test::fixtures::compiler::deconstruct::discriminant_6:u32#0)
                  |-QNameNode=discriminant
                    |-NameIdentifierNode="discriminant"
                |-ReferenceNode type=(type (alias i64 (native i64)))
                  |-QNameNode=i64
                    |-NameIdentifierNode="i64"
              |-NameIdentifierNode="<<"
              |-IntegerLiteral=32 type=(alias i32 (native i32)) annotations=IsValueNode
    |-OverloadedFunctionNode type=(fun "apply" () (alias Blue)) annotations=Injected
      |-NameIdentifierNode="apply" type=(fun "apply" () (alias Blue))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "apply" () (alias Blue)) annotations=IsOverloaded
          |-NameIdentifierNode="apply"
          |-ReferenceNode type=(type (alias Blue (struct)))
            |-QNameNode=Blue
              |-NameIdentifierNode="Blue"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-ReferenceNode type=(fun "Blue$discriminant" () (alias i64))
                |-QNameNode=Blue$discriminant
                  |-NameIdentifierNode="Blue$discriminant"
    |-OverloadedFunctionNode type=(fun "is" ((union (alias Blue) (alias ref))) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="is" type=(fun "is" ((union (alias Blue) (alias ref))) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "is" ((union (alias Blue) (alias ref))) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="is"
          |-ParameterNode annotations=Local(a:Blue | ref#0)
            |-NameIdentifierNode="a" type=(union (alias Blue (struct)) (alias ref (ref ?)))
            |-UnionTypeNode type=(type (union (alias Blue (struct)) (alias ref (ref ?))))
              |-ReferenceNode type=(type (alias Blue (struct)))
                |-QNameNode=Blue
                  |-NameIdentifierNode="Blue"
              |-ReferenceNode type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-HexLiteral=18446744069414584000
                |-WasmAtomNode
                  |-QNameNode=$a
                    |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-ReferenceNode type=(fun "Blue$discriminant" () (alias i64))
                  |-QNameNode=Blue$discriminant
                    |-NameIdentifierNode="Blue$discriminant"
    |-OverloadedFunctionNode type=(fun "==" ((alias Blue) (alias ref)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="==" type=(fun "==" ((alias Blue) (alias ref)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "==" ((alias Blue) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="=="
          |-ParameterNode annotations=Local(a:Blue#0)
            |-NameIdentifierNode="a" type=(alias Blue (struct))
            |-ReferenceNode type=(type (alias Blue (struct)))
              |-QNameNode=Blue
                |-NameIdentifierNode="Blue"
          |-ParameterNode annotations=Local(b:ref#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode type=(fun "!=" ((alias Blue) (alias ref)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias Blue) (alias ref)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "!=" ((alias Blue) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="!="
          |-ParameterNode annotations=Local(a:Blue#0)
            |-NameIdentifierNode="a" type=(alias Blue (struct))
            |-ReferenceNode type=(type (alias Blue (struct)))
              |-QNameNode=Blue
                |-NameIdentifierNode="Blue"
          |-ParameterNode annotations=Local(b:ref#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode type=(fun "store" ((alias ref) (alias Blue) (alias u32)) (alias void)) annotations=Injected
      |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Blue) (alias u32)) (alias void))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "store" ((alias ref) (alias Blue) (alias u32)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="store"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:Blue#1)
            |-NameIdentifierNode="rhs" type=(alias Blue (struct))
            |-ReferenceNode type=(type (alias Blue (struct)))
              |-QNameNode=Blue
                |-NameIdentifierNode="Blue"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
    |-OverloadedFunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Blue)) annotations=Injected
      |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Blue))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Blue)) annotations=IsOverloaded
          |-NameIdentifierNode="load"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias Blue (struct)))
            |-QNameNode=Blue
              |-NameIdentifierNode="Blue"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
  |-ImplDirective
    |-ReferenceNode
      |-QNameNode=Custom
        |-NameIdentifierNode="Custom"
    |-OverloadedFunctionNode type=(intersection (fun "as" ((alias Custom)) (alias Color)) (fun "as" ((alias Custom)) (alias ref))) annotations=Injected
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((alias Custom)) (alias Color)) (fun "as" ((alias Custom)) (alias ref)))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "as" ((alias Custom)) (alias Color)) annotations=IsOverloaded
          |-NameIdentifierNode="as"
          |-ParameterNode annotations=Local(lhs:Custom#0)
            |-NameIdentifierNode="lhs" type=(alias Custom (struct a:<null>))
            |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ReferenceNode type=(type (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>)))))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode type=(fun "as" ((alias Custom)) (alias ref)) annotations=IsOverloaded
          |-NameIdentifierNode="as" annotations=Explicit
          |-ParameterNode annotations=Local(lhs:Custom#0)
            |-NameIdentifierNode="lhs" type=(alias Custom (struct a:<null>))
            |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
    |-OverloadedFunctionNode type=(fun "Custom$discriminant" () (alias u64)) annotations=Injected
      |-NameIdentifierNode="Custom$discriminant" type=(fun "Custom$discriminant" () (alias u64))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "Custom$discriminant" () (alias u64)) annotations=IsOverloaded
          |-NameIdentifierNode="Custom$discriminant" annotations=Inline
          |-ReferenceNode type=(type (alias u64 (native u64)))
            |-QNameNode=u64
              |-NameIdentifierNode="u64"
          |-BlockNode type=(alias u64 (native u64)) annotations=IsValueNode
            |-ValDeclarationNode type=(native void) annotations=Local(test::fixtures::compiler::deconstruct::discriminant_9:u32#0)
              |-NameIdentifierNode="discriminant" type=(alias u32 (native u32))
              |-ReferenceNode type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
              |-MemberNode type=(native u32) annotations=IsValueNode
                |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
                  |-QNameNode=Custom
                    |-NameIdentifierNode="Custom"
                |-NameIdentifierNode="discriminant"
            |-BinaryExpressionNode=(fun "<<" ((alias u64) (alias i32)) (alias u64)) type=(alias u64 (native u64)) annotations=IsValueNode,IsReturnExpression
              |-AsExpressionNode=(fun "as" ((alias u32)) (alias u64)) type=(alias u64 (native u64)) annotations=IsValueNode
                |-ReferenceNode type=(alias u32 (native u32)) annotations=IsValueNode,Local(test::fixtures::compiler::deconstruct::discriminant_9:u32#0)
                  |-QNameNode=discriminant
                    |-NameIdentifierNode="discriminant"
                |-ReferenceNode type=(type (alias u64 (native u64)))
                  |-QNameNode=u64
                    |-NameIdentifierNode="u64"
              |-NameIdentifierNode="<<"
              |-IntegerLiteral=32 type=(alias i32 (native i32)) annotations=IsValueNode
    |-OverloadedFunctionNode type=(fun "apply" ((alias i32)) (alias Custom)) annotations=Injected
      |-NameIdentifierNode="apply" type=(fun "apply" ((alias i32)) (alias Custom))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "apply" ((alias i32)) (alias Custom)) annotations=IsOverloaded
          |-NameIdentifierNode="apply"
          |-ParameterNode annotations=Local(a:i32#0)
            |-NameIdentifierNode="a" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
            |-QNameNode=Custom
              |-NameIdentifierNode="Custom"
          |-BlockNode type=(alias Custom (struct a:<null>)) annotations=IsValueNode
            |-VarDeclarationNode type=(native void) annotations=Local(test::fixtures::compiler::deconstruct::$ref:Custom#1)
              |-NameIdentifierNode="$ref" type=(alias Custom (struct a:<null>))
              |-FunctionCallNode=(fun "fromPointer" ((alias u32)) (alias Custom)) type=(alias Custom (struct a:<null>)) annotations=IsValueNode
                |-ReferenceNode type=(fun "fromPointer" ((alias u32)) (alias Custom))
                  |-QNameNode=fromPointer
                    |-NameIdentifierNode="fromPointer"
                |-FunctionCallNode=(fun "calloc" ((alias u32) (alias u32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
                  |-ReferenceNode type=(fun "calloc" ((alias u32) (alias u32)) (alias u32))
                    |-QNameNode=system::memory::calloc
                      |-NameIdentifierNode="system"
                      |-NameIdentifierNode="memory"
                      |-NameIdentifierNode="calloc"
                  |-AsExpressionNode=(fun "as" ((alias i32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
                    |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
                    |-ReferenceNode type=(type (alias u32 (native u32)))
                      |-QNameNode=u32
                        |-NameIdentifierNode="u32"
                  |-MemberNode type=(native u32) annotations=IsValueNode
                    |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
                      |-QNameNode=Custom
                        |-NameIdentifierNode="Custom"
                    |-NameIdentifierNode="allocationSize"
            |-FunctionCallNode=(fun "property$0" ((alias Custom) (alias i32)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "property$0" ((alias Custom)) (alias i32)) (fun "property$0" ((alias Custom) (alias i32)) (alias void)))
                |-QNameNode=property$0
                  |-NameIdentifierNode="property$0"
              |-ReferenceNode type=(alias Custom (struct a:<null>)) annotations=IsValueNode,Local(test::fixtures::compiler::deconstruct::$ref:Custom#1)
                |-QNameNode=$ref
                  |-NameIdentifierNode="$ref"
              |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(a:i32#0)
                |-QNameNode=a
                  |-NameIdentifierNode="a"
            |-ReferenceNode type=(alias Custom (struct a:<null>)) annotations=IsValueNode,IsReturnExpression,Local(test::fixtures::compiler::deconstruct::$ref:Custom#1)
              |-QNameNode=$ref
                |-NameIdentifierNode="$ref"
    |-OverloadedFunctionNode type=(fun "fromPointer" ((alias u32)) (alias Custom)) annotations=Injected
      |-NameIdentifierNode="fromPointer" type=(fun "fromPointer" ((alias u32)) (alias Custom))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "fromPointer" ((alias u32)) (alias Custom)) annotations=IsOverloaded
          |-NameIdentifierNode="fromPointer"
          |-ParameterNode annotations=Local(ptr:u32#0)
            |-NameIdentifierNode="ptr" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
            |-QNameNode=Custom
              |-NameIdentifierNode="Custom"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-ReferenceNode type=(fun "Custom$discriminant" () (alias u64))
                  |-QNameNode=Custom$discriminant
                    |-NameIdentifierNode="Custom$discriminant"
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$ptr
                    |-NameIdentifierNode="$ptr"
    |-OverloadedFunctionNode type=(fun "==" ((alias Custom) (alias Custom)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="==" type=(fun "==" ((alias Custom) (alias Custom)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "==" ((alias Custom) (alias Custom)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="=="
          |-ParameterNode annotations=Local(a:Custom#0)
            |-NameIdentifierNode="a" type=(alias Custom (struct a:<null>))
            |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ParameterNode annotations=Local(b:Custom#1)
            |-NameIdentifierNode="b" type=(alias Custom (struct a:<null>))
            |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode type=(fun "!=" ((alias Custom) (alias Custom)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias Custom) (alias Custom)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "!=" ((alias Custom) (alias Custom)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="!="
          |-ParameterNode annotations=Local(a:Custom#0)
            |-NameIdentifierNode="a" type=(alias Custom (struct a:<null>))
            |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ParameterNode annotations=Local(b:Custom#1)
            |-NameIdentifierNode="b" type=(alias Custom (struct a:<null>))
            |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode type=(intersection (fun "property_a" ((alias Custom)) (alias i32)) (fun "property_a" ((alias Custom) (alias i32)) (alias void))) annotations=Injected
      |-NameIdentifierNode="property_a" type=(intersection (fun "property_a" ((alias Custom)) (alias i32)) (fun "property_a" ((alias Custom) (alias i32)) (alias void)))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_a" ((alias Custom)) (alias i32)) annotations=IsOverloaded
          |-NameIdentifierNode="property_a"
          |-ParameterNode annotations=Local(self:Custom#0)
            |-NameIdentifierNode="self" type=(alias Custom (struct a:<null>))
            |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "property$0" ((alias Custom)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode type=(intersection (fun "property$0" ((alias Custom)) (alias i32)) (fun "property$0" ((alias Custom) (alias i32)) (alias void)))
              |-QNameNode=property$0
                |-NameIdentifierNode="property$0"
            |-ReferenceNode type=(alias Custom (struct a:<null>)) annotations=IsValueNode,Local(self:Custom#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_a" ((alias Custom) (alias i32)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="property_a"
          |-ParameterNode annotations=Local(self:Custom#0)
            |-NameIdentifierNode="self" type=(alias Custom (struct a:<null>))
            |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "property$0" ((alias Custom) (alias i32)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "property$0" ((alias Custom)) (alias i32)) (fun "property$0" ((alias Custom) (alias i32)) (alias void)))
              |-QNameNode=property$0
                |-NameIdentifierNode="property$0"
            |-ReferenceNode type=(alias Custom (struct a:<null>)) annotations=IsValueNode,Local(self:Custom#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
    |-OverloadedFunctionNode type=(intersection (fun "property$0" ((alias Custom)) (alias i32)) (fun "property$0" ((alias Custom) (alias i32)) (alias void))) annotations=Injected
      |-NameIdentifierNode="property$0" type=(intersection (fun "property$0" ((alias Custom)) (alias i32)) (fun "property$0" ((alias Custom) (alias i32)) (alias void)))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$0" ((alias Custom)) (alias i32)) annotations=IsOverloaded
          |-NameIdentifierNode="property$0" annotations=Inline
          |-ParameterNode annotations=Local(self:Custom#0)
            |-NameIdentifierNode="self" type=(alias Custom (struct a:<null>))
            |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "load" ((alias ref) (alias u32)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="load"
            |-ReferenceNode type=(alias Custom (struct a:<null>)) annotations=IsValueNode,Local(self:Custom#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
                |-QNameNode=Custom
                  |-NameIdentifierNode="Custom"
              |-NameIdentifierNode="property$0_offset"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$0" ((alias Custom) (alias i32)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="property$0" annotations=Inline
          |-ParameterNode annotations=Local(self:Custom#0)
            |-NameIdentifierNode="self" type=(alias Custom (struct a:<null>))
            |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)) type=(alias void (native void))
            |-MemberNode type=(intersection (fun "store" ((alias ref) (alias i32)) (alias void)) (fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="store"
            |-ReferenceNode type=(alias Custom (struct a:<null>)) annotations=IsValueNode,Local(self:Custom#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
                |-QNameNode=Custom
                  |-NameIdentifierNode="Custom"
              |-NameIdentifierNode="property$0_offset"
    |-OverloadedFunctionNode type=(fun "is" ((union (alias Custom) (alias ref))) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="is" type=(fun "is" ((union (alias Custom) (alias ref))) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "is" ((union (alias Custom) (alias ref))) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="is"
          |-ParameterNode annotations=Local(a:Custom | ref#0)
            |-NameIdentifierNode="a" type=(union (alias Custom (struct a:<null>)) (alias ref (ref ?)))
            |-UnionTypeNode type=(type (union (alias Custom (struct a:<null>)) (alias ref (ref ?))))
              |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
                |-QNameNode=Custom
                  |-NameIdentifierNode="Custom"
              |-ReferenceNode type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-HexLiteral=18446744069414584000
                |-WasmAtomNode
                  |-QNameNode=$a
                    |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-ReferenceNode type=(fun "Custom$discriminant" () (alias u64))
                  |-QNameNode=Custom$discriminant
                    |-NameIdentifierNode="Custom$discriminant"
    |-OverloadedFunctionNode type=(fun "store" ((alias ref) (alias Custom) (alias u32)) (alias void)) annotations=Injected
      |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Custom) (alias u32)) (alias void))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "store" ((alias ref) (alias Custom) (alias u32)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="store"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:Custom#1)
            |-NameIdentifierNode="rhs" type=(alias Custom (struct a:<null>))
            |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
    |-OverloadedFunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Custom)) annotations=Injected
      |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Custom))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Custom)) annotations=IsOverloaded
          |-NameIdentifierNode="load"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
            |-QNameNode=Custom
              |-NameIdentifierNode="Custom"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Red" type=(type (alias Red (struct)))
    |-StructTypeNode type=(type (alias Red (struct)))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Green" type=(type (alias Green (struct)))
    |-StructTypeNode type=(type (alias Green (struct)))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Blue" type=(type (alias Blue (struct)))
    |-StructTypeNode type=(type (alias Blue (struct)))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Custom" type=(type (alias Custom (struct a:<null>)))
    |-StructTypeNode type=(type (alias Custom (struct a:<null>)))
      |-ParameterNode
        |-NameIdentifierNode="a"
        |-ReferenceNode
          |-QNameNode=i32
            |-NameIdentifierNode="i32"
  |-OverloadedFunctionNode type=(fun "isRed" ((alias Color)) (alias boolean)) annotations=Injected
    |-NameIdentifierNode="isRed" type=(fun "isRed" ((alias Color)) (alias boolean))
    |-FunDirectiveNode
      |-DecoratorNode
        |-NameIdentifierNode="export"
      |-FunctionNode type=(fun "isRed" ((alias Color)) (alias boolean)) annotations=IsOverloaded
        |-NameIdentifierNode="isRed" annotations=Export
        |-ParameterNode annotations=Local(x:Color#0)
          |-NameIdentifierNode="x" type=(alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>))))
          |-ReferenceNode type=(type (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>)))))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-BlockNode type=(alias boolean (native boolean)) annotations=IsValueNode
          |-PatternMatcherNode type=(alias boolean (native boolean)) annotations=IsValueNode,Local(var$2:Color#2)
            |-ReferenceNode type=(alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct a:<null>)))) annotations=IsValueNode,Local(x:Color#0)
              |-QNameNode=x
                |-NameIdentifierNode="x"
            |-MatchCaseIsNode type=(alias boolean (native boolean)) annotations=IsValueNode,Local(var$2:Color#2)
              |-NameIdentifierNode="$" type=(alias Red (struct))
              |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
              |-ReferenceNode type=(type (alias Red (struct)))
                |-QNameNode=Red
                  |-NameIdentifierNode="Red"
            |-MatchCaseIsNode type=(alias boolean (native boolean)) annotations=IsValueNode,Local(var$2:Color#2)
              |-NameIdentifierNode="$" type=(alias Custom (struct a:<null>))
              |-BlockNode type=(alias boolean (native boolean)) annotations=IsValueNode
                |-ValDeclarationNode type=(native void) annotations=Local(test::fixtures::compiler::deconstruct::a_6:i32#1)
                  |-NameIdentifierNode="a" type=(alias i32 (native i32))
                  |-MemberNode type=(alias i32 (native i32)) annotations=IsValueNode,ImplicitCall(fun "property_a" ((alias Custom)) (alias i32))
                    |-ReferenceNode type=(alias Custom (struct a:<null>)) annotations=Local(var$2:Color#2)
                      |-QNameNode=$
                        |-NameIdentifierNode="$"
                    |-NameIdentifierNode="a"
                |-BinaryExpressionNode=(fun "==" ((alias i32) (alias i32)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
                  |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(test::fixtures::compiler::deconstruct::a_6:i32#1)
                    |-QNameNode=a
                      |-NameIdentifierNode="a"
                  |-NameIdentifierNode="=="
                  |-HexLiteral=16711680 type=(alias i32 (native i32)) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Custom (struct a:<null>)))
                |-QNameNode=Custom
                  |-NameIdentifierNode="Custom"
            |-MatchDefaultNode type=(alias boolean (native boolean)) annotations=IsValueNode,Local(var$2:Color#2)
              |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression