import support::test

fun testMatchWithDifferentTypes(input: i32): boolean = {
  match input {
    case 1 -> true
    else -> false
  }
}

#[export]
fun main(): void = {
  START("Implicit number casting")

  var aByte = 10 as u8
  var a: u16 = aByte

  mustEqual(a, 10, "eq(10_u16, 10_i32)")
  // verify(x == 10, "10_u16 == 10_i32")
  var x = 0 as i16
  verify(testMatchWithDifferentTypes(x) == false, "match 0")

  var y = 1 as u8
  verify(testMatchWithDifferentTypes(y) == true, "match 1")

  verify(0.0 == 0, "0.0 == 0")

  END()
}