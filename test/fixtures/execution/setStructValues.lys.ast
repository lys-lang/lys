
|-DocumentNode
  |-ImportDirectiveNode
    |-QNameNode=system::core
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
  |-ImportDirectiveNode
    |-QNameNode=support::test
      |-NameIdentifierNode="support"
      |-NameIdentifierNode="test"
  |-ImportDirectiveNode
    |-QNameNode=support::env
      |-NameIdentifierNode="support"
      |-NameIdentifierNode="env"
  |-TypeDirectiveNode
    |-NameIdentifierNode="Color" type=(type (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))))
    |-UnionTypeNode type=(type (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>))))
      |-ReferenceNode type=(type (alias None (struct)))
        |-QNameNode=None
          |-NameIdentifierNode="None"
      |-ReferenceNode type=(type (alias Red (struct)))
        |-QNameNode=Red
          |-NameIdentifierNode="Red"
      |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
        |-QNameNode=Custom
          |-NameIdentifierNode="Custom"
  |-ImplDirective
    |-ReferenceNode
      |-QNameNode=Color
        |-NameIdentifierNode="Color"
    |-OverloadedFunctionNode type=(fun "is" ((union (alias Color) (alias ref))) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="is" type=(fun "is" ((union (alias Color) (alias ref))) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "is" ((union (alias Color) (alias ref))) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="is"
          |-ParameterNode annotations=Local(a:Color | ref#0)
            |-NameIdentifierNode="a" type=(union (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))) (alias ref (ref ?)))
            |-UnionTypeNode type=(type (union (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))) (alias ref (ref ?))))
              |-ReferenceNode type=(type (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))))
                |-QNameNode=Color
                  |-NameIdentifierNode="Color"
              |-ReferenceNode type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-BlockNode type=(alias boolean (native boolean)) annotations=IsValueNode
            |-BinaryExpressionNode=(fun "||" ((alias boolean) (alias boolean)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
              |-BinaryExpressionNode=(fun "||" ((alias boolean) (alias boolean)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-IsExpressionNode=(fun "is" ((union (alias None) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                  |-ReferenceNode type=(union (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))) (alias ref (ref ?))) annotations=IsValueNode,Local(a:Color | ref#0)
                    |-QNameNode=a
                      |-NameIdentifierNode="a"
                  |-ReferenceNode type=(type (alias None (struct)))
                    |-QNameNode=None
                      |-NameIdentifierNode="None"
                |-NameIdentifierNode="||"
                |-IsExpressionNode=(fun "is" ((union (alias Red) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                  |-ReferenceNode type=(union (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))) (alias ref (ref ?))) annotations=IsValueNode,Local(a:Color | ref#0)
                    |-QNameNode=a
                      |-NameIdentifierNode="a"
                  |-ReferenceNode type=(type (alias Red (struct)))
                    |-QNameNode=Red
                      |-NameIdentifierNode="Red"
              |-NameIdentifierNode="||"
              |-IsExpressionNode=(fun "is" ((union (alias Custom) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-ReferenceNode type=(union (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))) (alias ref (ref ?))) annotations=IsValueNode,Local(a:Color | ref#0)
                  |-QNameNode=a
                    |-NameIdentifierNode="a"
                |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
                  |-QNameNode=Custom
                    |-NameIdentifierNode="Custom"
    |-OverloadedFunctionNode type=(fun "as" ((alias Color)) (alias ref)) annotations=Injected
      |-NameIdentifierNode="as" type=(fun "as" ((alias Color)) (alias ref))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode type=(fun "as" ((alias Color)) (alias ref)) annotations=IsOverloaded
          |-NameIdentifierNode="as" annotations=Explicit
          |-ParameterNode annotations=Local(a:Color#0)
            |-NameIdentifierNode="a" type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>))))
            |-ReferenceNode type=(type (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
    |-OverloadedFunctionNode type=(fun "==" ((alias ref) (alias ref)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="==" type=(fun "==" ((alias ref) (alias ref)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "==" ((alias ref) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="=="
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:ref#1)
            |-NameIdentifierNode="rhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-BinaryExpressionNode=(fun "==" ((alias ref) (alias ref)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode,Local(lhs:ref#0)
              |-QNameNode=lhs
                |-NameIdentifierNode="lhs"
            |-NameIdentifierNode="=="
            |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode,Local(rhs:ref#1)
              |-QNameNode=rhs
                |-NameIdentifierNode="rhs"
    |-OverloadedFunctionNode type=(fun "!=" ((alias ref) (alias ref)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias ref) (alias ref)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "!=" ((alias ref) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="!="
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:ref#1)
            |-NameIdentifierNode="rhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-BinaryExpressionNode=(fun "!=" ((alias ref) (alias ref)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode,Local(lhs:ref#0)
              |-QNameNode=lhs
                |-NameIdentifierNode="lhs"
            |-NameIdentifierNode="!="
            |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode,Local(rhs:ref#1)
              |-QNameNode=rhs
                |-NameIdentifierNode="rhs"
    |-OverloadedFunctionNode type=(fun "store" ((alias ref) (alias Color) (alias u32)) (alias void)) annotations=Injected
      |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Color) (alias u32)) (alias void))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "store" ((alias ref) (alias Color) (alias u32)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="store"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:Color#1)
            |-NameIdentifierNode="rhs" type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>))))
            |-ReferenceNode type=(type (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
    |-OverloadedFunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Color)) annotations=Injected
      |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Color))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Color)) annotations=IsOverloaded
          |-NameIdentifierNode="load"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
  |-ImplDirective
    |-ReferenceNode
      |-QNameNode=None
        |-NameIdentifierNode="None"
    |-OverloadedFunctionNode type=(intersection (fun "as" ((alias None)) (alias Color)) (fun "as" ((alias None)) (alias ref))) annotations=Injected
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((alias None)) (alias Color)) (fun "as" ((alias None)) (alias ref)))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "as" ((alias None)) (alias Color)) annotations=IsOverloaded
          |-NameIdentifierNode="as"
          |-ParameterNode annotations=Local(lhs:None#0)
            |-NameIdentifierNode="lhs" type=(alias None (struct))
            |-ReferenceNode type=(type (alias None (struct)))
              |-QNameNode=None
                |-NameIdentifierNode="None"
          |-ReferenceNode type=(type (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode type=(fun "as" ((alias None)) (alias ref)) annotations=IsOverloaded
          |-NameIdentifierNode="as" annotations=Explicit
          |-ParameterNode annotations=Local(lhs:None#0)
            |-NameIdentifierNode="lhs" type=(alias None (struct))
            |-ReferenceNode type=(type (alias None (struct)))
              |-QNameNode=None
                |-NameIdentifierNode="None"
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
    |-OverloadedFunctionNode type=(fun "None$discriminant" () (alias i64)) annotations=Injected
      |-NameIdentifierNode="None$discriminant" type=(fun "None$discriminant" () (alias i64))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "None$discriminant" () (alias i64)) annotations=IsOverloaded
          |-NameIdentifierNode="None$discriminant" annotations=Inline
          |-ReferenceNode type=(type (alias i64 (native i64)))
            |-QNameNode=i64
              |-NameIdentifierNode="i64"
          |-BlockNode type=(alias i64 (native i64)) annotations=IsValueNode
            |-ValDeclarationNode type=(native void) annotations=Local(test::fixtures::execution::setStructValues::discriminant:u32#0)
              |-NameIdentifierNode="discriminant" type=(alias u32 (native u32))
              |-ReferenceNode type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
              |-MemberNode type=(native u32) annotations=IsValueNode
                |-ReferenceNode type=(type (alias None (struct)))
                  |-QNameNode=None
                    |-NameIdentifierNode="None"
                |-NameIdentifierNode="discriminant"
            |-BinaryExpressionNode=(fun "<<" ((alias i64) (alias i32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode,IsReturnExpression
              |-AsExpressionNode=(fun "as" ((alias u32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode
                |-ReferenceNode type=(alias u32 (native u32)) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::discriminant:u32#0)
                  |-QNameNode=discriminant
                    |-NameIdentifierNode="discriminant"
                |-ReferenceNode type=(type (alias i64 (native i64)))
                  |-QNameNode=i64
                    |-NameIdentifierNode="i64"
              |-NameIdentifierNode="<<"
              |-IntegerLiteral=32 type=(alias i32 (native i32)) annotations=IsValueNode
    |-OverloadedFunctionNode type=(fun "apply" () (alias None)) annotations=Injected
      |-NameIdentifierNode="apply" type=(fun "apply" () (alias None))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "apply" () (alias None)) annotations=IsOverloaded
          |-NameIdentifierNode="apply"
          |-ReferenceNode type=(type (alias None (struct)))
            |-QNameNode=None
              |-NameIdentifierNode="None"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-ReferenceNode type=(fun "None$discriminant" () (alias i64))
                |-QNameNode=None$discriminant
                  |-NameIdentifierNode="None$discriminant"
    |-OverloadedFunctionNode type=(fun "is" ((union (alias None) (alias ref))) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="is" type=(fun "is" ((union (alias None) (alias ref))) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "is" ((union (alias None) (alias ref))) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="is"
          |-ParameterNode annotations=Local(a:None | ref#0)
            |-NameIdentifierNode="a" type=(union (alias None (struct)) (alias ref (ref ?)))
            |-UnionTypeNode type=(type (union (alias None (struct)) (alias ref (ref ?))))
              |-ReferenceNode type=(type (alias None (struct)))
                |-QNameNode=None
                  |-NameIdentifierNode="None"
              |-ReferenceNode type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-HexLiteral=18446744069414584000
                |-WasmAtomNode
                  |-QNameNode=$a
                    |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-ReferenceNode type=(fun "None$discriminant" () (alias i64))
                  |-QNameNode=None$discriminant
                    |-NameIdentifierNode="None$discriminant"
    |-OverloadedFunctionNode type=(fun "==" ((alias None) (alias ref)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="==" type=(fun "==" ((alias None) (alias ref)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "==" ((alias None) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="=="
          |-ParameterNode annotations=Local(a:None#0)
            |-NameIdentifierNode="a" type=(alias None (struct))
            |-ReferenceNode type=(type (alias None (struct)))
              |-QNameNode=None
                |-NameIdentifierNode="None"
          |-ParameterNode annotations=Local(b:ref#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode type=(fun "!=" ((alias None) (alias ref)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias None) (alias ref)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "!=" ((alias None) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="!="
          |-ParameterNode annotations=Local(a:None#0)
            |-NameIdentifierNode="a" type=(alias None (struct))
            |-ReferenceNode type=(type (alias None (struct)))
              |-QNameNode=None
                |-NameIdentifierNode="None"
          |-ParameterNode annotations=Local(b:ref#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode type=(fun "store" ((alias ref) (alias None) (alias u32)) (alias void)) annotations=Injected
      |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias None) (alias u32)) (alias void))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "store" ((alias ref) (alias None) (alias u32)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="store"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:None#1)
            |-NameIdentifierNode="rhs" type=(alias None (struct))
            |-ReferenceNode type=(type (alias None (struct)))
              |-QNameNode=None
                |-NameIdentifierNode="None"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
    |-OverloadedFunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias None)) annotations=Injected
      |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias None))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias None)) annotations=IsOverloaded
          |-NameIdentifierNode="load"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias None (struct)))
            |-QNameNode=None
              |-NameIdentifierNode="None"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
  |-ImplDirective
    |-ReferenceNode
      |-QNameNode=Red
        |-NameIdentifierNode="Red"
    |-OverloadedFunctionNode type=(intersection (fun "as" ((alias Red)) (alias Color)) (fun "as" ((alias Red)) (alias ref))) annotations=Injected
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((alias Red)) (alias Color)) (fun "as" ((alias Red)) (alias ref)))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "as" ((alias Red)) (alias Color)) annotations=IsOverloaded
          |-NameIdentifierNode="as"
          |-ParameterNode annotations=Local(lhs:Red#0)
            |-NameIdentifierNode="lhs" type=(alias Red (struct))
            |-ReferenceNode type=(type (alias Red (struct)))
              |-QNameNode=Red
                |-NameIdentifierNode="Red"
          |-ReferenceNode type=(type (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode type=(fun "as" ((alias Red)) (alias ref)) annotations=IsOverloaded
          |-NameIdentifierNode="as" annotations=Explicit
          |-ParameterNode annotations=Local(lhs:Red#0)
            |-NameIdentifierNode="lhs" type=(alias Red (struct))
            |-ReferenceNode type=(type (alias Red (struct)))
              |-QNameNode=Red
                |-NameIdentifierNode="Red"
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
    |-OverloadedFunctionNode type=(fun "Red$discriminant" () (alias i64)) annotations=Injected
      |-NameIdentifierNode="Red$discriminant" type=(fun "Red$discriminant" () (alias i64))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "Red$discriminant" () (alias i64)) annotations=IsOverloaded
          |-NameIdentifierNode="Red$discriminant" annotations=Inline
          |-ReferenceNode type=(type (alias i64 (native i64)))
            |-QNameNode=i64
              |-NameIdentifierNode="i64"
          |-BlockNode type=(alias i64 (native i64)) annotations=IsValueNode
            |-ValDeclarationNode type=(native void) annotations=Local(test::fixtures::execution::setStructValues::discriminant_1:u32#0)
              |-NameIdentifierNode="discriminant" type=(alias u32 (native u32))
              |-ReferenceNode type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
              |-MemberNode type=(native u32) annotations=IsValueNode
                |-ReferenceNode type=(type (alias Red (struct)))
                  |-QNameNode=Red
                    |-NameIdentifierNode="Red"
                |-NameIdentifierNode="discriminant"
            |-BinaryExpressionNode=(fun "<<" ((alias i64) (alias i32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode,IsReturnExpression
              |-AsExpressionNode=(fun "as" ((alias u32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode
                |-ReferenceNode type=(alias u32 (native u32)) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::discriminant_1:u32#0)
                  |-QNameNode=discriminant
                    |-NameIdentifierNode="discriminant"
                |-ReferenceNode type=(type (alias i64 (native i64)))
                  |-QNameNode=i64
                    |-NameIdentifierNode="i64"
              |-NameIdentifierNode="<<"
              |-IntegerLiteral=32 type=(alias i32 (native i32)) annotations=IsValueNode
    |-OverloadedFunctionNode type=(fun "apply" () (alias Red)) annotations=Injected
      |-NameIdentifierNode="apply" type=(fun "apply" () (alias Red))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "apply" () (alias Red)) annotations=IsOverloaded
          |-NameIdentifierNode="apply"
          |-ReferenceNode type=(type (alias Red (struct)))
            |-QNameNode=Red
              |-NameIdentifierNode="Red"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-ReferenceNode type=(fun "Red$discriminant" () (alias i64))
                |-QNameNode=Red$discriminant
                  |-NameIdentifierNode="Red$discriminant"
    |-OverloadedFunctionNode type=(fun "is" ((union (alias Red) (alias ref))) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="is" type=(fun "is" ((union (alias Red) (alias ref))) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "is" ((union (alias Red) (alias ref))) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="is"
          |-ParameterNode annotations=Local(a:Red | ref#0)
            |-NameIdentifierNode="a" type=(union (alias Red (struct)) (alias ref (ref ?)))
            |-UnionTypeNode type=(type (union (alias Red (struct)) (alias ref (ref ?))))
              |-ReferenceNode type=(type (alias Red (struct)))
                |-QNameNode=Red
                  |-NameIdentifierNode="Red"
              |-ReferenceNode type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-HexLiteral=18446744069414584000
                |-WasmAtomNode
                  |-QNameNode=$a
                    |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-ReferenceNode type=(fun "Red$discriminant" () (alias i64))
                  |-QNameNode=Red$discriminant
                    |-NameIdentifierNode="Red$discriminant"
    |-OverloadedFunctionNode type=(fun "==" ((alias Red) (alias ref)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="==" type=(fun "==" ((alias Red) (alias ref)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "==" ((alias Red) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="=="
          |-ParameterNode annotations=Local(a:Red#0)
            |-NameIdentifierNode="a" type=(alias Red (struct))
            |-ReferenceNode type=(type (alias Red (struct)))
              |-QNameNode=Red
                |-NameIdentifierNode="Red"
          |-ParameterNode annotations=Local(b:ref#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode type=(fun "!=" ((alias Red) (alias ref)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias Red) (alias ref)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "!=" ((alias Red) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="!="
          |-ParameterNode annotations=Local(a:Red#0)
            |-NameIdentifierNode="a" type=(alias Red (struct))
            |-ReferenceNode type=(type (alias Red (struct)))
              |-QNameNode=Red
                |-NameIdentifierNode="Red"
          |-ParameterNode annotations=Local(b:ref#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode type=(fun "store" ((alias ref) (alias Red) (alias u32)) (alias void)) annotations=Injected
      |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Red) (alias u32)) (alias void))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "store" ((alias ref) (alias Red) (alias u32)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="store"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:Red#1)
            |-NameIdentifierNode="rhs" type=(alias Red (struct))
            |-ReferenceNode type=(type (alias Red (struct)))
              |-QNameNode=Red
                |-NameIdentifierNode="Red"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
    |-OverloadedFunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Red)) annotations=Injected
      |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Red))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Red)) annotations=IsOverloaded
          |-NameIdentifierNode="load"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias Red (struct)))
            |-QNameNode=Red
              |-NameIdentifierNode="Red"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
  |-ImplDirective
    |-ReferenceNode
      |-QNameNode=Custom
        |-NameIdentifierNode="Custom"
    |-OverloadedFunctionNode type=(intersection (fun "as" ((alias Custom)) (alias Color)) (fun "as" ((alias Custom)) (alias ref))) annotations=Injected
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((alias Custom)) (alias Color)) (fun "as" ((alias Custom)) (alias ref)))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "as" ((alias Custom)) (alias Color)) annotations=IsOverloaded
          |-NameIdentifierNode="as"
          |-ParameterNode annotations=Local(lhs:Custom#0)
            |-NameIdentifierNode="lhs" type=(alias Custom (struct hex:<null>))
            |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ReferenceNode type=(type (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode type=(fun "as" ((alias Custom)) (alias ref)) annotations=IsOverloaded
          |-NameIdentifierNode="as" annotations=Explicit
          |-ParameterNode annotations=Local(lhs:Custom#0)
            |-NameIdentifierNode="lhs" type=(alias Custom (struct hex:<null>))
            |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
    |-OverloadedFunctionNode type=(fun "Custom$discriminant" () (alias u64)) annotations=Injected
      |-NameIdentifierNode="Custom$discriminant" type=(fun "Custom$discriminant" () (alias u64))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "Custom$discriminant" () (alias u64)) annotations=IsOverloaded
          |-NameIdentifierNode="Custom$discriminant" annotations=Inline
          |-ReferenceNode type=(type (alias u64 (native u64)))
            |-QNameNode=u64
              |-NameIdentifierNode="u64"
          |-BlockNode type=(alias u64 (native u64)) annotations=IsValueNode
            |-ValDeclarationNode type=(native void) annotations=Local(test::fixtures::execution::setStructValues::discriminant_2:u32#0)
              |-NameIdentifierNode="discriminant" type=(alias u32 (native u32))
              |-ReferenceNode type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
              |-MemberNode type=(native u32) annotations=IsValueNode
                |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
                  |-QNameNode=Custom
                    |-NameIdentifierNode="Custom"
                |-NameIdentifierNode="discriminant"
            |-BinaryExpressionNode=(fun "<<" ((alias u64) (alias i32)) (alias u64)) type=(alias u64 (native u64)) annotations=IsValueNode,IsReturnExpression
              |-AsExpressionNode=(fun "as" ((alias u32)) (alias u64)) type=(alias u64 (native u64)) annotations=IsValueNode
                |-ReferenceNode type=(alias u32 (native u32)) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::discriminant_2:u32#0)
                  |-QNameNode=discriminant
                    |-NameIdentifierNode="discriminant"
                |-ReferenceNode type=(type (alias u64 (native u64)))
                  |-QNameNode=u64
                    |-NameIdentifierNode="u64"
              |-NameIdentifierNode="<<"
              |-IntegerLiteral=32 type=(alias i32 (native i32)) annotations=IsValueNode
    |-OverloadedFunctionNode type=(fun "apply" ((alias i32)) (alias Custom)) annotations=Injected
      |-NameIdentifierNode="apply" type=(fun "apply" ((alias i32)) (alias Custom))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "apply" ((alias i32)) (alias Custom)) annotations=IsOverloaded
          |-NameIdentifierNode="apply"
          |-ParameterNode annotations=Local(hex:i32#0)
            |-NameIdentifierNode="hex" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
            |-QNameNode=Custom
              |-NameIdentifierNode="Custom"
          |-BlockNode type=(alias Custom (struct hex:<null>)) annotations=IsValueNode
            |-VarDeclarationNode type=(native void) annotations=Local(test::fixtures::execution::setStructValues::$ref:Custom#1)
              |-NameIdentifierNode="$ref" type=(alias Custom (struct hex:<null>))
              |-FunctionCallNode=(fun "fromPointer" ((alias u32)) (alias Custom)) type=(alias Custom (struct hex:<null>)) annotations=IsValueNode
                |-ReferenceNode type=(fun "fromPointer" ((alias u32)) (alias Custom))
                  |-QNameNode=fromPointer
                    |-NameIdentifierNode="fromPointer"
                |-FunctionCallNode=(fun "calloc" ((alias u32) (alias u32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
                  |-ReferenceNode type=(fun "calloc" ((alias u32) (alias u32)) (alias u32))
                    |-QNameNode=system::memory::calloc
                      |-NameIdentifierNode="system"
                      |-NameIdentifierNode="memory"
                      |-NameIdentifierNode="calloc"
                  |-AsExpressionNode=(fun "as" ((alias i32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
                    |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
                    |-ReferenceNode type=(type (alias u32 (native u32)))
                      |-QNameNode=u32
                        |-NameIdentifierNode="u32"
                  |-MemberNode type=(native u32) annotations=IsValueNode
                    |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
                      |-QNameNode=Custom
                        |-NameIdentifierNode="Custom"
                    |-NameIdentifierNode="allocationSize"
            |-FunctionCallNode=(fun "property$0" ((alias Custom) (alias i32)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "property$0" ((alias Custom)) (alias i32)) (fun "property$0" ((alias Custom) (alias i32)) (alias void)))
                |-QNameNode=property$0
                  |-NameIdentifierNode="property$0"
              |-ReferenceNode type=(alias Custom (struct hex:<null>)) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::$ref:Custom#1)
                |-QNameNode=$ref
                  |-NameIdentifierNode="$ref"
              |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(hex:i32#0)
                |-QNameNode=hex
                  |-NameIdentifierNode="hex"
            |-ReferenceNode type=(alias Custom (struct hex:<null>)) annotations=IsValueNode,IsReturnExpression,Local(test::fixtures::execution::setStructValues::$ref:Custom#1)
              |-QNameNode=$ref
                |-NameIdentifierNode="$ref"
    |-OverloadedFunctionNode type=(fun "fromPointer" ((alias u32)) (alias Custom)) annotations=Injected
      |-NameIdentifierNode="fromPointer" type=(fun "fromPointer" ((alias u32)) (alias Custom))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "fromPointer" ((alias u32)) (alias Custom)) annotations=IsOverloaded
          |-NameIdentifierNode="fromPointer"
          |-ParameterNode annotations=Local(ptr:u32#0)
            |-NameIdentifierNode="ptr" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
            |-QNameNode=Custom
              |-NameIdentifierNode="Custom"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-ReferenceNode type=(fun "Custom$discriminant" () (alias u64))
                  |-QNameNode=Custom$discriminant
                    |-NameIdentifierNode="Custom$discriminant"
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$ptr
                    |-NameIdentifierNode="$ptr"
    |-OverloadedFunctionNode type=(fun "==" ((alias Custom) (alias Custom)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="==" type=(fun "==" ((alias Custom) (alias Custom)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "==" ((alias Custom) (alias Custom)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="=="
          |-ParameterNode annotations=Local(a:Custom#0)
            |-NameIdentifierNode="a" type=(alias Custom (struct hex:<null>))
            |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ParameterNode annotations=Local(b:Custom#1)
            |-NameIdentifierNode="b" type=(alias Custom (struct hex:<null>))
            |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode type=(fun "!=" ((alias Custom) (alias Custom)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias Custom) (alias Custom)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "!=" ((alias Custom) (alias Custom)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="!="
          |-ParameterNode annotations=Local(a:Custom#0)
            |-NameIdentifierNode="a" type=(alias Custom (struct hex:<null>))
            |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ParameterNode annotations=Local(b:Custom#1)
            |-NameIdentifierNode="b" type=(alias Custom (struct hex:<null>))
            |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode type=(intersection (fun "property_hex" ((alias Custom)) (alias i32)) (fun "property_hex" ((alias Custom) (alias i32)) (alias void))) annotations=Injected
      |-NameIdentifierNode="property_hex" type=(intersection (fun "property_hex" ((alias Custom)) (alias i32)) (fun "property_hex" ((alias Custom) (alias i32)) (alias void)))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_hex" ((alias Custom)) (alias i32)) annotations=IsOverloaded
          |-NameIdentifierNode="property_hex"
          |-ParameterNode annotations=Local(self:Custom#0)
            |-NameIdentifierNode="self" type=(alias Custom (struct hex:<null>))
            |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "property$0" ((alias Custom)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode type=(intersection (fun "property$0" ((alias Custom)) (alias i32)) (fun "property$0" ((alias Custom) (alias i32)) (alias void)))
              |-QNameNode=property$0
                |-NameIdentifierNode="property$0"
            |-ReferenceNode type=(alias Custom (struct hex:<null>)) annotations=IsValueNode,Local(self:Custom#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_hex" ((alias Custom) (alias i32)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="property_hex"
          |-ParameterNode annotations=Local(self:Custom#0)
            |-NameIdentifierNode="self" type=(alias Custom (struct hex:<null>))
            |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "property$0" ((alias Custom) (alias i32)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "property$0" ((alias Custom)) (alias i32)) (fun "property$0" ((alias Custom) (alias i32)) (alias void)))
              |-QNameNode=property$0
                |-NameIdentifierNode="property$0"
            |-ReferenceNode type=(alias Custom (struct hex:<null>)) annotations=IsValueNode,Local(self:Custom#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
    |-OverloadedFunctionNode type=(intersection (fun "property$0" ((alias Custom)) (alias i32)) (fun "property$0" ((alias Custom) (alias i32)) (alias void))) annotations=Injected
      |-NameIdentifierNode="property$0" type=(intersection (fun "property$0" ((alias Custom)) (alias i32)) (fun "property$0" ((alias Custom) (alias i32)) (alias void)))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$0" ((alias Custom)) (alias i32)) annotations=IsOverloaded
          |-NameIdentifierNode="property$0" annotations=Inline
          |-ParameterNode annotations=Local(self:Custom#0)
            |-NameIdentifierNode="self" type=(alias Custom (struct hex:<null>))
            |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "load" ((alias ref) (alias u32)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="load"
            |-ReferenceNode type=(alias Custom (struct hex:<null>)) annotations=IsValueNode,Local(self:Custom#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
                |-QNameNode=Custom
                  |-NameIdentifierNode="Custom"
              |-NameIdentifierNode="property$0_offset"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$0" ((alias Custom) (alias i32)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="property$0" annotations=Inline
          |-ParameterNode annotations=Local(self:Custom#0)
            |-NameIdentifierNode="self" type=(alias Custom (struct hex:<null>))
            |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)) type=(alias void (native void))
            |-MemberNode type=(intersection (fun "store" ((alias ref) (alias i32)) (alias void)) (fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="store"
            |-ReferenceNode type=(alias Custom (struct hex:<null>)) annotations=IsValueNode,Local(self:Custom#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
                |-QNameNode=Custom
                  |-NameIdentifierNode="Custom"
              |-NameIdentifierNode="property$0_offset"
    |-OverloadedFunctionNode type=(fun "is" ((union (alias Custom) (alias ref))) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="is" type=(fun "is" ((union (alias Custom) (alias ref))) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "is" ((union (alias Custom) (alias ref))) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="is"
          |-ParameterNode annotations=Local(a:Custom | ref#0)
            |-NameIdentifierNode="a" type=(union (alias Custom (struct hex:<null>)) (alias ref (ref ?)))
            |-UnionTypeNode type=(type (union (alias Custom (struct hex:<null>)) (alias ref (ref ?))))
              |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
                |-QNameNode=Custom
                  |-NameIdentifierNode="Custom"
              |-ReferenceNode type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-HexLiteral=18446744069414584000
                |-WasmAtomNode
                  |-QNameNode=$a
                    |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-ReferenceNode type=(fun "Custom$discriminant" () (alias u64))
                  |-QNameNode=Custom$discriminant
                    |-NameIdentifierNode="Custom$discriminant"
    |-OverloadedFunctionNode type=(fun "store" ((alias ref) (alias Custom) (alias u32)) (alias void)) annotations=Injected
      |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Custom) (alias u32)) (alias void))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "store" ((alias ref) (alias Custom) (alias u32)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="store"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:Custom#1)
            |-NameIdentifierNode="rhs" type=(alias Custom (struct hex:<null>))
            |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
    |-OverloadedFunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Custom)) annotations=Injected
      |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Custom))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Custom)) annotations=IsOverloaded
          |-NameIdentifierNode="load"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
            |-QNameNode=Custom
              |-NameIdentifierNode="Custom"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="None" type=(type (alias None (struct)))
    |-StructTypeNode type=(type (alias None (struct)))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Red" type=(type (alias Red (struct)))
    |-StructTypeNode type=(type (alias Red (struct)))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Custom" type=(type (alias Custom (struct hex:<null>)))
    |-StructTypeNode type=(type (alias Custom (struct hex:<null>)))
      |-ParameterNode
        |-NameIdentifierNode="hex"
        |-ReferenceNode
          |-QNameNode=i32
            |-NameIdentifierNode="i32"
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="CatBag" type=(type (alias CatBag (struct f:<null> g:<null>)))
    |-StructTypeNode type=(type (alias CatBag (struct f:<null> g:<null>)))
      |-ParameterNode
        |-NameIdentifierNode="f"
        |-ReferenceNode
          |-QNameNode=Color
            |-NameIdentifierNode="Color"
      |-ParameterNode
        |-NameIdentifierNode="g"
        |-UnionTypeNode
          |-ReferenceNode
            |-QNameNode=Red
              |-NameIdentifierNode="Red"
          |-ReferenceNode
            |-QNameNode=None
              |-NameIdentifierNode="None"
  |-ImplDirective
    |-ReferenceNode
      |-QNameNode=CatBag
        |-NameIdentifierNode="CatBag"
    |-OverloadedFunctionNode type=(fun "CatBag$discriminant" () (alias u64)) annotations=Injected
      |-NameIdentifierNode="CatBag$discriminant" type=(fun "CatBag$discriminant" () (alias u64))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "CatBag$discriminant" () (alias u64)) annotations=IsOverloaded
          |-NameIdentifierNode="CatBag$discriminant" annotations=Inline
          |-ReferenceNode type=(type (alias u64 (native u64)))
            |-QNameNode=u64
              |-NameIdentifierNode="u64"
          |-BlockNode type=(alias u64 (native u64)) annotations=IsValueNode
            |-ValDeclarationNode type=(native void) annotations=Local(test::fixtures::execution::setStructValues::discriminant_3:u32#0)
              |-NameIdentifierNode="discriminant" type=(alias u32 (native u32))
              |-ReferenceNode type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
              |-MemberNode type=(native u32) annotations=IsValueNode
                |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
                  |-QNameNode=CatBag
                    |-NameIdentifierNode="CatBag"
                |-NameIdentifierNode="discriminant"
            |-BinaryExpressionNode=(fun "<<" ((alias u64) (alias i32)) (alias u64)) type=(alias u64 (native u64)) annotations=IsValueNode,IsReturnExpression
              |-AsExpressionNode=(fun "as" ((alias u32)) (alias u64)) type=(alias u64 (native u64)) annotations=IsValueNode
                |-ReferenceNode type=(alias u32 (native u32)) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::discriminant_3:u32#0)
                  |-QNameNode=discriminant
                    |-NameIdentifierNode="discriminant"
                |-ReferenceNode type=(type (alias u64 (native u64)))
                  |-QNameNode=u64
                    |-NameIdentifierNode="u64"
              |-NameIdentifierNode="<<"
              |-IntegerLiteral=32 type=(alias i32 (native i32)) annotations=IsValueNode
    |-OverloadedFunctionNode type=(fun "apply" ((alias Color) (union (alias Red) (alias None))) (alias CatBag)) annotations=Injected
      |-NameIdentifierNode="apply" type=(fun "apply" ((alias Color) (union (alias Red) (alias None))) (alias CatBag))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "apply" ((alias Color) (union (alias Red) (alias None))) (alias CatBag)) annotations=IsOverloaded
          |-NameIdentifierNode="apply"
          |-ParameterNode annotations=Local(f:Color#0)
            |-NameIdentifierNode="f" type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>))))
            |-ReferenceNode type=(type (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-ParameterNode annotations=Local(g:Red | None#1)
            |-NameIdentifierNode="g" type=(union (alias Red (struct)) (alias None (struct)))
            |-UnionTypeNode type=(type (union (alias Red (struct)) (alias None (struct))))
              |-ReferenceNode type=(type (alias Red (struct)))
                |-QNameNode=Red
                  |-NameIdentifierNode="Red"
              |-ReferenceNode type=(type (alias None (struct)))
                |-QNameNode=None
                  |-NameIdentifierNode="None"
          |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
            |-QNameNode=CatBag
              |-NameIdentifierNode="CatBag"
          |-BlockNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=IsValueNode
            |-VarDeclarationNode type=(native void) annotations=Local(test::fixtures::execution::setStructValues::$ref_1:CatBag#2)
              |-NameIdentifierNode="$ref" type=(alias CatBag (struct f:<null> g:<null>))
              |-FunctionCallNode=(fun "fromPointer" ((alias u32)) (alias CatBag)) type=(alias CatBag (struct f:<null> g:<null>)) annotations=IsValueNode
                |-ReferenceNode type=(fun "fromPointer" ((alias u32)) (alias CatBag))
                  |-QNameNode=fromPointer
                    |-NameIdentifierNode="fromPointer"
                |-FunctionCallNode=(fun "calloc" ((alias u32) (alias u32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
                  |-ReferenceNode type=(fun "calloc" ((alias u32) (alias u32)) (alias u32))
                    |-QNameNode=system::memory::calloc
                      |-NameIdentifierNode="system"
                      |-NameIdentifierNode="memory"
                      |-NameIdentifierNode="calloc"
                  |-AsExpressionNode=(fun "as" ((alias i32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
                    |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
                    |-ReferenceNode type=(type (alias u32 (native u32)))
                      |-QNameNode=u32
                        |-NameIdentifierNode="u32"
                  |-MemberNode type=(native u32) annotations=IsValueNode
                    |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
                      |-QNameNode=CatBag
                        |-NameIdentifierNode="CatBag"
                    |-NameIdentifierNode="allocationSize"
            |-FunctionCallNode=(fun "property$0" ((alias CatBag) (alias Color)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "property$0" ((alias CatBag)) (alias Color)) (fun "property$0" ((alias CatBag) (alias Color)) (alias void)))
                |-QNameNode=property$0
                  |-NameIdentifierNode="property$0"
              |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::$ref_1:CatBag#2)
                |-QNameNode=$ref
                  |-NameIdentifierNode="$ref"
              |-ReferenceNode type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))) annotations=IsValueNode,Local(f:Color#0)
                |-QNameNode=f
                  |-NameIdentifierNode="f"
            |-FunctionCallNode=(fun "property$1" ((alias CatBag) (union (alias Red) (alias None))) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "property$1" ((alias CatBag)) (union (alias Red) (alias None))) (fun "property$1" ((alias CatBag) (union (alias Red) (alias None))) (alias void)))
                |-QNameNode=property$1
                  |-NameIdentifierNode="property$1"
              |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::$ref_1:CatBag#2)
                |-QNameNode=$ref
                  |-NameIdentifierNode="$ref"
              |-ReferenceNode type=(union (alias Red (struct)) (alias None (struct))) annotations=IsValueNode,Local(g:Red | None#1)
                |-QNameNode=g
                  |-NameIdentifierNode="g"
            |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=IsValueNode,IsReturnExpression,Local(test::fixtures::execution::setStructValues::$ref_1:CatBag#2)
              |-QNameNode=$ref
                |-NameIdentifierNode="$ref"
    |-OverloadedFunctionNode type=(fun "fromPointer" ((alias u32)) (alias CatBag)) annotations=Injected
      |-NameIdentifierNode="fromPointer" type=(fun "fromPointer" ((alias u32)) (alias CatBag))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "fromPointer" ((alias u32)) (alias CatBag)) annotations=IsOverloaded
          |-NameIdentifierNode="fromPointer"
          |-ParameterNode annotations=Local(ptr:u32#0)
            |-NameIdentifierNode="ptr" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
            |-QNameNode=CatBag
              |-NameIdentifierNode="CatBag"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-ReferenceNode type=(fun "CatBag$discriminant" () (alias u64))
                  |-QNameNode=CatBag$discriminant
                    |-NameIdentifierNode="CatBag$discriminant"
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$ptr
                    |-NameIdentifierNode="$ptr"
    |-OverloadedFunctionNode type=(fun "==" ((alias CatBag) (alias CatBag)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="==" type=(fun "==" ((alias CatBag) (alias CatBag)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "==" ((alias CatBag) (alias CatBag)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="=="
          |-ParameterNode annotations=Local(a:CatBag#0)
            |-NameIdentifierNode="a" type=(alias CatBag (struct f:<null> g:<null>))
            |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
              |-QNameNode=CatBag
                |-NameIdentifierNode="CatBag"
          |-ParameterNode annotations=Local(b:CatBag#1)
            |-NameIdentifierNode="b" type=(alias CatBag (struct f:<null> g:<null>))
            |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
              |-QNameNode=CatBag
                |-NameIdentifierNode="CatBag"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode type=(fun "!=" ((alias CatBag) (alias CatBag)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias CatBag) (alias CatBag)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "!=" ((alias CatBag) (alias CatBag)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="!="
          |-ParameterNode annotations=Local(a:CatBag#0)
            |-NameIdentifierNode="a" type=(alias CatBag (struct f:<null> g:<null>))
            |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
              |-QNameNode=CatBag
                |-NameIdentifierNode="CatBag"
          |-ParameterNode annotations=Local(b:CatBag#1)
            |-NameIdentifierNode="b" type=(alias CatBag (struct f:<null> g:<null>))
            |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
              |-QNameNode=CatBag
                |-NameIdentifierNode="CatBag"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode type=(intersection (fun "property_f" ((alias CatBag)) (alias Color)) (fun "property_f" ((alias CatBag) (alias Color)) (alias void))) annotations=Injected
      |-NameIdentifierNode="property_f" type=(intersection (fun "property_f" ((alias CatBag)) (alias Color)) (fun "property_f" ((alias CatBag) (alias Color)) (alias void)))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_f" ((alias CatBag)) (alias Color)) annotations=IsOverloaded
          |-NameIdentifierNode="property_f"
          |-ParameterNode annotations=Local(self:CatBag#0)
            |-NameIdentifierNode="self" type=(alias CatBag (struct f:<null> g:<null>))
            |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
              |-QNameNode=CatBag
                |-NameIdentifierNode="CatBag"
          |-ReferenceNode type=(type (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
          |-FunctionCallNode=(fun "property$0" ((alias CatBag)) (alias Color)) type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode type=(intersection (fun "property$0" ((alias CatBag)) (alias Color)) (fun "property$0" ((alias CatBag) (alias Color)) (alias void)))
              |-QNameNode=property$0
                |-NameIdentifierNode="property$0"
            |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=IsValueNode,Local(self:CatBag#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_f" ((alias CatBag) (alias Color)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="property_f"
          |-ParameterNode annotations=Local(self:CatBag#0)
            |-NameIdentifierNode="self" type=(alias CatBag (struct f:<null> g:<null>))
            |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
              |-QNameNode=CatBag
                |-NameIdentifierNode="CatBag"
          |-ParameterNode annotations=Local(value:Color#1)
            |-NameIdentifierNode="value" type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>))))
            |-ReferenceNode type=(type (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "property$0" ((alias CatBag) (alias Color)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "property$0" ((alias CatBag)) (alias Color)) (fun "property$0" ((alias CatBag) (alias Color)) (alias void)))
              |-QNameNode=property$0
                |-NameIdentifierNode="property$0"
            |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=IsValueNode,Local(self:CatBag#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))) annotations=IsValueNode,Local(value:Color#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
    |-OverloadedFunctionNode type=(intersection (fun "property$0" ((alias CatBag)) (alias Color)) (fun "property$0" ((alias CatBag) (alias Color)) (alias void))) annotations=Injected
      |-NameIdentifierNode="property$0" type=(intersection (fun "property$0" ((alias CatBag)) (alias Color)) (fun "property$0" ((alias CatBag) (alias Color)) (alias void)))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$0" ((alias CatBag)) (alias Color)) annotations=IsOverloaded
          |-NameIdentifierNode="property$0" annotations=Inline
          |-ParameterNode annotations=Local(self:CatBag#0)
            |-NameIdentifierNode="self" type=(alias CatBag (struct f:<null> g:<null>))
            |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
              |-QNameNode=CatBag
                |-NameIdentifierNode="CatBag"
          |-ReferenceNode type=(type (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
          |-FunctionCallNode=(fun "load" ((alias ref) (alias u32)) (alias Color)) type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))) annotations=IsValueNode,IsReturnExpression
            |-MemberNode type=(fun "load" ((alias ref) (alias u32)) (alias Color))
              |-ReferenceNode type=(type (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))))
                |-QNameNode=Color
                  |-NameIdentifierNode="Color"
              |-NameIdentifierNode="load"
            |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=IsValueNode,Local(self:CatBag#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
                |-QNameNode=CatBag
                  |-NameIdentifierNode="CatBag"
              |-NameIdentifierNode="property$0_offset"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$0" ((alias CatBag) (alias Color)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="property$0" annotations=Inline
          |-ParameterNode annotations=Local(self:CatBag#0)
            |-NameIdentifierNode="self" type=(alias CatBag (struct f:<null> g:<null>))
            |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
              |-QNameNode=CatBag
                |-NameIdentifierNode="CatBag"
          |-ParameterNode annotations=Local(value:Color#1)
            |-NameIdentifierNode="value" type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>))))
            |-ReferenceNode type=(type (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "store" ((alias ref) (alias Color) (alias u32)) (alias void)) type=(alias void (native void))
            |-MemberNode type=(fun "store" ((alias ref) (alias Color) (alias u32)) (alias void))
              |-ReferenceNode type=(type (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))))
                |-QNameNode=Color
                  |-NameIdentifierNode="Color"
              |-NameIdentifierNode="store"
            |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=IsValueNode,Local(self:CatBag#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))) annotations=IsValueNode,Local(value:Color#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
                |-QNameNode=CatBag
                  |-NameIdentifierNode="CatBag"
              |-NameIdentifierNode="property$0_offset"
    |-OverloadedFunctionNode type=(intersection (fun "property_g" ((alias CatBag)) (union (alias Red) (alias None))) (fun "property_g" ((alias CatBag) (union (alias Red) (alias None))) (alias void))) annotations=Injected
      |-NameIdentifierNode="property_g" type=(intersection (fun "property_g" ((alias CatBag)) (union (alias Red) (alias None))) (fun "property_g" ((alias CatBag) (union (alias Red) (alias None))) (alias void)))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_g" ((alias CatBag)) (union (alias Red) (alias None))) annotations=IsOverloaded
          |-NameIdentifierNode="property_g"
          |-ParameterNode annotations=Local(self:CatBag#0)
            |-NameIdentifierNode="self" type=(alias CatBag (struct f:<null> g:<null>))
            |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
              |-QNameNode=CatBag
                |-NameIdentifierNode="CatBag"
          |-UnionTypeNode type=(type (union (alias Red (struct)) (alias None (struct))))
            |-ReferenceNode type=(type (alias Red (struct)))
              |-QNameNode=Red
                |-NameIdentifierNode="Red"
            |-ReferenceNode type=(type (alias None (struct)))
              |-QNameNode=None
                |-NameIdentifierNode="None"
          |-FunctionCallNode=(fun "property$1" ((alias CatBag)) (union (alias Red) (alias None))) type=(union (alias Red (struct)) (alias None (struct))) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode type=(intersection (fun "property$1" ((alias CatBag)) (union (alias Red) (alias None))) (fun "property$1" ((alias CatBag) (union (alias Red) (alias None))) (alias void)))
              |-QNameNode=property$1
                |-NameIdentifierNode="property$1"
            |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=IsValueNode,Local(self:CatBag#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_g" ((alias CatBag) (union (alias Red) (alias None))) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="property_g"
          |-ParameterNode annotations=Local(self:CatBag#0)
            |-NameIdentifierNode="self" type=(alias CatBag (struct f:<null> g:<null>))
            |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
              |-QNameNode=CatBag
                |-NameIdentifierNode="CatBag"
          |-ParameterNode annotations=Local(value:Red | None#1)
            |-NameIdentifierNode="value" type=(union (alias Red (struct)) (alias None (struct)))
            |-UnionTypeNode type=(type (union (alias Red (struct)) (alias None (struct))))
              |-ReferenceNode type=(type (alias Red (struct)))
                |-QNameNode=Red
                  |-NameIdentifierNode="Red"
              |-ReferenceNode type=(type (alias None (struct)))
                |-QNameNode=None
                  |-NameIdentifierNode="None"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "property$1" ((alias CatBag) (union (alias Red) (alias None))) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "property$1" ((alias CatBag)) (union (alias Red) (alias None))) (fun "property$1" ((alias CatBag) (union (alias Red) (alias None))) (alias void)))
              |-QNameNode=property$1
                |-NameIdentifierNode="property$1"
            |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=IsValueNode,Local(self:CatBag#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(union (alias Red (struct)) (alias None (struct))) annotations=IsValueNode,Local(value:Red | None#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
    |-OverloadedFunctionNode type=(intersection (fun "property$1" ((alias CatBag)) (union (alias Red) (alias None))) (fun "property$1" ((alias CatBag) (union (alias Red) (alias None))) (alias void))) annotations=Injected
      |-NameIdentifierNode="property$1" type=(intersection (fun "property$1" ((alias CatBag)) (union (alias Red) (alias None))) (fun "property$1" ((alias CatBag) (union (alias Red) (alias None))) (alias void)))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$1" ((alias CatBag)) (union (alias Red) (alias None))) annotations=IsOverloaded
          |-NameIdentifierNode="property$1" annotations=Inline
          |-ParameterNode annotations=Local(self:CatBag#0)
            |-NameIdentifierNode="self" type=(alias CatBag (struct f:<null> g:<null>))
            |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
              |-QNameNode=CatBag
                |-NameIdentifierNode="CatBag"
          |-UnionTypeNode type=(type (union (alias Red (struct)) (alias None (struct))))
            |-ReferenceNode type=(type (alias Red (struct)))
              |-QNameNode=Red
                |-NameIdentifierNode="Red"
            |-ReferenceNode type=(type (alias None (struct)))
              |-QNameNode=None
                |-NameIdentifierNode="None"
          |-FunctionCallNode=(fun "loadPropertyWithOffset$1" ((alias CatBag) (alias u32)) (union (alias Red) (alias None))) type=(union (alias Red (struct)) (alias None (struct))) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode type=(fun "loadPropertyWithOffset$1" ((alias CatBag) (alias u32)) (union (alias Red) (alias None)))
              |-QNameNode=loadPropertyWithOffset$1
                |-NameIdentifierNode="loadPropertyWithOffset$1"
            |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=IsValueNode,Local(self:CatBag#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
                |-QNameNode=CatBag
                  |-NameIdentifierNode="CatBag"
              |-NameIdentifierNode="property$1_offset"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$1" ((alias CatBag) (union (alias Red) (alias None))) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="property$1" annotations=Inline
          |-ParameterNode annotations=Local(self:CatBag#0)
            |-NameIdentifierNode="self" type=(alias CatBag (struct f:<null> g:<null>))
            |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
              |-QNameNode=CatBag
                |-NameIdentifierNode="CatBag"
          |-ParameterNode annotations=Local(value:Red | None#1)
            |-NameIdentifierNode="value" type=(union (alias Red (struct)) (alias None (struct)))
            |-UnionTypeNode type=(type (union (alias Red (struct)) (alias None (struct))))
              |-ReferenceNode type=(type (alias Red (struct)))
                |-QNameNode=Red
                  |-NameIdentifierNode="Red"
              |-ReferenceNode type=(type (alias None (struct)))
                |-QNameNode=None
                  |-NameIdentifierNode="None"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "storePropertyWithOffset$1" ((alias CatBag) (union (alias Red) (alias None)) (alias u32)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(fun "storePropertyWithOffset$1" ((alias CatBag) (union (alias Red) (alias None)) (alias u32)) (alias void))
              |-QNameNode=storePropertyWithOffset$1
                |-NameIdentifierNode="storePropertyWithOffset$1"
            |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=IsValueNode,Local(self:CatBag#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(union (alias Red (struct)) (alias None (struct))) annotations=IsValueNode,Local(value:Red | None#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
                |-QNameNode=CatBag
                  |-NameIdentifierNode="CatBag"
              |-NameIdentifierNode="property$1_offset"
    |-OverloadedFunctionNode type=(fun "loadPropertyWithOffset$1" ((alias CatBag) (alias u32)) (union (alias Red) (alias None))) annotations=Injected
      |-NameIdentifierNode="loadPropertyWithOffset$1" type=(fun "loadPropertyWithOffset$1" ((alias CatBag) (alias u32)) (union (alias Red) (alias None)))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "loadPropertyWithOffset$1" ((alias CatBag) (alias u32)) (union (alias Red) (alias None))) annotations=IsOverloaded
          |-NameIdentifierNode="loadPropertyWithOffset$1" annotations=Inline
          |-ParameterNode annotations=Local(self:CatBag#0)
            |-NameIdentifierNode="self" type=(alias CatBag (struct f:<null> g:<null>))
            |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
              |-QNameNode=CatBag
                |-NameIdentifierNode="CatBag"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-UnionTypeNode type=(type (union (alias Red (struct)) (alias None (struct))))
            |-ReferenceNode type=(type (alias Red (struct)))
              |-QNameNode=Red
                |-NameIdentifierNode="Red"
            |-ReferenceNode type=(type (alias None (struct)))
              |-QNameNode=None
                |-NameIdentifierNode="None"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$self
                      |-NameIdentifierNode="$self"
    |-OverloadedFunctionNode type=(fun "storePropertyWithOffset$1" ((alias CatBag) (union (alias Red) (alias None)) (alias u32)) (alias void)) annotations=Injected
      |-NameIdentifierNode="storePropertyWithOffset$1" type=(fun "storePropertyWithOffset$1" ((alias CatBag) (union (alias Red) (alias None)) (alias u32)) (alias void))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "storePropertyWithOffset$1" ((alias CatBag) (union (alias Red) (alias None)) (alias u32)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="storePropertyWithOffset$1" annotations=Inline
          |-ParameterNode annotations=Local(self:CatBag#0)
            |-NameIdentifierNode="self" type=(alias CatBag (struct f:<null> g:<null>))
            |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
              |-QNameNode=CatBag
                |-NameIdentifierNode="CatBag"
          |-ParameterNode annotations=Local(value:Red | None#1)
            |-NameIdentifierNode="value" type=(union (alias Red (struct)) (alias None (struct)))
            |-UnionTypeNode type=(type (union (alias Red (struct)) (alias None (struct))))
              |-ReferenceNode type=(type (alias Red (struct)))
                |-QNameNode=Red
                  |-NameIdentifierNode="Red"
              |-ReferenceNode type=(type (alias None (struct)))
                |-QNameNode=None
                  |-NameIdentifierNode="None"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$self
                      |-NameIdentifierNode="$self"
              |-WasmAtomNode
                |-QNameNode=$value
                  |-NameIdentifierNode="$value"
    |-OverloadedFunctionNode type=(fun "is" ((union (alias CatBag) (alias ref))) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="is" type=(fun "is" ((union (alias CatBag) (alias ref))) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "is" ((union (alias CatBag) (alias ref))) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="is"
          |-ParameterNode annotations=Local(a:CatBag | ref#0)
            |-NameIdentifierNode="a" type=(union (alias CatBag (struct f:<null> g:<null>)) (alias ref (ref ?)))
            |-UnionTypeNode type=(type (union (alias CatBag (struct f:<null> g:<null>)) (alias ref (ref ?))))
              |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
                |-QNameNode=CatBag
                  |-NameIdentifierNode="CatBag"
              |-ReferenceNode type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-HexLiteral=18446744069414584000
                |-WasmAtomNode
                  |-QNameNode=$a
                    |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-ReferenceNode type=(fun "CatBag$discriminant" () (alias u64))
                  |-QNameNode=CatBag$discriminant
                    |-NameIdentifierNode="CatBag$discriminant"
    |-OverloadedFunctionNode type=(fun "store" ((alias ref) (alias CatBag) (alias u32)) (alias void)) annotations=Injected
      |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias CatBag) (alias u32)) (alias void))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "store" ((alias ref) (alias CatBag) (alias u32)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="store"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:CatBag#1)
            |-NameIdentifierNode="rhs" type=(alias CatBag (struct f:<null> g:<null>))
            |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
              |-QNameNode=CatBag
                |-NameIdentifierNode="CatBag"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
    |-OverloadedFunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias CatBag)) annotations=Injected
      |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias CatBag))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias CatBag)) annotations=IsOverloaded
          |-NameIdentifierNode="load"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
            |-QNameNode=CatBag
              |-NameIdentifierNode="CatBag"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
    |-OverloadedFunctionNode type=(fun "as" ((alias CatBag)) (alias ref)) annotations=Injected
      |-NameIdentifierNode="as" type=(fun "as" ((alias CatBag)) (alias ref))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode type=(fun "as" ((alias CatBag)) (alias ref)) annotations=IsOverloaded
          |-NameIdentifierNode="as" annotations=Explicit
          |-ParameterNode annotations=Local(lhs:CatBag#0)
            |-NameIdentifierNode="lhs" type=(alias CatBag (struct f:<null> g:<null>))
            |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
              |-QNameNode=CatBag
                |-NameIdentifierNode="CatBag"
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Custom2" type=(type (alias Custom2 (struct r:<null> g:<null>)))
    |-StructTypeNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
      |-ParameterNode
        |-NameIdentifierNode="r"
        |-ReferenceNode
          |-QNameNode=i32
            |-NameIdentifierNode="i32"
      |-ParameterNode
        |-NameIdentifierNode="g"
        |-ReferenceNode
          |-QNameNode=i32
            |-NameIdentifierNode="i32"
  |-ImplDirective
    |-ReferenceNode
      |-QNameNode=Custom2
        |-NameIdentifierNode="Custom2"
    |-OverloadedFunctionNode type=(fun "Custom2$discriminant" () (alias u64)) annotations=Injected
      |-NameIdentifierNode="Custom2$discriminant" type=(fun "Custom2$discriminant" () (alias u64))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "Custom2$discriminant" () (alias u64)) annotations=IsOverloaded
          |-NameIdentifierNode="Custom2$discriminant" annotations=Inline
          |-ReferenceNode type=(type (alias u64 (native u64)))
            |-QNameNode=u64
              |-NameIdentifierNode="u64"
          |-BlockNode type=(alias u64 (native u64)) annotations=IsValueNode
            |-ValDeclarationNode type=(native void) annotations=Local(test::fixtures::execution::setStructValues::discriminant_4:u32#0)
              |-NameIdentifierNode="discriminant" type=(alias u32 (native u32))
              |-ReferenceNode type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
              |-MemberNode type=(native u32) annotations=IsValueNode
                |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
                  |-QNameNode=Custom2
                    |-NameIdentifierNode="Custom2"
                |-NameIdentifierNode="discriminant"
            |-BinaryExpressionNode=(fun "<<" ((alias u64) (alias i32)) (alias u64)) type=(alias u64 (native u64)) annotations=IsValueNode,IsReturnExpression
              |-AsExpressionNode=(fun "as" ((alias u32)) (alias u64)) type=(alias u64 (native u64)) annotations=IsValueNode
                |-ReferenceNode type=(alias u32 (native u32)) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::discriminant_4:u32#0)
                  |-QNameNode=discriminant
                    |-NameIdentifierNode="discriminant"
                |-ReferenceNode type=(type (alias u64 (native u64)))
                  |-QNameNode=u64
                    |-NameIdentifierNode="u64"
              |-NameIdentifierNode="<<"
              |-IntegerLiteral=32 type=(alias i32 (native i32)) annotations=IsValueNode
    |-OverloadedFunctionNode type=(fun "apply" ((alias i32) (alias i32)) (alias Custom2)) annotations=Injected
      |-NameIdentifierNode="apply" type=(fun "apply" ((alias i32) (alias i32)) (alias Custom2))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "apply" ((alias i32) (alias i32)) (alias Custom2)) annotations=IsOverloaded
          |-NameIdentifierNode="apply"
          |-ParameterNode annotations=Local(r:i32#0)
            |-NameIdentifierNode="r" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-ParameterNode annotations=Local(g:i32#1)
            |-NameIdentifierNode="g" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
            |-QNameNode=Custom2
              |-NameIdentifierNode="Custom2"
          |-BlockNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode
            |-VarDeclarationNode type=(native void) annotations=Local(test::fixtures::execution::setStructValues::$ref_2:Custom2#2)
              |-NameIdentifierNode="$ref" type=(alias Custom2 (struct r:<null> g:<null>))
              |-FunctionCallNode=(fun "fromPointer" ((alias u32)) (alias Custom2)) type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode
                |-ReferenceNode type=(fun "fromPointer" ((alias u32)) (alias Custom2))
                  |-QNameNode=fromPointer
                    |-NameIdentifierNode="fromPointer"
                |-FunctionCallNode=(fun "calloc" ((alias u32) (alias u32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
                  |-ReferenceNode type=(fun "calloc" ((alias u32) (alias u32)) (alias u32))
                    |-QNameNode=system::memory::calloc
                      |-NameIdentifierNode="system"
                      |-NameIdentifierNode="memory"
                      |-NameIdentifierNode="calloc"
                  |-AsExpressionNode=(fun "as" ((alias i32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
                    |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
                    |-ReferenceNode type=(type (alias u32 (native u32)))
                      |-QNameNode=u32
                        |-NameIdentifierNode="u32"
                  |-MemberNode type=(native u32) annotations=IsValueNode
                    |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
                      |-QNameNode=Custom2
                        |-NameIdentifierNode="Custom2"
                    |-NameIdentifierNode="allocationSize"
            |-FunctionCallNode=(fun "property$0" ((alias Custom2) (alias i32)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "property$0" ((alias Custom2)) (alias i32)) (fun "property$0" ((alias Custom2) (alias i32)) (alias void)))
                |-QNameNode=property$0
                  |-NameIdentifierNode="property$0"
              |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::$ref_2:Custom2#2)
                |-QNameNode=$ref
                  |-NameIdentifierNode="$ref"
              |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(r:i32#0)
                |-QNameNode=r
                  |-NameIdentifierNode="r"
            |-FunctionCallNode=(fun "property$1" ((alias Custom2) (alias i32)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "property$1" ((alias Custom2)) (alias i32)) (fun "property$1" ((alias Custom2) (alias i32)) (alias void)))
                |-QNameNode=property$1
                  |-NameIdentifierNode="property$1"
              |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::$ref_2:Custom2#2)
                |-QNameNode=$ref
                  |-NameIdentifierNode="$ref"
              |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(g:i32#1)
                |-QNameNode=g
                  |-NameIdentifierNode="g"
            |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,IsReturnExpression,Local(test::fixtures::execution::setStructValues::$ref_2:Custom2#2)
              |-QNameNode=$ref
                |-NameIdentifierNode="$ref"
    |-OverloadedFunctionNode type=(fun "fromPointer" ((alias u32)) (alias Custom2)) annotations=Injected
      |-NameIdentifierNode="fromPointer" type=(fun "fromPointer" ((alias u32)) (alias Custom2))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "fromPointer" ((alias u32)) (alias Custom2)) annotations=IsOverloaded
          |-NameIdentifierNode="fromPointer"
          |-ParameterNode annotations=Local(ptr:u32#0)
            |-NameIdentifierNode="ptr" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
            |-QNameNode=Custom2
              |-NameIdentifierNode="Custom2"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-ReferenceNode type=(fun "Custom2$discriminant" () (alias u64))
                  |-QNameNode=Custom2$discriminant
                    |-NameIdentifierNode="Custom2$discriminant"
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$ptr
                    |-NameIdentifierNode="$ptr"
    |-OverloadedFunctionNode type=(fun "==" ((alias Custom2) (alias Custom2)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="==" type=(fun "==" ((alias Custom2) (alias Custom2)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "==" ((alias Custom2) (alias Custom2)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="=="
          |-ParameterNode annotations=Local(a:Custom2#0)
            |-NameIdentifierNode="a" type=(alias Custom2 (struct r:<null> g:<null>))
            |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
              |-QNameNode=Custom2
                |-NameIdentifierNode="Custom2"
          |-ParameterNode annotations=Local(b:Custom2#1)
            |-NameIdentifierNode="b" type=(alias Custom2 (struct r:<null> g:<null>))
            |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
              |-QNameNode=Custom2
                |-NameIdentifierNode="Custom2"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode type=(fun "!=" ((alias Custom2) (alias Custom2)) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias Custom2) (alias Custom2)) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "!=" ((alias Custom2) (alias Custom2)) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="!="
          |-ParameterNode annotations=Local(a:Custom2#0)
            |-NameIdentifierNode="a" type=(alias Custom2 (struct r:<null> g:<null>))
            |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
              |-QNameNode=Custom2
                |-NameIdentifierNode="Custom2"
          |-ParameterNode annotations=Local(b:Custom2#1)
            |-NameIdentifierNode="b" type=(alias Custom2 (struct r:<null> g:<null>))
            |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
              |-QNameNode=Custom2
                |-NameIdentifierNode="Custom2"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode type=(intersection (fun "property_r" ((alias Custom2)) (alias i32)) (fun "property_r" ((alias Custom2) (alias i32)) (alias void))) annotations=Injected
      |-NameIdentifierNode="property_r" type=(intersection (fun "property_r" ((alias Custom2)) (alias i32)) (fun "property_r" ((alias Custom2) (alias i32)) (alias void)))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_r" ((alias Custom2)) (alias i32)) annotations=IsOverloaded
          |-NameIdentifierNode="property_r"
          |-ParameterNode annotations=Local(self:Custom2#0)
            |-NameIdentifierNode="self" type=(alias Custom2 (struct r:<null> g:<null>))
            |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
              |-QNameNode=Custom2
                |-NameIdentifierNode="Custom2"
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "property$0" ((alias Custom2)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode type=(intersection (fun "property$0" ((alias Custom2)) (alias i32)) (fun "property$0" ((alias Custom2) (alias i32)) (alias void)))
              |-QNameNode=property$0
                |-NameIdentifierNode="property$0"
            |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Local(self:Custom2#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_r" ((alias Custom2) (alias i32)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="property_r"
          |-ParameterNode annotations=Local(self:Custom2#0)
            |-NameIdentifierNode="self" type=(alias Custom2 (struct r:<null> g:<null>))
            |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
              |-QNameNode=Custom2
                |-NameIdentifierNode="Custom2"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "property$0" ((alias Custom2) (alias i32)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "property$0" ((alias Custom2)) (alias i32)) (fun "property$0" ((alias Custom2) (alias i32)) (alias void)))
              |-QNameNode=property$0
                |-NameIdentifierNode="property$0"
            |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Local(self:Custom2#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
    |-OverloadedFunctionNode type=(intersection (fun "property$0" ((alias Custom2)) (alias i32)) (fun "property$0" ((alias Custom2) (alias i32)) (alias void))) annotations=Injected
      |-NameIdentifierNode="property$0" type=(intersection (fun "property$0" ((alias Custom2)) (alias i32)) (fun "property$0" ((alias Custom2) (alias i32)) (alias void)))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$0" ((alias Custom2)) (alias i32)) annotations=IsOverloaded
          |-NameIdentifierNode="property$0" annotations=Inline
          |-ParameterNode annotations=Local(self:Custom2#0)
            |-NameIdentifierNode="self" type=(alias Custom2 (struct r:<null> g:<null>))
            |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
              |-QNameNode=Custom2
                |-NameIdentifierNode="Custom2"
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "load" ((alias ref) (alias u32)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="load"
            |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Local(self:Custom2#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
                |-QNameNode=Custom2
                  |-NameIdentifierNode="Custom2"
              |-NameIdentifierNode="property$0_offset"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$0" ((alias Custom2) (alias i32)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="property$0" annotations=Inline
          |-ParameterNode annotations=Local(self:Custom2#0)
            |-NameIdentifierNode="self" type=(alias Custom2 (struct r:<null> g:<null>))
            |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
              |-QNameNode=Custom2
                |-NameIdentifierNode="Custom2"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)) type=(alias void (native void))
            |-MemberNode type=(intersection (fun "store" ((alias ref) (alias i32)) (alias void)) (fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="store"
            |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Local(self:Custom2#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
                |-QNameNode=Custom2
                  |-NameIdentifierNode="Custom2"
              |-NameIdentifierNode="property$0_offset"
    |-OverloadedFunctionNode type=(intersection (fun "property_g" ((alias Custom2)) (alias i32)) (fun "property_g" ((alias Custom2) (alias i32)) (alias void))) annotations=Injected
      |-NameIdentifierNode="property_g" type=(intersection (fun "property_g" ((alias Custom2)) (alias i32)) (fun "property_g" ((alias Custom2) (alias i32)) (alias void)))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_g" ((alias Custom2)) (alias i32)) annotations=IsOverloaded
          |-NameIdentifierNode="property_g"
          |-ParameterNode annotations=Local(self:Custom2#0)
            |-NameIdentifierNode="self" type=(alias Custom2 (struct r:<null> g:<null>))
            |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
              |-QNameNode=Custom2
                |-NameIdentifierNode="Custom2"
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "property$1" ((alias Custom2)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode type=(intersection (fun "property$1" ((alias Custom2)) (alias i32)) (fun "property$1" ((alias Custom2) (alias i32)) (alias void)))
              |-QNameNode=property$1
                |-NameIdentifierNode="property$1"
            |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Local(self:Custom2#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_g" ((alias Custom2) (alias i32)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="property_g"
          |-ParameterNode annotations=Local(self:Custom2#0)
            |-NameIdentifierNode="self" type=(alias Custom2 (struct r:<null> g:<null>))
            |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
              |-QNameNode=Custom2
                |-NameIdentifierNode="Custom2"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "property$1" ((alias Custom2) (alias i32)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "property$1" ((alias Custom2)) (alias i32)) (fun "property$1" ((alias Custom2) (alias i32)) (alias void)))
              |-QNameNode=property$1
                |-NameIdentifierNode="property$1"
            |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Local(self:Custom2#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
    |-OverloadedFunctionNode type=(intersection (fun "property$1" ((alias Custom2)) (alias i32)) (fun "property$1" ((alias Custom2) (alias i32)) (alias void))) annotations=Injected
      |-NameIdentifierNode="property$1" type=(intersection (fun "property$1" ((alias Custom2)) (alias i32)) (fun "property$1" ((alias Custom2) (alias i32)) (alias void)))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$1" ((alias Custom2)) (alias i32)) annotations=IsOverloaded
          |-NameIdentifierNode="property$1" annotations=Inline
          |-ParameterNode annotations=Local(self:Custom2#0)
            |-NameIdentifierNode="self" type=(alias Custom2 (struct r:<null> g:<null>))
            |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
              |-QNameNode=Custom2
                |-NameIdentifierNode="Custom2"
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "load" ((alias ref) (alias u32)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="load"
            |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Local(self:Custom2#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
                |-QNameNode=Custom2
                  |-NameIdentifierNode="Custom2"
              |-NameIdentifierNode="property$1_offset"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$1" ((alias Custom2) (alias i32)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="property$1" annotations=Inline
          |-ParameterNode annotations=Local(self:Custom2#0)
            |-NameIdentifierNode="self" type=(alias Custom2 (struct r:<null> g:<null>))
            |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
              |-QNameNode=Custom2
                |-NameIdentifierNode="Custom2"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)) type=(alias void (native void))
            |-MemberNode type=(intersection (fun "store" ((alias ref) (alias i32)) (alias void)) (fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="store"
            |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Local(self:Custom2#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
                |-QNameNode=Custom2
                  |-NameIdentifierNode="Custom2"
              |-NameIdentifierNode="property$1_offset"
    |-OverloadedFunctionNode type=(fun "is" ((union (alias Custom2) (alias ref))) (alias boolean)) annotations=Injected
      |-NameIdentifierNode="is" type=(fun "is" ((union (alias Custom2) (alias ref))) (alias boolean))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "is" ((union (alias Custom2) (alias ref))) (alias boolean)) annotations=IsOverloaded
          |-NameIdentifierNode="is"
          |-ParameterNode annotations=Local(a:Custom2 | ref#0)
            |-NameIdentifierNode="a" type=(union (alias Custom2 (struct r:<null> g:<null>)) (alias ref (ref ?)))
            |-UnionTypeNode type=(type (union (alias Custom2 (struct r:<null> g:<null>)) (alias ref (ref ?))))
              |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
                |-QNameNode=Custom2
                  |-NameIdentifierNode="Custom2"
              |-ReferenceNode type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-HexLiteral=18446744069414584000
                |-WasmAtomNode
                  |-QNameNode=$a
                    |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-ReferenceNode type=(fun "Custom2$discriminant" () (alias u64))
                  |-QNameNode=Custom2$discriminant
                    |-NameIdentifierNode="Custom2$discriminant"
    |-OverloadedFunctionNode type=(fun "store" ((alias ref) (alias Custom2) (alias u32)) (alias void)) annotations=Injected
      |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Custom2) (alias u32)) (alias void))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "store" ((alias ref) (alias Custom2) (alias u32)) (alias void)) annotations=IsOverloaded
          |-NameIdentifierNode="store"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:Custom2#1)
            |-NameIdentifierNode="rhs" type=(alias Custom2 (struct r:<null> g:<null>))
            |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
              |-QNameNode=Custom2
                |-NameIdentifierNode="Custom2"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
    |-OverloadedFunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Custom2)) annotations=Injected
      |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Custom2))
      |-FunDirectiveNode
        |-FunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Custom2)) annotations=IsOverloaded
          |-NameIdentifierNode="load"
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
            |-QNameNode=Custom2
              |-NameIdentifierNode="Custom2"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
    |-OverloadedFunctionNode type=(fun "as" ((alias Custom2)) (alias ref)) annotations=Injected
      |-NameIdentifierNode="as" type=(fun "as" ((alias Custom2)) (alias ref))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode type=(fun "as" ((alias Custom2)) (alias ref)) annotations=IsOverloaded
          |-NameIdentifierNode="as" annotations=Explicit
          |-ParameterNode annotations=Local(lhs:Custom2#0)
            |-NameIdentifierNode="lhs" type=(alias Custom2 (struct r:<null> g:<null>))
            |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
              |-QNameNode=Custom2
                |-NameIdentifierNode="Custom2"
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
  |-ValDirectiveNode
    |-ValDeclarationNode annotations=Global(test::fixtures::execution::setStructValues::x:<no-type>)
      |-NameIdentifierNode="x" type=(alias Custom2 (struct r:<null> g:<null>))
      |-FunctionCallNode=(fun "apply" ((alias i32) (alias i32)) (alias Custom2)) type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode
        |-MemberNode type=(fun "apply" ((alias i32) (alias i32)) (alias Custom2))
          |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
            |-QNameNode=Custom2
              |-NameIdentifierNode="Custom2"
          |-NameIdentifierNode="apply"
        |-IntegerLiteral=0 type=(alias i32 (native i32)) annotations=IsValueNode
        |-IntegerLiteral=0 type=(alias i32 (native i32)) annotations=IsValueNode
  |-ValDirectiveNode
    |-ValDeclarationNode annotations=Global(test::fixtures::execution::setStructValues::y:<no-type>)
      |-NameIdentifierNode="y" type=(alias Custom2 (struct r:<null> g:<null>))
      |-FunctionCallNode=(fun "apply" ((alias i32) (alias i32)) (alias Custom2)) type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode
        |-MemberNode type=(fun "apply" ((alias i32) (alias i32)) (alias Custom2))
          |-ReferenceNode type=(type (alias Custom2 (struct r:<null> g:<null>)))
            |-QNameNode=Custom2
              |-NameIdentifierNode="Custom2"
          |-NameIdentifierNode="apply"
        |-IntegerLiteral=0 type=(alias i32 (native i32)) annotations=IsValueNode
        |-IntegerLiteral=0 type=(alias i32 (native i32)) annotations=IsValueNode
  |-OverloadedFunctionNode type=(fun "testLoad" () (alias void)) annotations=Injected
    |-NameIdentifierNode="testLoad" type=(fun "testLoad" () (alias void))
    |-FunDirectiveNode
      |-FunctionNode type=(fun "testLoad" () (alias void)) annotations=IsOverloaded
        |-NameIdentifierNode="testLoad"
        |-ReferenceNode type=(type (alias void (native void)))
          |-QNameNode=void
            |-NameIdentifierNode="void"
        |-BlockNode type=(native void)
          |-FunctionCallNode=(fun "START" ((alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "START" ((alias u32)) (alias void)) (fun "START" ((alias bytes)) (alias void)))
              |-QNameNode=START
                |-NameIdentifierNode="START"
            |-StringLiteral="testLoad" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "mustEqual" ((alias f64) (alias f64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias f32) (alias f32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u64) (alias u64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u32) (alias u32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) (fun "mustEqual" ((alias bytes) (alias bytes) (alias bytes)) (alias void)))
              |-QNameNode=support::test::mustEqual
                |-NameIdentifierNode="support"
                |-NameIdentifierNode="test"
                |-NameIdentifierNode="mustEqual"
            |-FunctionCallNode=(fun "load" ((alias ref)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode
              |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
                |-ReferenceNode type=(type (alias i32 (native i32)))
                  |-QNameNode=i32
                    |-NameIdentifierNode="i32"
                |-NameIdentifierNode="load"
              |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Global(test::fixtures::execution::setStructValues::x:<no-type>)
                |-QNameNode=x
                  |-NameIdentifierNode="x"
            |-IntegerLiteral=0 type=(alias i32 (native i32)) annotations=IsValueNode
            |-StringLiteral="i32.load(x) == 0" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "mustEqual" ((alias f64) (alias f64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias f32) (alias f32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u64) (alias u64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u32) (alias u32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) (fun "mustEqual" ((alias bytes) (alias bytes) (alias bytes)) (alias void)))
              |-QNameNode=support::test::mustEqual
                |-NameIdentifierNode="support"
                |-NameIdentifierNode="test"
                |-NameIdentifierNode="mustEqual"
            |-FunctionCallNode=(fun "load" ((alias ref)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode
              |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
                |-ReferenceNode type=(type (alias i32 (native i32)))
                  |-QNameNode=i32
                    |-NameIdentifierNode="i32"
                |-NameIdentifierNode="load"
              |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Global(test::fixtures::execution::setStructValues::y:<no-type>)
                |-QNameNode=y
                  |-NameIdentifierNode="y"
            |-IntegerLiteral=0 type=(alias i32 (native i32)) annotations=IsValueNode
            |-StringLiteral="i32.load(y) == 0" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "END" () (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(fun "END" () (alias void))
              |-QNameNode=END
                |-NameIdentifierNode="END"
  |-OverloadedFunctionNode type=(fun "testStore" () (alias void)) annotations=Injected
    |-NameIdentifierNode="testStore" type=(fun "testStore" () (alias void))
    |-FunDirectiveNode
      |-FunctionNode type=(fun "testStore" () (alias void)) annotations=IsOverloaded
        |-NameIdentifierNode="testStore"
        |-ReferenceNode type=(type (alias void (native void)))
          |-QNameNode=void
            |-NameIdentifierNode="void"
        |-BlockNode type=(native void)
          |-FunctionCallNode=(fun "START" ((alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "START" ((alias u32)) (alias void)) (fun "START" ((alias bytes)) (alias void)))
              |-QNameNode=START
                |-NameIdentifierNode="START"
            |-StringLiteral="testStore" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "store" ((alias ref) (alias i32)) (alias void)) type=(alias void (native void))
            |-MemberNode type=(intersection (fun "store" ((alias ref) (alias i32)) (alias void)) (fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="store"
            |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Global(test::fixtures::execution::setStructValues::x:<no-type>)
              |-QNameNode=x
                |-NameIdentifierNode="x"
            |-IntegerLiteral=3 type=(alias i32 (native i32)) annotations=IsValueNode
          |-FunctionCallNode=(fun "store" ((alias ref) (alias i32)) (alias void)) type=(alias void (native void))
            |-MemberNode type=(intersection (fun "store" ((alias ref) (alias i32)) (alias void)) (fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="store"
            |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Global(test::fixtures::execution::setStructValues::y:<no-type>)
              |-QNameNode=y
                |-NameIdentifierNode="y"
            |-IntegerLiteral=2882400001 type=(alias i32 (native i32)) annotations=IsValueNode
          |-FunctionCallNode=(fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)) type=(alias void (native void))
            |-MemberNode type=(intersection (fun "store" ((alias ref) (alias i32)) (alias void)) (fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="store"
            |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Global(test::fixtures::execution::setStructValues::y:<no-type>)
              |-QNameNode=y
                |-NameIdentifierNode="y"
            |-IntegerLiteral=5 type=(alias i32 (native i32)) annotations=IsValueNode
            |-AsExpressionNode=(fun "as" ((alias i32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
              |-IntegerLiteral=5 type=(alias i32 (native i32)) annotations=IsValueNode
              |-ReferenceNode type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
          |-FunctionCallNode=(fun "END" () (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(fun "END" () (alias void))
              |-QNameNode=END
                |-NameIdentifierNode="END"
  |-OverloadedFunctionNode type=(fun "testNumbers" () (alias void)) annotations=Injected
    |-NameIdentifierNode="testNumbers" type=(fun "testNumbers" () (alias void))
    |-FunDirectiveNode
      |-FunctionNode type=(fun "testNumbers" () (alias void)) annotations=IsOverloaded
        |-NameIdentifierNode="testNumbers"
        |-ReferenceNode type=(type (alias void (native void)))
          |-QNameNode=void
            |-NameIdentifierNode="void"
        |-BlockNode type=(native void)
          |-FunctionCallNode=(fun "START" ((alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "START" ((alias u32)) (alias void)) (fun "START" ((alias bytes)) (alias void)))
              |-QNameNode=START
                |-NameIdentifierNode="START"
            |-StringLiteral="testNumbers" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "mustEqual" ((alias f64) (alias f64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias f32) (alias f32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u64) (alias u64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u32) (alias u32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) (fun "mustEqual" ((alias bytes) (alias bytes) (alias bytes)) (alias void)))
              |-QNameNode=support::test::mustEqual
                |-NameIdentifierNode="support"
                |-NameIdentifierNode="test"
                |-NameIdentifierNode="mustEqual"
            |-HexLiteral=4294967295 type=(alias i32 (native i32)) annotations=IsValueNode
            |-UnaryExpressionNode=(fun "-" ((alias i32)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode
              |-IntegerLiteral=1 type=(alias i32 (native i32))
            |-StringLiteral="0xFFFFFFFF == -1" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "mustEqual" ((alias u32) (alias u32) (alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "mustEqual" ((alias f64) (alias f64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias f32) (alias f32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u64) (alias u64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u32) (alias u32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) (fun "mustEqual" ((alias bytes) (alias bytes) (alias bytes)) (alias void)))
              |-QNameNode=support::test::mustEqual
                |-NameIdentifierNode="support"
                |-NameIdentifierNode="test"
                |-NameIdentifierNode="mustEqual"
            |-AsExpressionNode=(fun "as" ((alias i32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
              |-HexLiteral=4294967295 type=(alias i32 (native i32)) annotations=IsValueNode
              |-ReferenceNode type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
            |-AsExpressionNode=(fun "as" ((alias i32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
              |-UnaryExpressionNode=(fun "-" ((alias i32)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode
                |-IntegerLiteral=1 type=(alias i32 (native i32))
              |-ReferenceNode type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
            |-StringLiteral="0xFFFFFFFF as u32 == -1 as u32" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "testLoad" () (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(fun "testLoad" () (alias void))
              |-QNameNode=testLoad
                |-NameIdentifierNode="testLoad"
          |-FunctionCallNode=(fun "testStore" () (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(fun "testStore" () (alias void))
              |-QNameNode=testStore
                |-NameIdentifierNode="testStore"
          |-FunctionCallNode=(fun "printf" ((alias bytes) (alias i32)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "printf" ((alias u32) (alias i32)) (alias void)) (fun "printf" ((alias u32) (alias u32)) (alias void)) (fun "printf" ((alias u32) (alias f32)) (alias void)) (fun "printf" ((alias u32) (alias f64)) (alias void)) (fun "printf" ((alias u32) (alias u16)) (alias void)) (fun "printf" ((alias u32) (alias i16)) (alias void)) (fun "printf" ((alias u32) (alias u8)) (alias void)) (fun "printf" ((alias bytes) (alias i32)) (alias void)) (fun "printf" ((alias bytes) (alias u32)) (alias void)) (fun "printf" ((alias bytes) (alias f32)) (alias void)) (fun "printf" ((alias bytes) (alias f64)) (alias void)) (fun "printf" ((alias bytes) (alias i16)) (alias void)) (fun "printf" ((alias bytes) (alias u16)) (alias void)) (fun "printf" ((alias bytes) (alias u8)) (alias void)) (fun "printf" ((alias bytes)) (alias void)))
              |-QNameNode=support::env::printf
                |-NameIdentifierNode="support"
                |-NameIdentifierNode="env"
                |-NameIdentifierNode="printf"
            |-StringLiteral="i32.load(x) %X" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-FunctionCallNode=(fun "load" ((alias ref)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode
              |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
                |-ReferenceNode type=(type (alias i32 (native i32)))
                  |-QNameNode=i32
                    |-NameIdentifierNode="i32"
                |-NameIdentifierNode="load"
              |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Global(test::fixtures::execution::setStructValues::x:<no-type>)
                |-QNameNode=x
                  |-NameIdentifierNode="x"
          |-FunctionCallNode=(fun "printf" ((alias bytes) (alias i32)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "printf" ((alias u32) (alias i32)) (alias void)) (fun "printf" ((alias u32) (alias u32)) (alias void)) (fun "printf" ((alias u32) (alias f32)) (alias void)) (fun "printf" ((alias u32) (alias f64)) (alias void)) (fun "printf" ((alias u32) (alias u16)) (alias void)) (fun "printf" ((alias u32) (alias i16)) (alias void)) (fun "printf" ((alias u32) (alias u8)) (alias void)) (fun "printf" ((alias bytes) (alias i32)) (alias void)) (fun "printf" ((alias bytes) (alias u32)) (alias void)) (fun "printf" ((alias bytes) (alias f32)) (alias void)) (fun "printf" ((alias bytes) (alias f64)) (alias void)) (fun "printf" ((alias bytes) (alias i16)) (alias void)) (fun "printf" ((alias bytes) (alias u16)) (alias void)) (fun "printf" ((alias bytes) (alias u8)) (alias void)) (fun "printf" ((alias bytes)) (alias void)))
              |-QNameNode=support::env::printf
                |-NameIdentifierNode="support"
                |-NameIdentifierNode="env"
                |-NameIdentifierNode="printf"
            |-StringLiteral="i32.load(y) %X" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-FunctionCallNode=(fun "load" ((alias ref)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode
              |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
                |-ReferenceNode type=(type (alias i32 (native i32)))
                  |-QNameNode=i32
                    |-NameIdentifierNode="i32"
                |-NameIdentifierNode="load"
              |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Global(test::fixtures::execution::setStructValues::y:<no-type>)
                |-QNameNode=y
                  |-NameIdentifierNode="y"
          |-FunctionCallNode=(fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "mustEqual" ((alias f64) (alias f64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias f32) (alias f32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u64) (alias u64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u32) (alias u32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) (fun "mustEqual" ((alias bytes) (alias bytes) (alias bytes)) (alias void)))
              |-QNameNode=support::test::mustEqual
                |-NameIdentifierNode="support"
                |-NameIdentifierNode="test"
                |-NameIdentifierNode="mustEqual"
            |-AsExpressionNode=(fun "as" ((alias i32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode
              |-HexLiteral=2882400001 type=(alias i32 (native i32)) annotations=IsValueNode
              |-ReferenceNode type=(type (alias i64 (native i64)))
                |-QNameNode=i64
                  |-NameIdentifierNode="i64"
            |-AsExpressionNode=(fun "as" ((alias i32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode
              |-HexLiteral=2882400001 type=(alias i32 (native i32)) annotations=IsValueNode
              |-ReferenceNode type=(type (alias i64 (native i64)))
                |-QNameNode=i64
                  |-NameIdentifierNode="i64"
            |-StringLiteral="0xABCDEF01 as i64 == 0xABCDEF01 as i64" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "mustEqual" ((alias f64) (alias f64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias f32) (alias f32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u64) (alias u64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u32) (alias u32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) (fun "mustEqual" ((alias bytes) (alias bytes) (alias bytes)) (alias void)))
              |-QNameNode=support::test::mustEqual
                |-NameIdentifierNode="support"
                |-NameIdentifierNode="test"
                |-NameIdentifierNode="mustEqual"
            |-FunctionCallNode=(fun "load" ((alias ref)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode
              |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
                |-ReferenceNode type=(type (alias i32 (native i32)))
                  |-QNameNode=i32
                    |-NameIdentifierNode="i32"
                |-NameIdentifierNode="load"
              |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Global(test::fixtures::execution::setStructValues::x:<no-type>)
                |-QNameNode=x
                  |-NameIdentifierNode="x"
            |-IntegerLiteral=3 type=(alias i32 (native i32)) annotations=IsValueNode
            |-StringLiteral="i32.load(x) == 3" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "mustEqual" ((alias f64) (alias f64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias f32) (alias f32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u64) (alias u64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u32) (alias u32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) (fun "mustEqual" ((alias bytes) (alias bytes) (alias bytes)) (alias void)))
              |-QNameNode=support::test::mustEqual
                |-NameIdentifierNode="support"
                |-NameIdentifierNode="test"
                |-NameIdentifierNode="mustEqual"
            |-FunctionCallNode=(fun "load" ((alias ref)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode
              |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
                |-ReferenceNode type=(type (alias i32 (native i32)))
                  |-QNameNode=i32
                    |-NameIdentifierNode="i32"
                |-NameIdentifierNode="load"
              |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Global(test::fixtures::execution::setStructValues::y:<no-type>)
                |-QNameNode=y
                  |-NameIdentifierNode="y"
            |-HexLiteral=2882400001 type=(alias i32 (native i32)) annotations=IsValueNode
            |-StringLiteral="i32.load(y) as u32 == 0xABCDEF01" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "mustEqual" ((alias f64) (alias f64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias f32) (alias f32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u64) (alias u64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u32) (alias u32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) (fun "mustEqual" ((alias bytes) (alias bytes) (alias bytes)) (alias void)))
              |-QNameNode=support::test::mustEqual
                |-NameIdentifierNode="support"
                |-NameIdentifierNode="test"
                |-NameIdentifierNode="mustEqual"
            |-FunctionCallNode=(fun "load" ((alias ref)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode
              |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
                |-ReferenceNode type=(type (alias i32 (native i32)))
                  |-QNameNode=i32
                    |-NameIdentifierNode="i32"
                |-NameIdentifierNode="load"
              |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Global(test::fixtures::execution::setStructValues::y:<no-type>)
                |-QNameNode=y
                  |-NameIdentifierNode="y"
            |-HexLiteral=2882400001 type=(alias i32 (native i32)) annotations=IsValueNode
            |-StringLiteral="i32.load(y) == 0xABCDEF01 as i32" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-BlockNode type=(native void)
            |-ValDeclarationNode type=(native void) annotations=Local(test::fixtures::execution::setStructValues::VAR:i64#0)
              |-NameIdentifierNode="VAR" type=(alias i64 (native i64))
              |-AsExpressionNode=(fun "as" ((alias i32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode
                |-FunctionCallNode=(fun "load" ((alias ref)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode
                  |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
                    |-ReferenceNode type=(type (alias i32 (native i32)))
                      |-QNameNode=i32
                        |-NameIdentifierNode="i32"
                    |-NameIdentifierNode="load"
                  |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Global(test::fixtures::execution::setStructValues::y:<no-type>)
                    |-QNameNode=y
                      |-NameIdentifierNode="y"
                |-ReferenceNode type=(type (alias i64 (native i64)))
                  |-QNameNode=i64
                    |-NameIdentifierNode="i64"
            |-ValDeclarationNode type=(native void) annotations=Local(test::fixtures::execution::setStructValues::VAR2:i64#1)
              |-NameIdentifierNode="VAR2" type=(alias i64 (native i64))
              |-AsExpressionNode=(fun "as" ((alias i32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode
                |-HexLiteral=2882400001 type=(alias i32 (native i32)) annotations=IsValueNode
                |-ReferenceNode type=(type (alias i64 (native i64)))
                  |-QNameNode=i64
                    |-NameIdentifierNode="i64"
            |-FunctionCallNode=(fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "mustEqual" ((alias f64) (alias f64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias f32) (alias f32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u64) (alias u64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u32) (alias u32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) (fun "mustEqual" ((alias bytes) (alias bytes) (alias bytes)) (alias void)))
                |-QNameNode=support::test::mustEqual
                  |-NameIdentifierNode="support"
                  |-NameIdentifierNode="test"
                  |-NameIdentifierNode="mustEqual"
              |-ReferenceNode type=(alias i64 (native i64)) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::VAR:i64#0)
                |-QNameNode=VAR
                  |-NameIdentifierNode="VAR"
              |-ReferenceNode type=(alias i64 (native i64)) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::VAR2:i64#1)
                |-QNameNode=VAR2
                  |-NameIdentifierNode="VAR2"
              |-StringLiteral="VAR == VAR2" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "mustEqual" ((alias f64) (alias f64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias f32) (alias f32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u64) (alias u64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u32) (alias u32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) (fun "mustEqual" ((alias bytes) (alias bytes) (alias bytes)) (alias void)))
              |-QNameNode=support::test::mustEqual
                |-NameIdentifierNode="support"
                |-NameIdentifierNode="test"
                |-NameIdentifierNode="mustEqual"
            |-AsExpressionNode=(fun "as" ((alias i32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode
              |-FunctionCallNode=(fun "load" ((alias ref)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode
                |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
                  |-ReferenceNode type=(type (alias i32 (native i32)))
                    |-QNameNode=i32
                      |-NameIdentifierNode="i32"
                  |-NameIdentifierNode="load"
                |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Global(test::fixtures::execution::setStructValues::y:<no-type>)
                  |-QNameNode=y
                    |-NameIdentifierNode="y"
              |-ReferenceNode type=(type (alias i64 (native i64)))
                |-QNameNode=i64
                  |-NameIdentifierNode="i64"
            |-AsExpressionNode=(fun "as" ((alias i32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode
              |-HexLiteral=2882400001 type=(alias i32 (native i32)) annotations=IsValueNode
              |-ReferenceNode type=(type (alias i64 (native i64)))
                |-QNameNode=i64
                  |-NameIdentifierNode="i64"
            |-StringLiteral="i32.load(y) as i64 == 0xABCDEF01 as i64" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "mustEqual" ((alias u64) (alias u64) (alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "mustEqual" ((alias f64) (alias f64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias f32) (alias f32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u64) (alias u64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u32) (alias u32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) (fun "mustEqual" ((alias bytes) (alias bytes) (alias bytes)) (alias void)))
              |-QNameNode=support::test::mustEqual
                |-NameIdentifierNode="support"
                |-NameIdentifierNode="test"
                |-NameIdentifierNode="mustEqual"
            |-AsExpressionNode=(fun "as" ((alias i32)) (alias u64)) type=(alias u64 (native u64)) annotations=IsValueNode
              |-FunctionCallNode=(fun "load" ((alias ref)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode
                |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
                  |-ReferenceNode type=(type (alias i32 (native i32)))
                    |-QNameNode=i32
                      |-NameIdentifierNode="i32"
                  |-NameIdentifierNode="load"
                |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Global(test::fixtures::execution::setStructValues::y:<no-type>)
                  |-QNameNode=y
                    |-NameIdentifierNode="y"
              |-ReferenceNode type=(type (alias u64 (native u64)))
                |-QNameNode=u64
                  |-NameIdentifierNode="u64"
            |-AsExpressionNode=(fun "as" ((alias i32)) (alias u64)) type=(alias u64 (native u64)) annotations=IsValueNode
              |-HexLiteral=2882400001 type=(alias i32 (native i32)) annotations=IsValueNode
              |-ReferenceNode type=(type (alias u64 (native u64)))
                |-QNameNode=u64
                  |-NameIdentifierNode="u64"
            |-StringLiteral="i32.load(y) as u64 == 0xABCDEF01 as u64" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "mustEqual" ((alias f64) (alias f64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias f32) (alias f32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u64) (alias u64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u32) (alias u32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) (fun "mustEqual" ((alias bytes) (alias bytes) (alias bytes)) (alias void)))
              |-QNameNode=support::test::mustEqual
                |-NameIdentifierNode="support"
                |-NameIdentifierNode="test"
                |-NameIdentifierNode="mustEqual"
            |-AsExpressionNode=(fun "as" ((alias u8)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode
              |-FunctionCallNode=(fun "load" ((alias ref)) (alias u8)) type=(alias u8 (native u8)) annotations=IsValueNode
                |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias u8)) (fun "load" ((alias ref) (alias u32)) (alias u8)))
                  |-ReferenceNode type=(type (alias u8 (native u8)))
                    |-QNameNode=u8
                      |-NameIdentifierNode="u8"
                  |-NameIdentifierNode="load"
                |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Global(test::fixtures::execution::setStructValues::y:<no-type>)
                  |-QNameNode=y
                    |-NameIdentifierNode="y"
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
            |-HexLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
            |-StringLiteral="u8.load(y) as i32 == 0x01" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "mustEqual" ((alias f64) (alias f64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias f32) (alias f32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u64) (alias u64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u32) (alias u32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) (fun "mustEqual" ((alias bytes) (alias bytes) (alias bytes)) (alias void)))
              |-QNameNode=support::test::mustEqual
                |-NameIdentifierNode="support"
                |-NameIdentifierNode="test"
                |-NameIdentifierNode="mustEqual"
            |-AsExpressionNode=(fun "as" ((alias u8)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode
              |-FunctionCallNode=(fun "load" ((alias ref) (alias u32)) (alias u8)) type=(alias u8 (native u8)) annotations=IsValueNode
                |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias u8)) (fun "load" ((alias ref) (alias u32)) (alias u8)))
                  |-ReferenceNode type=(type (alias u8 (native u8)))
                    |-QNameNode=u8
                      |-NameIdentifierNode="u8"
                  |-NameIdentifierNode="load"
                |-ReferenceNode type=(alias Custom2 (struct r:<null> g:<null>)) annotations=IsValueNode,Global(test::fixtures::execution::setStructValues::y:<no-type>)
                  |-QNameNode=y
                    |-NameIdentifierNode="y"
                |-AsExpressionNode=(fun "as" ((alias i32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
                  |-IntegerLiteral=5 type=(alias i32 (native i32)) annotations=IsValueNode
                  |-ReferenceNode type=(type (alias u32 (native u32)))
                    |-QNameNode=u32
                      |-NameIdentifierNode="u32"
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
            |-IntegerLiteral=5 type=(alias i32 (native i32)) annotations=IsValueNode
            |-StringLiteral="u8.load(y, 5 as u32) as i32 == 5" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "END" () (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(fun "END" () (alias void))
              |-QNameNode=END
                |-NameIdentifierNode="END"
  |-OverloadedFunctionNode type=(fun "main" () (alias void)) annotations=Injected
    |-NameIdentifierNode="main" type=(fun "main" () (alias void))
    |-FunDirectiveNode
      |-DecoratorNode
        |-NameIdentifierNode="export"
      |-FunctionNode type=(fun "main" () (alias void)) annotations=IsOverloaded
        |-NameIdentifierNode="main" annotations=Export
        |-ReferenceNode type=(type (alias void (native void)))
          |-QNameNode=void
            |-NameIdentifierNode="void"
        |-BlockNode type=(native void)
          |-FunctionCallNode=(fun "START" ((alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "START" ((alias u32)) (alias void)) (fun "START" ((alias bytes)) (alias void)))
              |-QNameNode=START
                |-NameIdentifierNode="START"
            |-StringLiteral="set values in struct" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-VarDeclarationNode type=(native void) annotations=Local(test::fixtures::execution::setStructValues::a_17:CatBag#0)
            |-NameIdentifierNode="a" type=(alias CatBag (struct f:<null> g:<null>))
            |-FunctionCallNode=(fun "apply" ((alias Color) (union (alias Red) (alias None))) (alias CatBag)) type=(alias CatBag (struct f:<null> g:<null>)) annotations=IsValueNode
              |-MemberNode type=(fun "apply" ((alias Color) (union (alias Red) (alias None))) (alias CatBag))
                |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
                  |-QNameNode=CatBag
                    |-NameIdentifierNode="CatBag"
                |-NameIdentifierNode="apply"
              |-ReferenceNode type=(alias Red (struct)) annotations=IsValueNode,ImplicitCall(fun "apply" () (alias Red))
                |-QNameNode=Red
                  |-NameIdentifierNode="Red"
              |-ReferenceNode type=(alias None (struct)) annotations=IsValueNode,ImplicitCall(fun "apply" () (alias None))
                |-QNameNode=None
                  |-NameIdentifierNode="None"
          |-FunctionCallNode=(fun "printMemory" ((alias u32) (alias u32)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "printMemory" ((alias u32) (alias i32)) (alias void)) (fun "printMemory" ((alias u32) (alias u32)) (alias void)))
              |-QNameNode=printMemory
                |-NameIdentifierNode="printMemory"
            |-FunctionCallNode=(fun "addressFromRef" ((alias ref)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
              |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                |-QNameNode=addressFromRef
                  |-NameIdentifierNode="addressFromRef"
              |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::a_17:CatBag#0)
                |-QNameNode=a
                  |-NameIdentifierNode="a"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
                |-QNameNode=CatBag
                  |-NameIdentifierNode="CatBag"
              |-NameIdentifierNode="allocationSize"
          |-BlockNode type=(native void)
            |-FunctionCallNode=(fun "START" ((alias bytes)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "START" ((alias u32)) (alias void)) (fun "START" ((alias bytes)) (alias void)))
                |-QNameNode=START
                  |-NameIdentifierNode="START"
              |-StringLiteral="getters of the constructor" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-FunctionCallNode=(fun "verify" ((alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias bytes)) (alias void)))
                |-QNameNode=verify
                  |-NameIdentifierNode="verify"
              |-IsExpressionNode=(fun "is" ((union (alias CatBag) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::a_17:CatBag#0)
                  |-QNameNode=a
                    |-NameIdentifierNode="a"
                |-ReferenceNode type=(type (alias CatBag (struct f:<null> g:<null>)))
                  |-QNameNode=CatBag
                    |-NameIdentifierNode="CatBag"
              |-StringLiteral="a is CatBag" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-FunctionCallNode=(fun "verify" ((alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias bytes)) (alias void)))
                |-QNameNode=verify
                  |-NameIdentifierNode="verify"
              |-IsExpressionNode=(fun "is" ((union (alias Color) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-MemberNode type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))) annotations=IsValueNode,ImplicitCall(fun "property_f" ((alias CatBag)) (alias Color))
                  |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=Local(test::fixtures::execution::setStructValues::a_17:CatBag#0)
                    |-QNameNode=a
                      |-NameIdentifierNode="a"
                  |-NameIdentifierNode="f"
                |-ReferenceNode type=(type (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))))
                  |-QNameNode=Color
                    |-NameIdentifierNode="Color"
              |-StringLiteral="a.f is Color" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-FunctionCallNode=(fun "verify" ((alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias bytes)) (alias void)))
                |-QNameNode=verify
                  |-NameIdentifierNode="verify"
              |-IsExpressionNode=(fun "is" ((union (alias Color) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-MemberNode type=(union (alias Red (struct)) (alias None (struct))) annotations=IsValueNode,ImplicitCall(fun "property_g" ((alias CatBag)) (union (alias Red) (alias None)))
                  |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=Local(test::fixtures::execution::setStructValues::a_17:CatBag#0)
                    |-QNameNode=a
                      |-NameIdentifierNode="a"
                  |-NameIdentifierNode="g"
                |-ReferenceNode type=(type (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))))
                  |-QNameNode=Color
                    |-NameIdentifierNode="Color"
              |-StringLiteral="a.g is Color" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-FunctionCallNode=(fun "verify" ((alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias bytes)) (alias void)))
                |-QNameNode=verify
                  |-NameIdentifierNode="verify"
              |-IsExpressionNode=(fun "is" ((union (alias Red) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-MemberNode type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))) annotations=IsValueNode,ImplicitCall(fun "property_f" ((alias CatBag)) (alias Color))
                  |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=Local(test::fixtures::execution::setStructValues::a_17:CatBag#0)
                    |-QNameNode=a
                      |-NameIdentifierNode="a"
                  |-NameIdentifierNode="f"
                |-ReferenceNode type=(type (alias Red (struct)))
                  |-QNameNode=Red
                    |-NameIdentifierNode="Red"
              |-StringLiteral="a.f is Red" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-FunctionCallNode=(fun "verify" ((alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias bytes)) (alias void)))
                |-QNameNode=verify
                  |-NameIdentifierNode="verify"
              |-IsExpressionNode=(fun "is" ((union (alias None) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-MemberNode type=(union (alias Red (struct)) (alias None (struct))) annotations=IsValueNode,ImplicitCall(fun "property_g" ((alias CatBag)) (union (alias Red) (alias None)))
                  |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=Local(test::fixtures::execution::setStructValues::a_17:CatBag#0)
                    |-QNameNode=a
                      |-NameIdentifierNode="a"
                  |-NameIdentifierNode="g"
                |-ReferenceNode type=(type (alias None (struct)))
                  |-QNameNode=None
                    |-NameIdentifierNode="None"
              |-StringLiteral="a.g is Red" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-FunctionCallNode=(fun "END" () (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(fun "END" () (alias void))
                |-QNameNode=END
                  |-NameIdentifierNode="END"
          |-BlockNode type=(native void)
            |-FunctionCallNode=(fun "START" ((alias bytes)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "START" ((alias u32)) (alias void)) (fun "START" ((alias bytes)) (alias void)))
                |-QNameNode=START
                  |-NameIdentifierNode="START"
              |-StringLiteral="setters" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-ValDeclarationNode type=(native void) annotations=Local(test::fixtures::execution::setStructValues::y_1:Custom#1)
              |-NameIdentifierNode="y" type=(alias Custom (struct hex:<null>))
              |-FunctionCallNode=(fun "apply" ((alias i32)) (alias Custom)) type=(alias Custom (struct hex:<null>)) annotations=IsValueNode
                |-MemberNode type=(fun "apply" ((alias i32)) (alias Custom))
                  |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
                    |-QNameNode=Custom
                      |-NameIdentifierNode="Custom"
                  |-NameIdentifierNode="apply"
                |-HexLiteral=2864434397 type=(alias i32 (native i32)) annotations=IsValueNode
            |-FunctionCallNode=(fun "verify" ((alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias bytes)) (alias void)))
                |-QNameNode=verify
                  |-NameIdentifierNode="verify"
              |-BinaryExpressionNode=(fun "==" ((alias i32) (alias i32)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-MemberNode type=(alias i32 (native i32)) annotations=IsValueNode,ImplicitCall(fun "property_hex" ((alias Custom)) (alias i32))
                  |-ReferenceNode type=(alias Custom (struct hex:<null>)) annotations=Local(test::fixtures::execution::setStructValues::y_1:Custom#1)
                    |-QNameNode=y
                      |-NameIdentifierNode="y"
                  |-NameIdentifierNode="hex"
                |-NameIdentifierNode="=="
                |-HexLiteral=2864434397 type=(alias i32 (native i32)) annotations=IsValueNode
              |-StringLiteral="y.hex == 0xAABBCCDD" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-AssignmentNode type=(alias void (native void)) annotations=ImplicitCall(fun "property_f" ((alias CatBag) (alias Color)) (alias void))
              |-MemberNode type=(intersection (fun "property_f" ((alias CatBag)) (alias Color)) (fun "property_f" ((alias CatBag) (alias Color)) (alias void))) annotations=IsAssignationLHS
                |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=Local(test::fixtures::execution::setStructValues::a_17:CatBag#0)
                  |-QNameNode=a
                    |-NameIdentifierNode="a"
                |-NameIdentifierNode="f"
              |-ReferenceNode type=(alias Custom (struct hex:<null>)) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::y_1:Custom#1)
                |-QNameNode=y
                  |-NameIdentifierNode="y"
            |-FunctionCallNode=(fun "verify" ((alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias bytes)) (alias void)))
                |-QNameNode=verify
                  |-NameIdentifierNode="verify"
              |-BinaryExpressionNode=(fun "==" ((alias Custom) (alias Custom)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-ReferenceNode type=(alias Custom (struct hex:<null>)) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::y_1:Custom#1)
                  |-QNameNode=y
                    |-NameIdentifierNode="y"
                |-NameIdentifierNode="=="
                |-ReferenceNode type=(alias Custom (struct hex:<null>)) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::y_1:Custom#1)
                  |-QNameNode=y
                    |-NameIdentifierNode="y"
              |-StringLiteral="y == y" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-VarDeclarationNode type=(native void) annotations=Local(test::fixtures::execution::setStructValues::tmp:Color#2)
              |-NameIdentifierNode="tmp" type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>))))
              |-MemberNode type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))) annotations=IsValueNode,ImplicitCall(fun "property_f" ((alias CatBag)) (alias Color))
                |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=Local(test::fixtures::execution::setStructValues::a_17:CatBag#0)
                  |-QNameNode=a
                    |-NameIdentifierNode="a"
                |-NameIdentifierNode="f"
            |-FunctionCallNode=(fun "verify" ((alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias bytes)) (alias void)))
                |-QNameNode=verify
                  |-NameIdentifierNode="verify"
              |-BinaryExpressionNode=(fun "==" ((alias ref) (alias ref)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-ReferenceNode type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::tmp:Color#2)
                  |-QNameNode=tmp
                    |-NameIdentifierNode="tmp"
                |-NameIdentifierNode="=="
                |-ReferenceNode type=(alias Custom (struct hex:<null>)) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::y_1:Custom#1)
                  |-QNameNode=y
                    |-NameIdentifierNode="y"
              |-StringLiteral="tmp == y" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-FunctionCallNode=(fun "verify" ((alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias bytes)) (alias void)))
                |-QNameNode=verify
                  |-NameIdentifierNode="verify"
              |-BinaryExpressionNode=(fun "==" ((alias ref) (alias ref)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-MemberNode type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))) annotations=IsValueNode,ImplicitCall(fun "property_f" ((alias CatBag)) (alias Color))
                  |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=Local(test::fixtures::execution::setStructValues::a_17:CatBag#0)
                    |-QNameNode=a
                      |-NameIdentifierNode="a"
                  |-NameIdentifierNode="f"
                |-NameIdentifierNode="=="
                |-ReferenceNode type=(alias Custom (struct hex:<null>)) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::y_1:Custom#1)
                  |-QNameNode=y
                    |-NameIdentifierNode="y"
              |-StringLiteral="a.f == y" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-FunctionCallNode=(fun "verify" ((alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias bytes)) (alias void)))
                |-QNameNode=verify
                  |-NameIdentifierNode="verify"
              |-BinaryExpressionNode=(fun "==" ((alias ref) (alias ref)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-MemberNode type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))) annotations=IsValueNode,ImplicitCall(fun "property_f" ((alias CatBag)) (alias Color))
                  |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=Local(test::fixtures::execution::setStructValues::a_17:CatBag#0)
                    |-QNameNode=a
                      |-NameIdentifierNode="a"
                  |-NameIdentifierNode="f"
                |-NameIdentifierNode="=="
                |-ReferenceNode type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::tmp:Color#2)
                  |-QNameNode=tmp
                    |-NameIdentifierNode="tmp"
              |-StringLiteral="a.f == tmp" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-AssignmentNode type=(alias void (native void)) annotations=ImplicitCall(fun "property_g" ((alias CatBag) (union (alias Red) (alias None))) (alias void))
              |-MemberNode type=(intersection (fun "property_g" ((alias CatBag)) (union (alias Red) (alias None))) (fun "property_g" ((alias CatBag) (union (alias Red) (alias None))) (alias void))) annotations=IsAssignationLHS
                |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=Local(test::fixtures::execution::setStructValues::a_17:CatBag#0)
                  |-QNameNode=a
                    |-NameIdentifierNode="a"
                |-NameIdentifierNode="g"
              |-ReferenceNode type=(alias Red (struct)) annotations=IsValueNode,ImplicitCall(fun "apply" () (alias Red))
                |-QNameNode=Red
                  |-NameIdentifierNode="Red"
            |-FunctionCallNode=(fun "verify" ((alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias bytes)) (alias void)))
                |-QNameNode=verify
                  |-NameIdentifierNode="verify"
              |-IsExpressionNode=(fun "is" ((union (alias Red) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-MemberNode type=(union (alias Red (struct)) (alias None (struct))) annotations=IsValueNode,ImplicitCall(fun "property_g" ((alias CatBag)) (union (alias Red) (alias None)))
                  |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=Local(test::fixtures::execution::setStructValues::a_17:CatBag#0)
                    |-QNameNode=a
                      |-NameIdentifierNode="a"
                  |-NameIdentifierNode="g"
                |-ReferenceNode type=(type (alias Red (struct)))
                  |-QNameNode=Red
                    |-NameIdentifierNode="Red"
              |-StringLiteral="a.g is Red" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-FunctionCallNode=(fun "END" () (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(fun "END" () (alias void))
                |-QNameNode=END
                  |-NameIdentifierNode="END"
          |-BlockNode type=(native void)
            |-FunctionCallNode=(fun "START" ((alias bytes)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "START" ((alias u32)) (alias void)) (fun "START" ((alias bytes)) (alias void)))
                |-QNameNode=START
                  |-NameIdentifierNode="START"
              |-StringLiteral="validate setters" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-FunctionCallNode=(fun "verify" ((alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias bytes)) (alias void)))
                |-QNameNode=verify
                  |-NameIdentifierNode="verify"
              |-IsExpressionNode=(fun "is" ((union (alias Custom) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-MemberNode type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))) annotations=IsValueNode,ImplicitCall(fun "property_f" ((alias CatBag)) (alias Color))
                  |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=Local(test::fixtures::execution::setStructValues::a_17:CatBag#0)
                    |-QNameNode=a
                      |-NameIdentifierNode="a"
                  |-NameIdentifierNode="f"
                |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
                  |-QNameNode=Custom
                    |-NameIdentifierNode="Custom"
              |-StringLiteral="a.f is Custom" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-FunctionCallNode=(fun "verify" ((alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias bytes)) (alias void)))
                |-QNameNode=verify
                  |-NameIdentifierNode="verify"
              |-IsExpressionNode=(fun "is" ((union (alias Red) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-MemberNode type=(union (alias Red (struct)) (alias None (struct))) annotations=IsValueNode,ImplicitCall(fun "property_g" ((alias CatBag)) (union (alias Red) (alias None)))
                  |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=Local(test::fixtures::execution::setStructValues::a_17:CatBag#0)
                    |-QNameNode=a
                      |-NameIdentifierNode="a"
                  |-NameIdentifierNode="g"
                |-ReferenceNode type=(type (alias Red (struct)))
                  |-QNameNode=Red
                    |-NameIdentifierNode="Red"
              |-StringLiteral="a.g is Red" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-FunctionCallNode=(fun "verify" ((alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias bytes)) (alias void)))
                |-QNameNode=verify
                  |-NameIdentifierNode="verify"
              |-IsExpressionNode=(fun "is" ((union (alias Color) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-MemberNode type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))) annotations=IsValueNode,ImplicitCall(fun "property_f" ((alias CatBag)) (alias Color))
                  |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=Local(test::fixtures::execution::setStructValues::a_17:CatBag#0)
                    |-QNameNode=a
                      |-NameIdentifierNode="a"
                  |-NameIdentifierNode="f"
                |-ReferenceNode type=(type (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))))
                  |-QNameNode=Color
                    |-NameIdentifierNode="Color"
              |-StringLiteral="a.f is Color" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-FunctionCallNode=(fun "verify" ((alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias bytes)) (alias void)))
                |-QNameNode=verify
                  |-NameIdentifierNode="verify"
              |-IsExpressionNode=(fun "is" ((union (alias Color) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-MemberNode type=(union (alias Red (struct)) (alias None (struct))) annotations=IsValueNode,ImplicitCall(fun "property_g" ((alias CatBag)) (union (alias Red) (alias None)))
                  |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=Local(test::fixtures::execution::setStructValues::a_17:CatBag#0)
                    |-QNameNode=a
                      |-NameIdentifierNode="a"
                  |-NameIdentifierNode="g"
                |-ReferenceNode type=(type (alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))))
                  |-QNameNode=Color
                    |-NameIdentifierNode="Color"
              |-StringLiteral="a.g is Color" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-PatternMatcherNode type=(native void) annotations=Local(var$4:Color#4)
              |-MemberNode type=(alias Color (union (alias None (struct)) (alias Red (struct)) (alias Custom (struct hex:<null>)))) annotations=IsValueNode,ImplicitCall(fun "property_f" ((alias CatBag)) (alias Color))
                |-ReferenceNode type=(alias CatBag (struct f:<null> g:<null>)) annotations=Local(test::fixtures::execution::setStructValues::a_17:CatBag#0)
                  |-QNameNode=a
                    |-NameIdentifierNode="a"
                |-NameIdentifierNode="f"
              |-MatchCaseIsNode type=(native void) annotations=Local(var$4:Color#4)
                |-NameIdentifierNode="x" type=(alias Custom (struct hex:<null>))
                |-BlockNode type=(native void)
                  |-ValDeclarationNode type=(native void) annotations=Local(test::fixtures::execution::setStructValues::hex_1:i32#3)
                    |-NameIdentifierNode="hex" type=(alias i32 (native i32))
                    |-MemberNode type=(alias i32 (native i32)) annotations=IsValueNode,ImplicitCall(fun "property_hex" ((alias Custom)) (alias i32))
                      |-ReferenceNode type=(alias Custom (struct hex:<null>)) annotations=Local(var$4:Color#4)
                        |-QNameNode=x
                          |-NameIdentifierNode="x"
                      |-NameIdentifierNode="hex"
                  |-FunctionCallNode=(fun "verify" ((alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
                    |-ReferenceNode type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias bytes)) (alias void)))
                      |-QNameNode=verify
                        |-NameIdentifierNode="verify"
                    |-BinaryExpressionNode=(fun "==" ((alias i32) (alias i32)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                      |-MemberNode type=(alias i32 (native i32)) annotations=IsValueNode,ImplicitCall(fun "property_hex" ((alias Custom)) (alias i32))
                        |-ReferenceNode type=(alias Custom (struct hex:<null>)) annotations=Local(var$4:Color#4)
                          |-QNameNode=x
                            |-NameIdentifierNode="x"
                        |-NameIdentifierNode="hex"
                      |-NameIdentifierNode="=="
                      |-HexLiteral=2864434397 type=(alias i32 (native i32)) annotations=IsValueNode
                    |-StringLiteral="x.hex == 0xAABBCCDD" type=(alias bytes (native bytes)) annotations=IsValueNode
                  |-FunctionCallNode=(fun "verify" ((alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
                    |-ReferenceNode type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias bytes)) (alias void)))
                      |-QNameNode=verify
                        |-NameIdentifierNode="verify"
                    |-BinaryExpressionNode=(fun "==" ((alias i32) (alias i32)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                      |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(test::fixtures::execution::setStructValues::hex_1:i32#3)
                        |-QNameNode=hex
                          |-NameIdentifierNode="hex"
                      |-NameIdentifierNode="=="
                      |-HexLiteral=2864434397 type=(alias i32 (native i32)) annotations=IsValueNode
                    |-StringLiteral="hex == 0xAABBCCDD" type=(alias bytes (native bytes)) annotations=IsValueNode
                |-ReferenceNode type=(type (alias Custom (struct hex:<null>)))
                  |-QNameNode=Custom
                    |-NameIdentifierNode="Custom"
              |-MatchDefaultNode type=(native void) annotations=Local(var$4:Color#4)
                |-FunctionCallNode=(fun "verify" ((alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
                  |-ReferenceNode type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias bytes)) (alias void)))
                    |-QNameNode=verify
                      |-NameIdentifierNode="verify"
                  |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
                  |-StringLiteral="a.f is not Custom in pattern matching" type=(alias bytes (native bytes)) annotations=IsValueNode
            |-FunctionCallNode=(fun "END" () (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(fun "END" () (alias void))
                |-QNameNode=END
                  |-NameIdentifierNode="END"
          |-FunctionCallNode=(fun "testNumbers" () (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(fun "testNumbers" () (alias void))
              |-QNameNode=testNumbers
                |-NameIdentifierNode="testNumbers"
          |-FunctionCallNode=(fun "END" () (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(fun "END" () (alias void))
              |-QNameNode=END
                |-NameIdentifierNode="END"