
|-DocumentNode
  |-ImportDirectiveNode
    |-QNameNode=system::core
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
  |-ImportDirectiveNode
    |-QNameNode=support::test
      |-NameIdentifierNode="support"
      |-NameIdentifierNode="test"
  |-TypeDirectiveNode
    |-NameIdentifierNode="Color" type=(type (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>)))))
    |-UnionTypeNode type=(type (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>))))
      |-ReferenceNode type=(type (alias Red (struct)))
        |-QNameNode=Red
          |-NameIdentifierNode="Red"
      |-ReferenceNode type=(type (alias Green (struct)))
        |-QNameNode=Green
          |-NameIdentifierNode="Green"
      |-ReferenceNode type=(type (alias Blue (struct)))
        |-QNameNode=Blue
          |-NameIdentifierNode="Blue"
      |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
        |-QNameNode=Custom
          |-NameIdentifierNode="Custom"
  |-ImplDirective
    |-ReferenceNode
      |-QNameNode=Color
        |-NameIdentifierNode="Color"
    |-OverloadedFunctionNode type=(fun "is" ((union (alias Color) (alias ref))) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "is" ((union (alias Color) (alias ref))) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Color | ref#0)
            |-NameIdentifierNode="a" type=(union (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>)))) (alias ref (ref ?)))
            |-UnionTypeNode type=(type (union (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>)))) (alias ref (ref ?))))
              |-ReferenceNode type=(type (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>)))))
                |-QNameNode=Color
                  |-NameIdentifierNode="Color"
              |-ReferenceNode type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-NameIdentifierNode="is"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-BlockNode type=(alias boolean (native boolean)) annotations=IsValueNode
            |-BinaryExpressionNode=(fun "||" ((alias boolean) (alias boolean)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
              |-NameIdentifierNode="||"
              |-BinaryExpressionNode=(fun "||" ((alias boolean) (alias boolean)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-NameIdentifierNode="||"
                |-BinaryExpressionNode=(fun "||" ((alias boolean) (alias boolean)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                  |-NameIdentifierNode="||"
                  |-IsExpressionNode=(fun "is" ((union (alias Red) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                    |-ReferenceNode type=(union (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>)))) (alias ref (ref ?))) annotations=IsValueNode,Local(a:Color | ref#0)
                      |-QNameNode=a
                        |-NameIdentifierNode="a"
                    |-ReferenceNode type=(type (alias Red (struct)))
                      |-QNameNode=Red
                        |-NameIdentifierNode="Red"
                  |-IsExpressionNode=(fun "is" ((union (alias Green) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                    |-ReferenceNode type=(union (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>)))) (alias ref (ref ?))) annotations=IsValueNode,Local(a:Color | ref#0)
                      |-QNameNode=a
                        |-NameIdentifierNode="a"
                    |-ReferenceNode type=(type (alias Green (struct)))
                      |-QNameNode=Green
                        |-NameIdentifierNode="Green"
                |-IsExpressionNode=(fun "is" ((union (alias Blue) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                  |-ReferenceNode type=(union (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>)))) (alias ref (ref ?))) annotations=IsValueNode,Local(a:Color | ref#0)
                    |-QNameNode=a
                      |-NameIdentifierNode="a"
                  |-ReferenceNode type=(type (alias Blue (struct)))
                    |-QNameNode=Blue
                      |-NameIdentifierNode="Blue"
              |-IsExpressionNode=(fun "is" ((union (alias Custom) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-ReferenceNode type=(union (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>)))) (alias ref (ref ?))) annotations=IsValueNode,Local(a:Color | ref#0)
                  |-QNameNode=a
                    |-NameIdentifierNode="a"
                |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
                  |-QNameNode=Custom
                    |-NameIdentifierNode="Custom"
      |-NameIdentifierNode="is" type=(fun "is" ((union (alias Color) (alias ref))) (alias boolean))
    |-OverloadedFunctionNode type=(fun "as" ((alias Color)) (alias ref)) annotations=Injected
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode type=(fun "as" ((alias Color)) (alias ref)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Color#0)
            |-NameIdentifierNode="a" type=(alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>))))
            |-ReferenceNode type=(type (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>)))))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-NameIdentifierNode="as" annotations=Explicit
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
      |-NameIdentifierNode="as" type=(fun "as" ((alias Color)) (alias ref))
    |-OverloadedFunctionNode type=(fun "==" ((alias ref) (alias ref)) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "==" ((alias ref) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:ref#1)
            |-NameIdentifierNode="rhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-NameIdentifierNode="=="
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-BinaryExpressionNode=(fun "==" ((alias ref) (alias ref)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
            |-NameIdentifierNode="=="
            |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode,Local(lhs:ref#0)
              |-QNameNode=lhs
                |-NameIdentifierNode="lhs"
            |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode,Local(rhs:ref#1)
              |-QNameNode=rhs
                |-NameIdentifierNode="rhs"
      |-NameIdentifierNode="==" type=(fun "==" ((alias ref) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "!=" ((alias ref) (alias ref)) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "!=" ((alias ref) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:ref#1)
            |-NameIdentifierNode="rhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-NameIdentifierNode="!="
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-BinaryExpressionNode=(fun "!=" ((alias ref) (alias ref)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
            |-NameIdentifierNode="!="
            |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode,Local(lhs:ref#0)
              |-QNameNode=lhs
                |-NameIdentifierNode="lhs"
            |-ReferenceNode type=(alias ref (ref ?)) annotations=IsValueNode,Local(rhs:ref#1)
              |-QNameNode=rhs
                |-NameIdentifierNode="rhs"
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias ref) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "store" ((alias ref) (alias Color) (alias u32)) (alias void)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "store" ((alias ref) (alias Color) (alias u32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:Color#1)
            |-NameIdentifierNode="rhs" type=(alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>))))
            |-ReferenceNode type=(type (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>)))))
              |-QNameNode=Color
                |-NameIdentifierNode="Color"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="store"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
      |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Color) (alias u32)) (alias void))
    |-OverloadedFunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Color)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Color)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="load"
          |-ReferenceNode type=(type (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>)))))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
      |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Color))
  |-ImplDirective
    |-ReferenceNode
      |-QNameNode=Red
        |-NameIdentifierNode="Red"
    |-OverloadedFunctionNode type=(intersection (fun "as" ((alias Red)) (alias Color)) (fun "as" ((alias Red)) (alias ref))) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "as" ((alias Red)) (alias Color)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:Red#0)
            |-NameIdentifierNode="lhs" type=(alias Red (struct))
            |-ReferenceNode type=(type (alias Red (struct)))
              |-QNameNode=Red
                |-NameIdentifierNode="Red"
          |-NameIdentifierNode="as"
          |-ReferenceNode type=(type (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>)))))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode type=(fun "as" ((alias Red)) (alias ref)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:Red#0)
            |-NameIdentifierNode="lhs" type=(alias Red (struct))
            |-ReferenceNode type=(type (alias Red (struct)))
              |-QNameNode=Red
                |-NameIdentifierNode="Red"
          |-NameIdentifierNode="as" annotations=Explicit
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((alias Red)) (alias Color)) (fun "as" ((alias Red)) (alias ref)))
    |-OverloadedFunctionNode type=(fun "Red$discriminant" () (alias i64)) annotations=Injected
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "Red$discriminant" () (alias i64)) annotations=IsOverloaded
          |-NameIdentifierNode="Red$discriminant" annotations=Inline
          |-ReferenceNode type=(type (alias i64 (native i64)))
            |-QNameNode=i64
              |-NameIdentifierNode="i64"
          |-BlockNode type=(alias i64 (native i64)) annotations=IsValueNode
            |-ValDeclarationNode type=(native void) annotations=Local(test/fixtures/execution/patternMatchingDeconstruct.lys::discriminant:u32#0)
              |-NameIdentifierNode="discriminant" type=(alias u32 (native u32))
              |-ReferenceNode type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
              |-MemberNode type=(native u32) annotations=IsValueNode
                |-ReferenceNode type=(type (alias Red (struct)))
                  |-QNameNode=Red
                    |-NameIdentifierNode="Red"
                |-NameIdentifierNode="discriminant"
            |-BinaryExpressionNode=(fun "<<" ((alias i64) (alias i32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode,IsReturnExpression
              |-NameIdentifierNode="<<"
              |-AsExpressionNode=(fun "as" ((alias u32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode
                |-ReferenceNode type=(alias u32 (native u32)) annotations=IsValueNode,Local(test/fixtures/execution/patternMatchingDeconstruct.lys::discriminant:u32#0)
                  |-QNameNode=discriminant
                    |-NameIdentifierNode="discriminant"
                |-ReferenceNode type=(type (alias i64 (native i64)))
                  |-QNameNode=i64
                    |-NameIdentifierNode="i64"
              |-IntegerLiteral=32 type=(alias i32 (native i32)) annotations=IsValueNode
      |-NameIdentifierNode="Red$discriminant" type=(fun "Red$discriminant" () (alias i64))
    |-OverloadedFunctionNode type=(fun "apply" () (alias Red)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "apply" () (alias Red)) annotations=IsOverloaded
          |-NameIdentifierNode="apply"
          |-ReferenceNode type=(type (alias Red (struct)))
            |-QNameNode=Red
              |-NameIdentifierNode="Red"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-ReferenceNode type=(fun "Red$discriminant" () (alias i64))
                |-QNameNode=Red$discriminant
                  |-NameIdentifierNode="Red$discriminant"
      |-NameIdentifierNode="apply" type=(fun "apply" () (alias Red))
    |-OverloadedFunctionNode type=(fun "is" ((union (alias Red) (alias ref))) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "is" ((union (alias Red) (alias ref))) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Red | ref#0)
            |-NameIdentifierNode="a" type=(union (alias Red (struct)) (alias ref (ref ?)))
            |-UnionTypeNode type=(type (union (alias Red (struct)) (alias ref (ref ?))))
              |-ReferenceNode type=(type (alias Red (struct)))
                |-QNameNode=Red
                  |-NameIdentifierNode="Red"
              |-ReferenceNode type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-NameIdentifierNode="is"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-HexLiteral=18446744069414584000
                |-WasmAtomNode
                  |-QNameNode=$a
                    |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-ReferenceNode type=(fun "Red$discriminant" () (alias i64))
                  |-QNameNode=Red$discriminant
                    |-NameIdentifierNode="Red$discriminant"
      |-NameIdentifierNode="is" type=(fun "is" ((union (alias Red) (alias ref))) (alias boolean))
    |-OverloadedFunctionNode type=(fun "==" ((alias Red) (alias ref)) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "==" ((alias Red) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Red#0)
            |-NameIdentifierNode="a" type=(alias Red (struct))
            |-ReferenceNode type=(type (alias Red (struct)))
              |-QNameNode=Red
                |-NameIdentifierNode="Red"
          |-ParameterNode annotations=Local(b:ref#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-NameIdentifierNode="=="
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
      |-NameIdentifierNode="==" type=(fun "==" ((alias Red) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "!=" ((alias Red) (alias ref)) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "!=" ((alias Red) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Red#0)
            |-NameIdentifierNode="a" type=(alias Red (struct))
            |-ReferenceNode type=(type (alias Red (struct)))
              |-QNameNode=Red
                |-NameIdentifierNode="Red"
          |-ParameterNode annotations=Local(b:ref#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-NameIdentifierNode="!="
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias Red) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "store" ((alias ref) (alias Red) (alias u32)) (alias void)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "store" ((alias ref) (alias Red) (alias u32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:Red#1)
            |-NameIdentifierNode="rhs" type=(alias Red (struct))
            |-ReferenceNode type=(type (alias Red (struct)))
              |-QNameNode=Red
                |-NameIdentifierNode="Red"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="store"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
      |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Red) (alias u32)) (alias void))
    |-OverloadedFunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Red)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Red)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="load"
          |-ReferenceNode type=(type (alias Red (struct)))
            |-QNameNode=Red
              |-NameIdentifierNode="Red"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
      |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Red))
  |-ImplDirective
    |-ReferenceNode
      |-QNameNode=Green
        |-NameIdentifierNode="Green"
    |-OverloadedFunctionNode type=(intersection (fun "as" ((alias Green)) (alias Color)) (fun "as" ((alias Green)) (alias ref))) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "as" ((alias Green)) (alias Color)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:Green#0)
            |-NameIdentifierNode="lhs" type=(alias Green (struct))
            |-ReferenceNode type=(type (alias Green (struct)))
              |-QNameNode=Green
                |-NameIdentifierNode="Green"
          |-NameIdentifierNode="as"
          |-ReferenceNode type=(type (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>)))))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode type=(fun "as" ((alias Green)) (alias ref)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:Green#0)
            |-NameIdentifierNode="lhs" type=(alias Green (struct))
            |-ReferenceNode type=(type (alias Green (struct)))
              |-QNameNode=Green
                |-NameIdentifierNode="Green"
          |-NameIdentifierNode="as" annotations=Explicit
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((alias Green)) (alias Color)) (fun "as" ((alias Green)) (alias ref)))
    |-OverloadedFunctionNode type=(fun "Green$discriminant" () (alias i64)) annotations=Injected
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "Green$discriminant" () (alias i64)) annotations=IsOverloaded
          |-NameIdentifierNode="Green$discriminant" annotations=Inline
          |-ReferenceNode type=(type (alias i64 (native i64)))
            |-QNameNode=i64
              |-NameIdentifierNode="i64"
          |-BlockNode type=(alias i64 (native i64)) annotations=IsValueNode
            |-ValDeclarationNode type=(native void) annotations=Local(test/fixtures/execution/patternMatchingDeconstruct.lys::discriminant_3:u32#0)
              |-NameIdentifierNode="discriminant" type=(alias u32 (native u32))
              |-ReferenceNode type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
              |-MemberNode type=(native u32) annotations=IsValueNode
                |-ReferenceNode type=(type (alias Green (struct)))
                  |-QNameNode=Green
                    |-NameIdentifierNode="Green"
                |-NameIdentifierNode="discriminant"
            |-BinaryExpressionNode=(fun "<<" ((alias i64) (alias i32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode,IsReturnExpression
              |-NameIdentifierNode="<<"
              |-AsExpressionNode=(fun "as" ((alias u32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode
                |-ReferenceNode type=(alias u32 (native u32)) annotations=IsValueNode,Local(test/fixtures/execution/patternMatchingDeconstruct.lys::discriminant_3:u32#0)
                  |-QNameNode=discriminant
                    |-NameIdentifierNode="discriminant"
                |-ReferenceNode type=(type (alias i64 (native i64)))
                  |-QNameNode=i64
                    |-NameIdentifierNode="i64"
              |-IntegerLiteral=32 type=(alias i32 (native i32)) annotations=IsValueNode
      |-NameIdentifierNode="Green$discriminant" type=(fun "Green$discriminant" () (alias i64))
    |-OverloadedFunctionNode type=(fun "apply" () (alias Green)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "apply" () (alias Green)) annotations=IsOverloaded
          |-NameIdentifierNode="apply"
          |-ReferenceNode type=(type (alias Green (struct)))
            |-QNameNode=Green
              |-NameIdentifierNode="Green"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-ReferenceNode type=(fun "Green$discriminant" () (alias i64))
                |-QNameNode=Green$discriminant
                  |-NameIdentifierNode="Green$discriminant"
      |-NameIdentifierNode="apply" type=(fun "apply" () (alias Green))
    |-OverloadedFunctionNode type=(fun "is" ((union (alias Green) (alias ref))) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "is" ((union (alias Green) (alias ref))) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Green | ref#0)
            |-NameIdentifierNode="a" type=(union (alias Green (struct)) (alias ref (ref ?)))
            |-UnionTypeNode type=(type (union (alias Green (struct)) (alias ref (ref ?))))
              |-ReferenceNode type=(type (alias Green (struct)))
                |-QNameNode=Green
                  |-NameIdentifierNode="Green"
              |-ReferenceNode type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-NameIdentifierNode="is"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-HexLiteral=18446744069414584000
                |-WasmAtomNode
                  |-QNameNode=$a
                    |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-ReferenceNode type=(fun "Green$discriminant" () (alias i64))
                  |-QNameNode=Green$discriminant
                    |-NameIdentifierNode="Green$discriminant"
      |-NameIdentifierNode="is" type=(fun "is" ((union (alias Green) (alias ref))) (alias boolean))
    |-OverloadedFunctionNode type=(fun "==" ((alias Green) (alias ref)) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "==" ((alias Green) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Green#0)
            |-NameIdentifierNode="a" type=(alias Green (struct))
            |-ReferenceNode type=(type (alias Green (struct)))
              |-QNameNode=Green
                |-NameIdentifierNode="Green"
          |-ParameterNode annotations=Local(b:ref#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-NameIdentifierNode="=="
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
      |-NameIdentifierNode="==" type=(fun "==" ((alias Green) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "!=" ((alias Green) (alias ref)) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "!=" ((alias Green) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Green#0)
            |-NameIdentifierNode="a" type=(alias Green (struct))
            |-ReferenceNode type=(type (alias Green (struct)))
              |-QNameNode=Green
                |-NameIdentifierNode="Green"
          |-ParameterNode annotations=Local(b:ref#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-NameIdentifierNode="!="
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias Green) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "store" ((alias ref) (alias Green) (alias u32)) (alias void)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "store" ((alias ref) (alias Green) (alias u32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:Green#1)
            |-NameIdentifierNode="rhs" type=(alias Green (struct))
            |-ReferenceNode type=(type (alias Green (struct)))
              |-QNameNode=Green
                |-NameIdentifierNode="Green"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="store"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
      |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Green) (alias u32)) (alias void))
    |-OverloadedFunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Green)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Green)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="load"
          |-ReferenceNode type=(type (alias Green (struct)))
            |-QNameNode=Green
              |-NameIdentifierNode="Green"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
      |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Green))
  |-ImplDirective
    |-ReferenceNode
      |-QNameNode=Blue
        |-NameIdentifierNode="Blue"
    |-OverloadedFunctionNode type=(intersection (fun "as" ((alias Blue)) (alias Color)) (fun "as" ((alias Blue)) (alias ref))) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "as" ((alias Blue)) (alias Color)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:Blue#0)
            |-NameIdentifierNode="lhs" type=(alias Blue (struct))
            |-ReferenceNode type=(type (alias Blue (struct)))
              |-QNameNode=Blue
                |-NameIdentifierNode="Blue"
          |-NameIdentifierNode="as"
          |-ReferenceNode type=(type (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>)))))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode type=(fun "as" ((alias Blue)) (alias ref)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:Blue#0)
            |-NameIdentifierNode="lhs" type=(alias Blue (struct))
            |-ReferenceNode type=(type (alias Blue (struct)))
              |-QNameNode=Blue
                |-NameIdentifierNode="Blue"
          |-NameIdentifierNode="as" annotations=Explicit
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((alias Blue)) (alias Color)) (fun "as" ((alias Blue)) (alias ref)))
    |-OverloadedFunctionNode type=(fun "Blue$discriminant" () (alias i64)) annotations=Injected
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "Blue$discriminant" () (alias i64)) annotations=IsOverloaded
          |-NameIdentifierNode="Blue$discriminant" annotations=Inline
          |-ReferenceNode type=(type (alias i64 (native i64)))
            |-QNameNode=i64
              |-NameIdentifierNode="i64"
          |-BlockNode type=(alias i64 (native i64)) annotations=IsValueNode
            |-ValDeclarationNode type=(native void) annotations=Local(test/fixtures/execution/patternMatchingDeconstruct.lys::discriminant_6:u32#0)
              |-NameIdentifierNode="discriminant" type=(alias u32 (native u32))
              |-ReferenceNode type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
              |-MemberNode type=(native u32) annotations=IsValueNode
                |-ReferenceNode type=(type (alias Blue (struct)))
                  |-QNameNode=Blue
                    |-NameIdentifierNode="Blue"
                |-NameIdentifierNode="discriminant"
            |-BinaryExpressionNode=(fun "<<" ((alias i64) (alias i32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode,IsReturnExpression
              |-NameIdentifierNode="<<"
              |-AsExpressionNode=(fun "as" ((alias u32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode
                |-ReferenceNode type=(alias u32 (native u32)) annotations=IsValueNode,Local(test/fixtures/execution/patternMatchingDeconstruct.lys::discriminant_6:u32#0)
                  |-QNameNode=discriminant
                    |-NameIdentifierNode="discriminant"
                |-ReferenceNode type=(type (alias i64 (native i64)))
                  |-QNameNode=i64
                    |-NameIdentifierNode="i64"
              |-IntegerLiteral=32 type=(alias i32 (native i32)) annotations=IsValueNode
      |-NameIdentifierNode="Blue$discriminant" type=(fun "Blue$discriminant" () (alias i64))
    |-OverloadedFunctionNode type=(fun "apply" () (alias Blue)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "apply" () (alias Blue)) annotations=IsOverloaded
          |-NameIdentifierNode="apply"
          |-ReferenceNode type=(type (alias Blue (struct)))
            |-QNameNode=Blue
              |-NameIdentifierNode="Blue"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-ReferenceNode type=(fun "Blue$discriminant" () (alias i64))
                |-QNameNode=Blue$discriminant
                  |-NameIdentifierNode="Blue$discriminant"
      |-NameIdentifierNode="apply" type=(fun "apply" () (alias Blue))
    |-OverloadedFunctionNode type=(fun "is" ((union (alias Blue) (alias ref))) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "is" ((union (alias Blue) (alias ref))) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Blue | ref#0)
            |-NameIdentifierNode="a" type=(union (alias Blue (struct)) (alias ref (ref ?)))
            |-UnionTypeNode type=(type (union (alias Blue (struct)) (alias ref (ref ?))))
              |-ReferenceNode type=(type (alias Blue (struct)))
                |-QNameNode=Blue
                  |-NameIdentifierNode="Blue"
              |-ReferenceNode type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-NameIdentifierNode="is"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-HexLiteral=18446744069414584000
                |-WasmAtomNode
                  |-QNameNode=$a
                    |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-ReferenceNode type=(fun "Blue$discriminant" () (alias i64))
                  |-QNameNode=Blue$discriminant
                    |-NameIdentifierNode="Blue$discriminant"
      |-NameIdentifierNode="is" type=(fun "is" ((union (alias Blue) (alias ref))) (alias boolean))
    |-OverloadedFunctionNode type=(fun "==" ((alias Blue) (alias ref)) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "==" ((alias Blue) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Blue#0)
            |-NameIdentifierNode="a" type=(alias Blue (struct))
            |-ReferenceNode type=(type (alias Blue (struct)))
              |-QNameNode=Blue
                |-NameIdentifierNode="Blue"
          |-ParameterNode annotations=Local(b:ref#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-NameIdentifierNode="=="
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
      |-NameIdentifierNode="==" type=(fun "==" ((alias Blue) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "!=" ((alias Blue) (alias ref)) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "!=" ((alias Blue) (alias ref)) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Blue#0)
            |-NameIdentifierNode="a" type=(alias Blue (struct))
            |-ReferenceNode type=(type (alias Blue (struct)))
              |-QNameNode=Blue
                |-NameIdentifierNode="Blue"
          |-ParameterNode annotations=Local(b:ref#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-NameIdentifierNode="!="
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias Blue) (alias ref)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "store" ((alias ref) (alias Blue) (alias u32)) (alias void)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "store" ((alias ref) (alias Blue) (alias u32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:Blue#1)
            |-NameIdentifierNode="rhs" type=(alias Blue (struct))
            |-ReferenceNode type=(type (alias Blue (struct)))
              |-QNameNode=Blue
                |-NameIdentifierNode="Blue"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="store"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
      |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Blue) (alias u32)) (alias void))
    |-OverloadedFunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Blue)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Blue)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="load"
          |-ReferenceNode type=(type (alias Blue (struct)))
            |-QNameNode=Blue
              |-NameIdentifierNode="Blue"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
      |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Blue))
  |-ImplDirective
    |-ReferenceNode
      |-QNameNode=Custom
        |-NameIdentifierNode="Custom"
    |-OverloadedFunctionNode type=(intersection (fun "as" ((alias Custom)) (alias Color)) (fun "as" ((alias Custom)) (alias ref))) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "as" ((alias Custom)) (alias Color)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:Custom#0)
            |-NameIdentifierNode="lhs" type=(alias Custom (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-NameIdentifierNode="as"
          |-ReferenceNode type=(type (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>)))))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode type=(fun "as" ((alias Custom)) (alias ref)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:Custom#0)
            |-NameIdentifierNode="lhs" type=(alias Custom (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-NameIdentifierNode="as" annotations=Explicit
          |-ReferenceNode type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((alias Custom)) (alias Color)) (fun "as" ((alias Custom)) (alias ref)))
    |-OverloadedFunctionNode type=(fun "Custom$discriminant" () (alias u64)) annotations=Injected
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "Custom$discriminant" () (alias u64)) annotations=IsOverloaded
          |-NameIdentifierNode="Custom$discriminant" annotations=Inline
          |-ReferenceNode type=(type (alias u64 (native u64)))
            |-QNameNode=u64
              |-NameIdentifierNode="u64"
          |-BlockNode type=(alias u64 (native u64)) annotations=IsValueNode
            |-ValDeclarationNode type=(native void) annotations=Local(test/fixtures/execution/patternMatchingDeconstruct.lys::discriminant_9:u32#0)
              |-NameIdentifierNode="discriminant" type=(alias u32 (native u32))
              |-ReferenceNode type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
              |-MemberNode type=(native u32) annotations=IsValueNode
                |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
                  |-QNameNode=Custom
                    |-NameIdentifierNode="Custom"
                |-NameIdentifierNode="discriminant"
            |-BinaryExpressionNode=(fun "<<" ((alias u64) (alias i32)) (alias u64)) type=(alias u64 (native u64)) annotations=IsValueNode,IsReturnExpression
              |-NameIdentifierNode="<<"
              |-AsExpressionNode=(fun "as" ((alias u32)) (alias u64)) type=(alias u64 (native u64)) annotations=IsValueNode
                |-ReferenceNode type=(alias u32 (native u32)) annotations=IsValueNode,Local(test/fixtures/execution/patternMatchingDeconstruct.lys::discriminant_9:u32#0)
                  |-QNameNode=discriminant
                    |-NameIdentifierNode="discriminant"
                |-ReferenceNode type=(type (alias u64 (native u64)))
                  |-QNameNode=u64
                    |-NameIdentifierNode="u64"
              |-IntegerLiteral=32 type=(alias i32 (native i32)) annotations=IsValueNode
      |-NameIdentifierNode="Custom$discriminant" type=(fun "Custom$discriminant" () (alias u64))
    |-OverloadedFunctionNode type=(fun "apply" ((alias i32) (alias i32) (alias i32)) (alias Custom)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "apply" ((alias i32) (alias i32) (alias i32)) (alias Custom)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(r:i32#0)
            |-NameIdentifierNode="r" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-ParameterNode annotations=Local(g:i32#1)
            |-NameIdentifierNode="g" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-ParameterNode annotations=Local(b:i32#2)
            |-NameIdentifierNode="b" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-NameIdentifierNode="apply"
          |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
            |-QNameNode=Custom
              |-NameIdentifierNode="Custom"
          |-BlockNode type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode
            |-VarDeclarationNode type=(native void) annotations=Local(test/fixtures/execution/patternMatchingDeconstruct.lys::$ref:Custom#3)
              |-NameIdentifierNode="$ref" type=(alias Custom (struct r:<null> g:<null> b:<null>))
              |-FunctionCallNode=(fun "fromPointer" ((alias u32)) (alias Custom)) type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode
                |-ReferenceNode type=(fun "fromPointer" ((alias u32)) (alias Custom))
                  |-QNameNode=fromPointer
                    |-NameIdentifierNode="fromPointer"
                |-FunctionCallNode=(fun "calloc" ((alias u32) (alias u32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
                  |-ReferenceNode type=(fun "calloc" ((alias u32) (alias u32)) (alias u32))
                    |-QNameNode=system::memory::calloc
                      |-NameIdentifierNode="system"
                      |-NameIdentifierNode="memory"
                      |-NameIdentifierNode="calloc"
                  |-AsExpressionNode=(fun "as" ((alias i32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
                    |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
                    |-ReferenceNode type=(type (alias u32 (native u32)))
                      |-QNameNode=u32
                        |-NameIdentifierNode="u32"
                  |-MemberNode type=(native u32) annotations=IsValueNode
                    |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
                      |-QNameNode=Custom
                        |-NameIdentifierNode="Custom"
                    |-NameIdentifierNode="allocationSize"
            |-FunctionCallNode=(fun "property$0" ((alias Custom) (alias i32)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "property$0" ((alias Custom)) (alias i32)) (fun "property$0" ((alias Custom) (alias i32)) (alias void)))
                |-QNameNode=property$0
                  |-NameIdentifierNode="property$0"
              |-ReferenceNode type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(test/fixtures/execution/patternMatchingDeconstruct.lys::$ref:Custom#3)
                |-QNameNode=$ref
                  |-NameIdentifierNode="$ref"
              |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(r:i32#0)
                |-QNameNode=r
                  |-NameIdentifierNode="r"
            |-FunctionCallNode=(fun "property$1" ((alias Custom) (alias i32)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "property$1" ((alias Custom)) (alias i32)) (fun "property$1" ((alias Custom) (alias i32)) (alias void)))
                |-QNameNode=property$1
                  |-NameIdentifierNode="property$1"
              |-ReferenceNode type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(test/fixtures/execution/patternMatchingDeconstruct.lys::$ref:Custom#3)
                |-QNameNode=$ref
                  |-NameIdentifierNode="$ref"
              |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(g:i32#1)
                |-QNameNode=g
                  |-NameIdentifierNode="g"
            |-FunctionCallNode=(fun "property$2" ((alias Custom) (alias i32)) (alias void)) type=(alias void (native void))
              |-ReferenceNode type=(intersection (fun "property$2" ((alias Custom)) (alias i32)) (fun "property$2" ((alias Custom) (alias i32)) (alias void)))
                |-QNameNode=property$2
                  |-NameIdentifierNode="property$2"
              |-ReferenceNode type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(test/fixtures/execution/patternMatchingDeconstruct.lys::$ref:Custom#3)
                |-QNameNode=$ref
                  |-NameIdentifierNode="$ref"
              |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(b:i32#2)
                |-QNameNode=b
                  |-NameIdentifierNode="b"
            |-ReferenceNode type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,IsReturnExpression,Local(test/fixtures/execution/patternMatchingDeconstruct.lys::$ref:Custom#3)
              |-QNameNode=$ref
                |-NameIdentifierNode="$ref"
      |-NameIdentifierNode="apply" type=(fun "apply" ((alias i32) (alias i32) (alias i32)) (alias Custom))
    |-OverloadedFunctionNode type=(fun "fromPointer" ((alias u32)) (alias Custom)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "fromPointer" ((alias u32)) (alias Custom)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(ptr:u32#0)
            |-NameIdentifierNode="ptr" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="fromPointer"
          |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
            |-QNameNode=Custom
              |-NameIdentifierNode="Custom"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-ReferenceNode type=(fun "Custom$discriminant" () (alias u64))
                  |-QNameNode=Custom$discriminant
                    |-NameIdentifierNode="Custom$discriminant"
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$ptr
                    |-NameIdentifierNode="$ptr"
      |-NameIdentifierNode="fromPointer" type=(fun "fromPointer" ((alias u32)) (alias Custom))
    |-OverloadedFunctionNode type=(fun "==" ((alias Custom) (alias Custom)) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "==" ((alias Custom) (alias Custom)) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Custom#0)
            |-NameIdentifierNode="a" type=(alias Custom (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ParameterNode annotations=Local(b:Custom#1)
            |-NameIdentifierNode="b" type=(alias Custom (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-NameIdentifierNode="=="
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
      |-NameIdentifierNode="==" type=(fun "==" ((alias Custom) (alias Custom)) (alias boolean))
    |-OverloadedFunctionNode type=(fun "!=" ((alias Custom) (alias Custom)) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "!=" ((alias Custom) (alias Custom)) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Custom#0)
            |-NameIdentifierNode="a" type=(alias Custom (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ParameterNode annotations=Local(b:Custom#1)
            |-NameIdentifierNode="b" type=(alias Custom (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-NameIdentifierNode="!="
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
      |-NameIdentifierNode="!=" type=(fun "!=" ((alias Custom) (alias Custom)) (alias boolean))
    |-OverloadedFunctionNode type=(intersection (fun "property_r" ((alias Custom)) (alias i32)) (fun "property_r" ((alias Custom) (alias i32)) (alias void))) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_r" ((alias Custom)) (alias i32)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Custom#0)
            |-NameIdentifierNode="self" type=(alias Custom (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-NameIdentifierNode="property_r"
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "property$0" ((alias Custom)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode type=(intersection (fun "property$0" ((alias Custom)) (alias i32)) (fun "property$0" ((alias Custom) (alias i32)) (alias void)))
              |-QNameNode=property$0
                |-NameIdentifierNode="property$0"
            |-ReferenceNode type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Custom#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_r" ((alias Custom) (alias i32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Custom#0)
            |-NameIdentifierNode="self" type=(alias Custom (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-NameIdentifierNode="property_r"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "property$0" ((alias Custom) (alias i32)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "property$0" ((alias Custom)) (alias i32)) (fun "property$0" ((alias Custom) (alias i32)) (alias void)))
              |-QNameNode=property$0
                |-NameIdentifierNode="property$0"
            |-ReferenceNode type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Custom#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
      |-NameIdentifierNode="property_r" type=(intersection (fun "property_r" ((alias Custom)) (alias i32)) (fun "property_r" ((alias Custom) (alias i32)) (alias void)))
    |-OverloadedFunctionNode type=(intersection (fun "property$0" ((alias Custom)) (alias i32)) (fun "property$0" ((alias Custom) (alias i32)) (alias void))) annotations=Injected
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$0" ((alias Custom)) (alias i32)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Custom#0)
            |-NameIdentifierNode="self" type=(alias Custom (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-NameIdentifierNode="property$0" annotations=Inline
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "load" ((alias ref) (alias u32)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="load"
            |-ReferenceNode type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Custom#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
                |-QNameNode=Custom
                  |-NameIdentifierNode="Custom"
              |-NameIdentifierNode="property$0_offset"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$0" ((alias Custom) (alias i32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Custom#0)
            |-NameIdentifierNode="self" type=(alias Custom (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-NameIdentifierNode="property$0" annotations=Inline
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)) type=(alias void (native void))
            |-MemberNode type=(intersection (fun "store" ((alias ref) (alias i32)) (alias void)) (fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="store"
            |-ReferenceNode type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Custom#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
                |-QNameNode=Custom
                  |-NameIdentifierNode="Custom"
              |-NameIdentifierNode="property$0_offset"
      |-NameIdentifierNode="property$0" type=(intersection (fun "property$0" ((alias Custom)) (alias i32)) (fun "property$0" ((alias Custom) (alias i32)) (alias void)))
    |-OverloadedFunctionNode type=(intersection (fun "property_g" ((alias Custom)) (alias i32)) (fun "property_g" ((alias Custom) (alias i32)) (alias void))) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_g" ((alias Custom)) (alias i32)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Custom#0)
            |-NameIdentifierNode="self" type=(alias Custom (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-NameIdentifierNode="property_g"
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "property$1" ((alias Custom)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode type=(intersection (fun "property$1" ((alias Custom)) (alias i32)) (fun "property$1" ((alias Custom) (alias i32)) (alias void)))
              |-QNameNode=property$1
                |-NameIdentifierNode="property$1"
            |-ReferenceNode type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Custom#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_g" ((alias Custom) (alias i32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Custom#0)
            |-NameIdentifierNode="self" type=(alias Custom (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-NameIdentifierNode="property_g"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "property$1" ((alias Custom) (alias i32)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "property$1" ((alias Custom)) (alias i32)) (fun "property$1" ((alias Custom) (alias i32)) (alias void)))
              |-QNameNode=property$1
                |-NameIdentifierNode="property$1"
            |-ReferenceNode type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Custom#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
      |-NameIdentifierNode="property_g" type=(intersection (fun "property_g" ((alias Custom)) (alias i32)) (fun "property_g" ((alias Custom) (alias i32)) (alias void)))
    |-OverloadedFunctionNode type=(intersection (fun "property$1" ((alias Custom)) (alias i32)) (fun "property$1" ((alias Custom) (alias i32)) (alias void))) annotations=Injected
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$1" ((alias Custom)) (alias i32)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Custom#0)
            |-NameIdentifierNode="self" type=(alias Custom (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-NameIdentifierNode="property$1" annotations=Inline
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "load" ((alias ref) (alias u32)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="load"
            |-ReferenceNode type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Custom#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
                |-QNameNode=Custom
                  |-NameIdentifierNode="Custom"
              |-NameIdentifierNode="property$1_offset"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$1" ((alias Custom) (alias i32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Custom#0)
            |-NameIdentifierNode="self" type=(alias Custom (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-NameIdentifierNode="property$1" annotations=Inline
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)) type=(alias void (native void))
            |-MemberNode type=(intersection (fun "store" ((alias ref) (alias i32)) (alias void)) (fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="store"
            |-ReferenceNode type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Custom#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
                |-QNameNode=Custom
                  |-NameIdentifierNode="Custom"
              |-NameIdentifierNode="property$1_offset"
      |-NameIdentifierNode="property$1" type=(intersection (fun "property$1" ((alias Custom)) (alias i32)) (fun "property$1" ((alias Custom) (alias i32)) (alias void)))
    |-OverloadedFunctionNode type=(intersection (fun "property_b" ((alias Custom)) (alias i32)) (fun "property_b" ((alias Custom) (alias i32)) (alias void))) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_b" ((alias Custom)) (alias i32)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Custom#0)
            |-NameIdentifierNode="self" type=(alias Custom (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-NameIdentifierNode="property_b"
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "property$2" ((alias Custom)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode type=(intersection (fun "property$2" ((alias Custom)) (alias i32)) (fun "property$2" ((alias Custom) (alias i32)) (alias void)))
              |-QNameNode=property$2
                |-NameIdentifierNode="property$2"
            |-ReferenceNode type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Custom#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
      |-FunDirectiveNode
        |-FunctionNode type=(fun "property_b" ((alias Custom) (alias i32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Custom#0)
            |-NameIdentifierNode="self" type=(alias Custom (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-NameIdentifierNode="property_b"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "property$2" ((alias Custom) (alias i32)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "property$2" ((alias Custom)) (alias i32)) (fun "property$2" ((alias Custom) (alias i32)) (alias void)))
              |-QNameNode=property$2
                |-NameIdentifierNode="property$2"
            |-ReferenceNode type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Custom#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
      |-NameIdentifierNode="property_b" type=(intersection (fun "property_b" ((alias Custom)) (alias i32)) (fun "property_b" ((alias Custom) (alias i32)) (alias void)))
    |-OverloadedFunctionNode type=(intersection (fun "property$2" ((alias Custom)) (alias i32)) (fun "property$2" ((alias Custom) (alias i32)) (alias void))) annotations=Injected
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$2" ((alias Custom)) (alias i32)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Custom#0)
            |-NameIdentifierNode="self" type=(alias Custom (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-NameIdentifierNode="property$2" annotations=Inline
          |-ReferenceNode type=(type (alias i32 (native i32)))
            |-QNameNode=i32
              |-NameIdentifierNode="i32"
          |-FunctionCallNode=(fun "load" ((alias ref) (alias u32)) (alias i32)) type=(alias i32 (native i32)) annotations=IsValueNode,IsReturnExpression
            |-MemberNode type=(intersection (fun "load" ((alias ref)) (alias i32)) (fun "load" ((alias ref) (alias u32)) (alias i32)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="load"
            |-ReferenceNode type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Custom#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
                |-QNameNode=Custom
                  |-NameIdentifierNode="Custom"
              |-NameIdentifierNode="property$2_offset"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode type=(fun "property$2" ((alias Custom) (alias i32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(self:Custom#0)
            |-NameIdentifierNode="self" type=(alias Custom (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ParameterNode annotations=Local(value:i32#1)
            |-NameIdentifierNode="value" type=(alias i32 (native i32))
            |-ReferenceNode type=(type (alias i32 (native i32)))
              |-QNameNode=i32
                |-NameIdentifierNode="i32"
          |-NameIdentifierNode="property$2" annotations=Inline
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)) type=(alias void (native void))
            |-MemberNode type=(intersection (fun "store" ((alias ref) (alias i32)) (alias void)) (fun "store" ((alias ref) (alias i32) (alias u32)) (alias void)))
              |-ReferenceNode type=(type (alias i32 (native i32)))
                |-QNameNode=i32
                  |-NameIdentifierNode="i32"
              |-NameIdentifierNode="store"
            |-ReferenceNode type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode,Local(self:Custom#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(value:i32#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
                |-QNameNode=Custom
                  |-NameIdentifierNode="Custom"
              |-NameIdentifierNode="property$2_offset"
      |-NameIdentifierNode="property$2" type=(intersection (fun "property$2" ((alias Custom)) (alias i32)) (fun "property$2" ((alias Custom) (alias i32)) (alias void)))
    |-OverloadedFunctionNode type=(fun "is" ((union (alias Custom) (alias ref))) (alias boolean)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "is" ((union (alias Custom) (alias ref))) (alias boolean)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(a:Custom | ref#0)
            |-NameIdentifierNode="a" type=(union (alias Custom (struct r:<null> g:<null> b:<null>)) (alias ref (ref ?)))
            |-UnionTypeNode type=(type (union (alias Custom (struct r:<null> g:<null> b:<null>)) (alias ref (ref ?))))
              |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
                |-QNameNode=Custom
                  |-NameIdentifierNode="Custom"
              |-ReferenceNode type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-NameIdentifierNode="is"
          |-ReferenceNode type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-HexLiteral=18446744069414584000
                |-WasmAtomNode
                  |-QNameNode=$a
                    |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-ReferenceNode type=(fun "Custom$discriminant" () (alias u64))
                  |-QNameNode=Custom$discriminant
                    |-NameIdentifierNode="Custom$discriminant"
      |-NameIdentifierNode="is" type=(fun "is" ((union (alias Custom) (alias ref))) (alias boolean))
    |-OverloadedFunctionNode type=(fun "store" ((alias ref) (alias Custom) (alias u32)) (alias void)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "store" ((alias ref) (alias Custom) (alias u32)) (alias void)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:Custom#1)
            |-NameIdentifierNode="rhs" type=(alias Custom (struct r:<null> g:<null> b:<null>))
            |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
              |-QNameNode=Custom
                |-NameIdentifierNode="Custom"
          |-ParameterNode annotations=Local(offset:u32#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="store"
          |-ReferenceNode type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
      |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Custom) (alias u32)) (alias void))
    |-OverloadedFunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Custom)) annotations=Injected
      |-FunDirectiveNode
        |-FunctionNode type=(fun "load" ((alias ref) (alias u32)) (alias Custom)) annotations=IsOverloaded
          |-ParameterNode annotations=Local(lhs:ref#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:u32#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-NameIdentifierNode="load"
          |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
            |-QNameNode=Custom
              |-NameIdentifierNode="Custom"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode type=(fun "addressFromRef" ((alias ref)) (alias u32))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
      |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Custom))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Red" type=(type (alias Red (struct)))
    |-StructTypeNode type=(type (alias Red (struct)))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Green" type=(type (alias Green (struct)))
    |-StructTypeNode type=(type (alias Green (struct)))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Blue" type=(type (alias Blue (struct)))
    |-StructTypeNode type=(type (alias Blue (struct)))
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Custom" type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
    |-StructTypeNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
      |-ParameterNode
        |-NameIdentifierNode="r"
        |-ReferenceNode
          |-QNameNode=i32
            |-NameIdentifierNode="i32"
      |-ParameterNode
        |-NameIdentifierNode="g"
        |-ReferenceNode
          |-QNameNode=i32
            |-NameIdentifierNode="i32"
      |-ParameterNode
        |-NameIdentifierNode="b"
        |-ReferenceNode
          |-QNameNode=i32
            |-NameIdentifierNode="i32"
  |-OverloadedFunctionNode type=(fun "isRed" ((alias Color)) (alias boolean)) annotations=Injected
    |-FunDirectiveNode
      |-FunctionNode type=(fun "isRed" ((alias Color)) (alias boolean)) annotations=IsOverloaded
        |-ParameterNode annotations=Local(color:Color#0)
          |-NameIdentifierNode="color" type=(alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>))))
          |-ReferenceNode type=(type (alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>)))))
            |-QNameNode=Color
              |-NameIdentifierNode="Color"
        |-NameIdentifierNode="isRed"
        |-ReferenceNode type=(type (alias boolean (native boolean)))
          |-QNameNode=boolean
            |-NameIdentifierNode="boolean"
        |-BlockNode type=(alias boolean (native boolean)) annotations=IsValueNode
          |-PatternMatcherNode type=(alias boolean (native boolean)) annotations=IsValueNode,Local(var$4:Color#4)
            |-ReferenceNode type=(alias Color (union (alias Red (struct)) (alias Green (struct)) (alias Blue (struct)) (alias Custom (struct r:<null> g:<null> b:<null>)))) annotations=IsValueNode,Local(color:Color#0)
              |-QNameNode=color
                |-NameIdentifierNode="color"
            |-MatchCaseIsNode type=(alias boolean (native boolean)) annotations=IsValueNode,Local(var$4:Color#4)
              |-NameIdentifierNode="$" type=(alias Red (struct))
              |-ReferenceNode type=(type (alias Red (struct)))
                |-QNameNode=Red
                  |-NameIdentifierNode="Red"
              |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
            |-MatchCaseIsNode type=(alias boolean (native boolean)) annotations=IsValueNode,Local(var$4:Color#4)
              |-NameIdentifierNode="$" type=(alias Custom (struct r:<null> g:<null> b:<null>))
              |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
                |-QNameNode=Custom
                  |-NameIdentifierNode="Custom"
              |-BlockNode type=(alias boolean (native boolean)) annotations=IsValueNode
                |-ValDeclarationNode type=(native void) annotations=Local(test/fixtures/execution/patternMatchingDeconstruct.lys::r_2:i32#1)
                  |-NameIdentifierNode="r" type=(alias i32 (native i32))
                  |-MemberNode type=(alias i32 (native i32)) annotations=IsValueNode,ImplicitCall(fun "property_r" ((alias Custom)) (alias i32))
                    |-ReferenceNode type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=Local(var$4:Color#4)
                      |-QNameNode=$
                        |-NameIdentifierNode="$"
                    |-NameIdentifierNode="r"
                |-ValDeclarationNode type=(native void) annotations=Local(test/fixtures/execution/patternMatchingDeconstruct.lys::g_2:i32#2)
                  |-NameIdentifierNode="g" type=(alias i32 (native i32))
                  |-MemberNode type=(alias i32 (native i32)) annotations=IsValueNode,ImplicitCall(fun "property_g" ((alias Custom)) (alias i32))
                    |-ReferenceNode type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=Local(var$4:Color#4)
                      |-QNameNode=$
                        |-NameIdentifierNode="$"
                    |-NameIdentifierNode="g"
                |-ValDeclarationNode type=(native void) annotations=Local(test/fixtures/execution/patternMatchingDeconstruct.lys::b_2:i32#3)
                  |-NameIdentifierNode="b" type=(alias i32 (native i32))
                  |-MemberNode type=(alias i32 (native i32)) annotations=IsValueNode,ImplicitCall(fun "property_b" ((alias Custom)) (alias i32))
                    |-ReferenceNode type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=Local(var$4:Color#4)
                      |-QNameNode=$
                        |-NameIdentifierNode="$"
                    |-NameIdentifierNode="b"
                |-BinaryExpressionNode=(fun "&&" ((alias boolean) (alias boolean)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
                  |-NameIdentifierNode="&&"
                  |-BinaryExpressionNode=(fun "&&" ((alias boolean) (alias boolean)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                    |-NameIdentifierNode="&&"
                    |-BinaryExpressionNode=(fun "==" ((alias i32) (alias i32)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                      |-NameIdentifierNode="=="
                      |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(test/fixtures/execution/patternMatchingDeconstruct.lys::r_2:i32#1)
                        |-QNameNode=r
                          |-NameIdentifierNode="r"
                      |-IntegerLiteral=255 type=(alias i32 (native i32)) annotations=IsValueNode
                    |-BinaryExpressionNode=(fun "==" ((alias i32) (alias i32)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                      |-NameIdentifierNode="=="
                      |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(test/fixtures/execution/patternMatchingDeconstruct.lys::g_2:i32#2)
                        |-QNameNode=g
                          |-NameIdentifierNode="g"
                      |-IntegerLiteral=0 type=(alias i32 (native i32)) annotations=IsValueNode
                  |-BinaryExpressionNode=(fun "==" ((alias i32) (alias i32)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                    |-NameIdentifierNode="=="
                    |-ReferenceNode type=(alias i32 (native i32)) annotations=IsValueNode,Local(test/fixtures/execution/patternMatchingDeconstruct.lys::b_2:i32#3)
                      |-QNameNode=b
                        |-NameIdentifierNode="b"
                    |-IntegerLiteral=0 type=(alias i32 (native i32)) annotations=IsValueNode
            |-MatchDefaultNode type=(alias boolean (native boolean)) annotations=IsValueNode,Local(var$4:Color#4)
              |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
    |-NameIdentifierNode="isRed" type=(fun "isRed" ((alias Color)) (alias boolean))
  |-OverloadedFunctionNode type=(fun "main" () (alias void)) annotations=Injected
    |-FunDirectiveNode
      |-DecoratorNode
        |-NameIdentifierNode="export"
      |-FunctionNode type=(fun "main" () (alias void)) annotations=IsOverloaded
        |-NameIdentifierNode="main" annotations=Export
        |-ReferenceNode type=(type (alias void (native void)))
          |-QNameNode=void
            |-NameIdentifierNode="void"
        |-BlockNode type=(native void)
          |-FunctionCallNode=(fun "START" ((alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "START" ((alias u32)) (alias void)) (fun "START" ((alias bytes)) (alias void)))
              |-QNameNode=support::test::START
                |-NameIdentifierNode="support"
                |-NameIdentifierNode="test"
                |-NameIdentifierNode="START"
            |-StringLiteral="pattern matching with deconstruct" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "mustEqual" ((alias f64) (alias f64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias f32) (alias f32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u64) (alias u64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u32) (alias u32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) (fun "mustEqual" ((alias bytes) (alias bytes) (alias bytes)) (alias void)))
              |-QNameNode=mustEqual
                |-NameIdentifierNode="mustEqual"
            |-FunctionCallNode=(fun "isRed" ((alias Color)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isRed" ((alias Color)) (alias boolean))
                |-QNameNode=isRed
                  |-NameIdentifierNode="isRed"
              |-ReferenceNode type=(alias Red (struct)) annotations=IsValueNode,ImplicitCall(fun "apply" () (alias Red))
                |-QNameNode=Red
                  |-NameIdentifierNode="Red"
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
            |-StringLiteral="isRed(Red)" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "mustEqual" ((alias f64) (alias f64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias f32) (alias f32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u64) (alias u64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u32) (alias u32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) (fun "mustEqual" ((alias bytes) (alias bytes) (alias bytes)) (alias void)))
              |-QNameNode=mustEqual
                |-NameIdentifierNode="mustEqual"
            |-FunctionCallNode=(fun "isRed" ((alias Color)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isRed" ((alias Color)) (alias boolean))
                |-QNameNode=isRed
                  |-NameIdentifierNode="isRed"
              |-ReferenceNode type=(alias Green (struct)) annotations=IsValueNode,ImplicitCall(fun "apply" () (alias Green))
                |-QNameNode=Green
                  |-NameIdentifierNode="Green"
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
            |-StringLiteral="isRed(Green)" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "mustEqual" ((alias f64) (alias f64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias f32) (alias f32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u64) (alias u64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u32) (alias u32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) (fun "mustEqual" ((alias bytes) (alias bytes) (alias bytes)) (alias void)))
              |-QNameNode=mustEqual
                |-NameIdentifierNode="mustEqual"
            |-FunctionCallNode=(fun "isRed" ((alias Color)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isRed" ((alias Color)) (alias boolean))
                |-QNameNode=isRed
                  |-NameIdentifierNode="isRed"
              |-ReferenceNode type=(alias Blue (struct)) annotations=IsValueNode,ImplicitCall(fun "apply" () (alias Blue))
                |-QNameNode=Blue
                  |-NameIdentifierNode="Blue"
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
            |-StringLiteral="isRed(Blue)" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "mustEqual" ((alias f64) (alias f64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias f32) (alias f32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u64) (alias u64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u32) (alias u32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) (fun "mustEqual" ((alias bytes) (alias bytes) (alias bytes)) (alias void)))
              |-QNameNode=mustEqual
                |-NameIdentifierNode="mustEqual"
            |-FunctionCallNode=(fun "isRed" ((alias Color)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isRed" ((alias Color)) (alias boolean))
                |-QNameNode=isRed
                  |-NameIdentifierNode="isRed"
              |-FunctionCallNode=(fun "apply" ((alias i32) (alias i32) (alias i32)) (alias Custom)) type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode
                |-MemberNode type=(fun "apply" ((alias i32) (alias i32) (alias i32)) (alias Custom))
                  |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
                    |-QNameNode=Custom
                      |-NameIdentifierNode="Custom"
                  |-NameIdentifierNode="apply"
                |-IntegerLiteral=255 type=(alias i32 (native i32)) annotations=IsValueNode
                |-IntegerLiteral=0 type=(alias i32 (native i32)) annotations=IsValueNode
                |-IntegerLiteral=0 type=(alias i32 (native i32)) annotations=IsValueNode
            |-BooleanLiteral=true type=(alias boolean (native boolean)) annotations=IsValueNode
            |-StringLiteral="isRed(Custom(255,0,0))" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "mustEqual" ((alias f64) (alias f64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias f32) (alias f32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u64) (alias u64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u32) (alias u32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) (fun "mustEqual" ((alias bytes) (alias bytes) (alias bytes)) (alias void)))
              |-QNameNode=mustEqual
                |-NameIdentifierNode="mustEqual"
            |-FunctionCallNode=(fun "isRed" ((alias Color)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isRed" ((alias Color)) (alias boolean))
                |-QNameNode=isRed
                  |-NameIdentifierNode="isRed"
              |-FunctionCallNode=(fun "apply" ((alias i32) (alias i32) (alias i32)) (alias Custom)) type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode
                |-MemberNode type=(fun "apply" ((alias i32) (alias i32) (alias i32)) (alias Custom))
                  |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
                    |-QNameNode=Custom
                      |-NameIdentifierNode="Custom"
                  |-NameIdentifierNode="apply"
                |-IntegerLiteral=0 type=(alias i32 (native i32)) annotations=IsValueNode
                |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
                |-IntegerLiteral=3 type=(alias i32 (native i32)) annotations=IsValueNode
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
            |-StringLiteral="isRed(Custom(0,1,3))" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(intersection (fun "mustEqual" ((alias f64) (alias f64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias f32) (alias f32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u64) (alias u64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i64) (alias i64) (alias bytes)) (alias void)) (fun "mustEqual" ((alias u32) (alias u32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias i32) (alias i32) (alias bytes)) (alias void)) (fun "mustEqual" ((alias boolean) (alias boolean) (alias bytes)) (alias void)) (fun "mustEqual" ((alias bytes) (alias bytes) (alias bytes)) (alias void)))
              |-QNameNode=mustEqual
                |-NameIdentifierNode="mustEqual"
            |-FunctionCallNode=(fun "isRed" ((alias Color)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode type=(fun "isRed" ((alias Color)) (alias boolean))
                |-QNameNode=isRed
                  |-NameIdentifierNode="isRed"
              |-FunctionCallNode=(fun "apply" ((alias i32) (alias i32) (alias i32)) (alias Custom)) type=(alias Custom (struct r:<null> g:<null> b:<null>)) annotations=IsValueNode
                |-MemberNode type=(fun "apply" ((alias i32) (alias i32) (alias i32)) (alias Custom))
                  |-ReferenceNode type=(type (alias Custom (struct r:<null> g:<null> b:<null>)))
                    |-QNameNode=Custom
                      |-NameIdentifierNode="Custom"
                  |-NameIdentifierNode="apply"
                |-IntegerLiteral=255 type=(alias i32 (native i32)) annotations=IsValueNode
                |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
                |-IntegerLiteral=3 type=(alias i32 (native i32)) annotations=IsValueNode
            |-BooleanLiteral=false type=(alias boolean (native boolean)) annotations=IsValueNode
            |-StringLiteral="isRed(Custom(255,1,3))" type=(alias bytes (native bytes)) annotations=IsValueNode
          |-FunctionCallNode=(fun "END" () (alias void)) type=(alias void (native void))
            |-ReferenceNode type=(fun "END" () (alias void))
              |-QNameNode=support::test::END
                |-NameIdentifierNode="support"
                |-NameIdentifierNode="test"
                |-NameIdentifierNode="END"
    |-NameIdentifierNode="main" type=(fun "main" () (alias void))