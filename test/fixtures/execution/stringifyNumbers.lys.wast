(module
  (import "test" "printNumber" (func $support::test::printNumber (param $number f32)))
  (import "test" "printNumber" (func $support::test::printNumber_1 (param $number f64)))
  (import "test" "printNumber" (func $support::test::printNumber_2 (param $number i32)))
  (import "test" "printNumber" (func $support::test::printNumber_3 (param $number i32)))
  (import "test" "printString" (func $support::test::printString (param $number i32)))
  (import "test" "printMemory" (func $support::test::printMemory (param $start i32) (param $length i32)))
  (import "test" "printMemory" (func $support::test::printMemory_1 (param $start i32) (param $length i32)))
  (import "test" "pushTest" (func $support::test::START (param $title i32)))
  (import "test" "registerAssertion" (func $support::test::verify_8 (param $passed i32) (param $title i32)))
  (import "test" "popTest" (func $support::test::END))
  (import "env" "putchar" (func $support::env::putchar (param $char i32)))
  (import "env" "printf" (func $support::env::printf (param $number i32) (param $extra i32)))
  (import "env" "printf" (func $support::env::printf_1 (param $number i32) (param $extra i32)))
  (import "env" "printf" (func $support::env::printf_2 (param $number i32) (param $extra f32)))
  (import "env" "printf" (func $support::env::printf_3 (param $number i32) (param $extra f64)))
  (import "env" "segfault" (func $system::memory::segfault))
  (memory $mem 1)
  (export "memory" (memory $mem))
  (global $system::memory::AL_BITS (mut i32) (i32.const 0))
  (global $system::memory::AL_SIZE (mut i32) (i32.const 0))
  (global $system::memory::AL_MASK (mut i32) (i32.const 0))
  (global $system::memory::MAX_SIZE_32 (mut i32) (i32.const 0))
  (global $system::memory::HEAP_BASE (mut i32) (i32.const 0))
  (global $system::memory::startOffset (mut i32) (i32.const 0))
  (global $system::memory::offset (mut i32) (i32.const 0))
  (export "test_getMaxMemory" (func $system::memory::getMaxMemory))
  (func $system::memory::getMaxMemory (result i32)
    (global.get $system::memory::offset)
  )
  (func $system::memory::growMemory (param $pages i32) (result i32)
    (grow_memory (get_local $pages))
  )
  (func $system::memory::currentMemory (result i32)
    (current_memory)
  )
  (func $system::memory::max (param $a i32) (param $b i32) (result i32)
    (if $IF1 (result i32) (call $system::core::u32.> (local.get $a) (local.get $b))
      (then
        (local.get $a)
      )
      (else
        (local.get $b)
      )
    )
  )
  (func $system::memory::allocBytes (param $size i32) (result i64)
    (local $allocation i32)
    (local $allocationSize i32)
    (local.set $allocationSize (i32.add (get_local $size) (i32.const 4)))
    (local.set $allocation (call $system::memory::malloc_2 (local.get $allocationSize)))
    (call $system::memory::memset_2 (get_local $allocation) (i32.const 0) (local.get $allocationSize))
    (i32.store (get_local $allocation) (get_local $size))
    (i64.or (i64.extend_u/i32 (get_local $allocation)) (i64.shl (i64.extend_u/i32 (i32.const 0)) (i64.const 32)))
  )
  (func $system::memory::calloc (param $itemCount i32) (param $itemSize i32) (result i32)
    (local $system::memory::size_1 i32)
    (local $system::memory::$ret i32)
    (block $B1 (result i32)
      (local.set $system::memory::size_1 (call $system::core::u32.* (local.get $itemCount) (local.get $itemSize)))
      (local.set $system::memory::$ret (call $system::memory::malloc_2 (local.get $system::memory::size_1)))
      (call $system::memory::memset_2 (local.get $system::memory::$ret) (call $system::core::i32.as_7 (i32.const 0)) (local.get $system::memory::size_1))
      (local.get $system::memory::$ret)
    )
  )
  (func $system::memory::malloc_2 (param $size i32) (result i32)
    (local $system::memory::ptr i32)
    (local $system::memory::newPtr i32)
    (local $system::memory::pagesBefore i32)
    (local $system::memory::pagesNeeded i32)
    (local $system::memory::pagesWanted i32)
    (block $B1 (result i32)
      (if $IF2 (call $system::core::u32.== (local.get $size) (call $system::core::i32.as_3 (i32.const 0)))
          (then
            (call $system::core::panic)
          )
          (else)
        )
      (if $IF3 (call $system::core::u32.> (local.get $size) (global.get $system::memory::MAX_SIZE_32))
          (then
            (call $system::core::panic)
          )
          (else)
        )
      (local.set $system::memory::ptr (global.get $system::memory::offset))
      (local.set $system::memory::newPtr (call $system::core::u32.& (call $system::core::u32.+ (call $system::core::u32.+ (local.get $system::memory::ptr) (call $system::memory::max (local.get $size) (call $system::core::i32.as_3 (i32.const 8)))) (global.get $system::memory::AL_MASK)) (call $system::core::u32.~ (global.get $system::memory::AL_MASK))))
      (local.set $system::memory::pagesBefore (call $system::memory::currentMemory))
      (if $IF4 (call $system::core::u32.> (local.get $system::memory::newPtr) (call $system::core::u32.<< (local.get $system::memory::pagesBefore) (i32.const 16)))
          (then
            (block $B5
                (local.set $system::memory::pagesNeeded (call $system::core::u32.>> (call $system::core::u32.& (call $system::core::u32.+ (call $system::core::u32.- (local.get $system::memory::newPtr) (local.get $system::memory::ptr)) (call $system::core::i32.as_3 (i32.const 65535))) (call $system::core::u32.~ (call $system::core::i32.as_3 (i32.const 65535)))) (i32.const 16)))
                (local.set $system::memory::pagesWanted (call $system::memory::max (local.get $system::memory::pagesBefore) (local.get $system::memory::pagesNeeded)))
                (if $IF6 (call $system::core::u32.< (call $system::memory::growMemory (local.get $system::memory::pagesWanted)) (call $system::core::i32.as_3 (i32.const 0)))
                    (then
                      (block $B7
                          (if $IF8 (call $system::core::u32.< (call $system::memory::growMemory (local.get $system::memory::pagesNeeded)) (call $system::core::i32.as_3 (i32.const 0)))
                              (then
                                (block $B9
                                    (call $system::core::panic)
                                  )
                              )
                              (else)
                            )
                        )
                    )
                    (else)
                  )
              )
          )
          (else)
        )
      (global.set $system::memory::offset (local.get $system::memory::newPtr))
      (local.get $system::memory::ptr)
    )
  )
  (func $system::memory::free (param $ptr i32)
    (block $B1
      (nop)
    )
  )
  (func $system::memory::discriminant (param $v i64) (result i64)
    (i64.and (i64.const 0xffffffff00000000) (get_local $v))
  )
  (func $system::memory::memcpy (param $src i32) (param $dst i32) (param $length i32) (result i32)
    (local $system::memory::i i32)
    (local $system::memory::SRC i64)
    (local $system::memory::DST i64)
    (block $B1 (result i32)
      (local.set $system::memory::i (call $system::core::i32.as_3 (i32.const 0)))
      (local.set $system::memory::SRC (call $system::core::u32.as_7 (local.get $src)))
      (local.set $system::memory::DST (call $system::core::u32.as_7 (local.get $dst)))
      (block $Break2
          (loop $Loop2
              (block $B3
                  (if $IF4 (call $system::core::u32.>= (local.get $system::memory::i) (local.get $length))
                      (then
                        (block $B5
                            (br $Break2)
                          )
                      )
                      (else)
                    )
                  (call $system::core::u8.store_1 (local.get $system::memory::DST) (call $system::core::u8.load_1 (local.get $system::memory::SRC) (local.get $system::memory::i)) (local.get $system::memory::i))
                  (local.set $system::memory::i (call $system::core::u32.+ (local.get $system::memory::i) (call $system::core::i32.as_3 (i32.const 1))))
                  (br $Loop2)
                )
            )
        )
      (call $system::core::u32.+ (local.get $dst) (local.get $length))
    )
  )
  (func $system::memory::memset_2 (param $ptr i32) (param $content i32) (param $len i32)
    (local $end i32)
    (set_local $end (i32.add (get_local $ptr) (get_local $len)))
    (block $exit (loop $cont (br_if $exit (i32.eq (get_local $ptr) (get_local $end))) (i32.store8 (get_local $ptr) (i32.load8_u (get_local $content))) (set_local $ptr (i32.add (get_local $ptr) (i32.const 1))) (br $cont)))
  )
  (func $support::env::printf_4 (param $str i64) (param $extra i32)
    (call $support::env::printf (call $system::core::u32.- (call $system::core::bytes.property_ptr (local.get $str)) (call $system::core::i32.as_3 (i32.const 4))) (local.get $extra))
  )
  (func $support::env::printf_6 (param $str i64) (param $extra i32)
    (call $support::env::printf_1 (call $system::core::u32.- (call $system::core::bytes.property_ptr (local.get $str)) (call $system::core::i32.as_3 (i32.const 4))) (local.get $extra))
  )
  (func $support::env::printf_8 (param $str i64) (param $extra f32)
    (call $support::env::printf_2 (call $system::core::u32.- (call $system::core::bytes.property_ptr (local.get $str)) (call $system::core::i32.as_3 (i32.const 4))) (local.get $extra))
  )
  (func $support::env::printf_10 (param $str i64) (param $extra f64)
    (call $support::env::printf_3 (call $system::core::u32.- (call $system::core::bytes.property_ptr (local.get $str)) (call $system::core::i32.as_3 (i32.const 4))) (local.get $extra))
  )
  (func $support::env::printf_12 (param $str i64)
    (call $support::env::printf_4 (local.get $str) (i32.const 0))
  )
  (data 0 (i32.const 687) "\16\00\00\00 \00 \00g\00i\00v\00e\00n\00:\00 \00%\00d\00\00")
  (data 0 (i32.const 714) "\1c\00\00\00 \00 \00e\00x\00p\00e\00c\00t\00e\00d\00:\00 \00%\00d\00\00")
  (data 0 (i32.const 747) "\16\00\00\00 \00 \00g\00i\00v\00e\00n\00:\00 \00%\00d\00\00")
  (data 0 (i32.const 774) "\1c\00\00\00 \00 \00e\00x\00p\00e\00c\00t\00e\00d\00:\00 \00%\00d\00\00")
  (data 0 (i32.const 807) "\1e\00\00\00 \00 \00g\00i\00v\00e\00n\00 \00L\00S\00B\00:\00 \00%\00X\00\00")
  (data 0 (i32.const 842) "$\00\00\00 \00 \00e\00x\00p\00e\00c\00t\00e\00d\00 \00L\00S\00B\00:\00 \00%\00X\00\00")
  (data 0 (i32.const 883) "\1e\00\00\00 \00 \00g\00i\00v\00e\00n\00 \00M\00S\00B\00:\00 \00%\00X\00\00")
  (data 0 (i32.const 918) "$\00\00\00 \00 \00e\00x\00p\00e\00c\00t\00e\00d\00 \00M\00S\00B\00:\00 \00%\00X\00\00")
  (data 0 (i32.const 959) "\1e\00\00\00 \00 \00g\00i\00v\00e\00n\00 \00L\00S\00B\00:\00 \00%\00X\00\00")
  (data 0 (i32.const 994) "$\00\00\00 \00 \00e\00x\00p\00e\00c\00t\00e\00d\00 \00L\00S\00B\00:\00 \00%\00X\00\00")
  (data 0 (i32.const 1035) "\1e\00\00\00 \00 \00g\00i\00v\00e\00n\00 \00M\00S\00B\00:\00 \00%\00X\00\00")
  (data 0 (i32.const 1070) "$\00\00\00 \00 \00e\00x\00p\00e\00c\00t\00e\00d\00 \00M\00S\00B\00:\00 \00%\00X\00\00")
  (data 0 (i32.const 1111) "\16\00\00\00 \00 \00g\00i\00v\00e\00n\00:\00 \00%\00X\00\00")
  (data 0 (i32.const 1138) "\1c\00\00\00 \00 \00e\00x\00p\00e\00c\00t\00e\00d\00:\00 \00%\00X\00\00")
  (data 0 (i32.const 1171) "\16\00\00\00 \00 \00g\00i\00v\00e\00n\00:\00 \00%\00d\00\00")
  (data 0 (i32.const 1198) "\1c\00\00\00 \00 \00e\00x\00p\00e\00c\00t\00e\00d\00:\00 \00%\00d\00\00")
  (data 0 (i32.const 1231) "\1a\00\00\00a\00s\00s\00e\00r\00t\00(\00f\00a\00l\00s\00e\00)\00\00")
  (global $support::test::lastErrorMessage (mut i64) (i64.const 0))
  (export "test_getLastErrorMessage" (func $support::test::getLastErrorMessage))
  (func $support::test::TestStruct.TestStruct$discriminant (result i64)
    (local $support::test::discriminant i32)
    (block $B1 (result i64)
      (local.set $support::test::discriminant (i32.const 6))
      (call $system::core::i64.<< (call $system::core::u32.as (local.get $support::test::discriminant)) (i32.const 32))
    )
  )
  (func $support::test::TestStruct.apply (result i64)
    (call $support::test::TestStruct.TestStruct$discriminant)
  )
  (func $support::test::TestStruct.is (param $a i64) (result i32)
    (i64.eq (i64.and (i64.const 0xffffffff00000000) (local.get $a)) (call $support::test::TestStruct.TestStruct$discriminant))
  )
  (func $support::test::TestStruct.== (param $a i64) (param $b i64) (result i32)
    (i64.eq (local.get $a) (local.get $b))
  )
  (func $support::test::TestStruct.!= (param $a i64) (param $b i64) (result i32)
    (i64.ne (local.get $a) (local.get $b))
  )
  (func $support::test::TestStruct.store (param $lhs i64) (param $rhs i64) (param $offset i32)
    (i64.store (i32.add (local.get $offset) (call $system::core::addressFromRef (local.get $lhs))) (local.get $rhs))
  )
  (func $support::test::TestStruct.load (param $lhs i64) (param $offset i32) (result i64)
    (i64.load (i32.add (local.get $offset) (call $system::core::addressFromRef (local.get $lhs))))
  )
  (func $support::test::TestStruct.as (param $lhs i64) (result i64)
    (local.get $lhs)
  )
  (func $support::test::identity (param $x i32) (result i32)
    (local.get $x)
  )
  (func $support::test::identity_1 (param $x f32) (result f32)
    (local.get $x)
  )
  (func $support::test::identity_2 (param $x f64) (result f64)
    (local.get $x)
  )
  (func $support::test::identity_3 (param $x f32) (result f32)
    (local.get $x)
  )
  (func $support::test::ErrorMessage.is (param $a i64) (result i32)
    (block $B1 (result i32)
      (call $system::core::boolean.|| (call $support::test::EmptyMessage.is (local.get $a)) (call $support::test::Message.is (local.get $a)))
    )
  )
  (func $support::test::ErrorMessage.as (param $a i64) (result i64)
    (local.get $a)
  )
  (func $support::test::ErrorMessage.== (param $lhs i64) (param $rhs i64) (result i32)
    (call $system::core::ref.== (local.get $lhs) (local.get $rhs))
  )
  (func $support::test::ErrorMessage.!= (param $lhs i64) (param $rhs i64) (result i32)
    (call $system::core::ref.!= (local.get $lhs) (local.get $rhs))
  )
  (func $support::test::ErrorMessage.store (param $lhs i64) (param $rhs i64) (param $offset i32)
    (i64.store (i32.add (local.get $offset) (call $system::core::addressFromRef (local.get $lhs))) (local.get $rhs))
  )
  (func $support::test::ErrorMessage.load (param $lhs i64) (param $offset i32) (result i64)
    (i64.load (i32.add (local.get $offset) (call $system::core::addressFromRef (local.get $lhs))))
  )
  (func $support::test::EmptyMessage.as (param $lhs i64) (result i64)
    (local.get $lhs)
  )
  (func $support::test::EmptyMessage.as_1 (param $lhs i64) (result i64)
    (local.get $lhs)
  )
  (func $support::test::EmptyMessage.EmptyMessage$discriminant (result i64)
    (local $support::test::discriminant_3 i32)
    (block $B1 (result i64)
      (local.set $support::test::discriminant_3 (i32.const 8))
      (call $system::core::i64.<< (call $system::core::u32.as (local.get $support::test::discriminant_3)) (i32.const 32))
    )
  )
  (func $support::test::EmptyMessage.apply (result i64)
    (call $support::test::EmptyMessage.EmptyMessage$discriminant)
  )
  (func $support::test::EmptyMessage.is (param $a i64) (result i32)
    (i64.eq (i64.and (i64.const 0xffffffff00000000) (local.get $a)) (call $support::test::EmptyMessage.EmptyMessage$discriminant))
  )
  (func $support::test::EmptyMessage.== (param $a i64) (param $b i64) (result i32)
    (i64.eq (local.get $a) (local.get $b))
  )
  (func $support::test::EmptyMessage.!= (param $a i64) (param $b i64) (result i32)
    (i64.ne (local.get $a) (local.get $b))
  )
  (func $support::test::EmptyMessage.store (param $lhs i64) (param $rhs i64) (param $offset i32)
    (i64.store (i32.add (local.get $offset) (call $system::core::addressFromRef (local.get $lhs))) (local.get $rhs))
  )
  (func $support::test::EmptyMessage.load (param $lhs i64) (param $offset i32) (result i64)
    (i64.load (i32.add (local.get $offset) (call $system::core::addressFromRef (local.get $lhs))))
  )
  (func $support::test::Message.as (param $lhs i64) (result i64)
    (local.get $lhs)
  )
  (func $support::test::Message.as_1 (param $lhs i64) (result i64)
    (local.get $lhs)
  )
  (func $support::test::Message.Message$discriminant (result i64)
    (local $support::test::discriminant_6 i32)
    (block $B1 (result i64)
      (local.set $support::test::discriminant_6 (i32.const 9))
      (call $system::core::u64.<< (call $system::core::u32.as_1 (local.get $support::test::discriminant_6)) (i32.const 32))
    )
  )
  (func $support::test::Message.apply (param $message i64) (result i64)
    (local $support::test::$ref i64)
    (block $B1 (result i64)
      (local.set $support::test::$ref (call $support::test::Message.fromPointer (call $system::memory::calloc (call $system::core::i32.as_3 (i32.const 1)) (i32.const 8))))
      (call $support::test::Message.property$0_1 (local.get $support::test::$ref) (local.get $message))
      (local.get $support::test::$ref)
    )
  )
  (func $support::test::Message.fromPointer (param $ptr i32) (result i64)
    (i64.or (call $support::test::Message.Message$discriminant) (i64.extend_u/i32 (local.get $ptr)))
  )
  (func $support::test::Message.== (param $a i64) (param $b i64) (result i32)
    (i64.eq (local.get $a) (local.get $b))
  )
  (func $support::test::Message.!= (param $a i64) (param $b i64) (result i32)
    (i64.ne (local.get $a) (local.get $b))
  )
  (func $support::test::Message.property_message (param $self i64) (result i64)
    (call $support::test::Message.property$0 (local.get $self))
  )
  (func $support::test::Message.property_message_1 (param $self i64) (param $value i64)
    (call $support::test::Message.property$0_1 (local.get $self) (local.get $value))
  )
  (func $support::test::Message.property$0 (param $self i64) (result i64)
    (call $system::core::bytes.load_1 (local.get $self) (i32.const 0))
  )
  (func $support::test::Message.property$0_1 (param $self i64) (param $value i64)
    (call $system::core::bytes.store_1 (local.get $self) (local.get $value) (i32.const 0))
  )
  (func $support::test::Message.is (param $a i64) (result i32)
    (i64.eq (i64.and (i64.const 0xffffffff00000000) (local.get $a)) (call $support::test::Message.Message$discriminant))
  )
  (func $support::test::Message.store (param $lhs i64) (param $rhs i64) (param $offset i32)
    (i64.store (i32.add (local.get $offset) (call $system::core::addressFromRef (local.get $lhs))) (local.get $rhs))
  )
  (func $support::test::Message.load (param $lhs i64) (param $offset i32) (result i64)
    (i64.load (i32.add (local.get $offset) (call $system::core::addressFromRef (local.get $lhs))))
  )
  (func $support::test::mustEqual (param $given f64) (param $expected f64) (param $message i64)
    (block $B1
      (call $support::test::verify_9 (call $system::core::f64.== (local.get $given) (local.get $expected)) (local.get $message))
      (if $IF2 (call $system::core::f64.!= (local.get $given) (local.get $expected))
          (then
            (block $B3
                (call $support::env::printf_10 (i64.const 0x00000000000002af) (local.get $given))
                (call $support::env::printf_10 (i64.const 0x00000000000002ca) (local.get $expected))
              )
          )
          (else)
        )
    )
  )
  (func $support::test::mustEqual_1 (param $given f32) (param $expected f32) (param $message i64)
    (block $B1
      (call $support::test::verify_9 (call $system::core::f32.== (local.get $given) (local.get $expected)) (local.get $message))
      (if $IF2 (call $system::core::f32.!= (local.get $given) (local.get $expected))
          (then
            (block $B3
                (call $support::env::printf_8 (i64.const 0x00000000000002eb) (local.get $given))
                (call $support::env::printf_8 (i64.const 0x0000000000000306) (local.get $expected))
              )
          )
          (else)
        )
    )
  )
  (func $support::test::mustEqual_2 (param $given i64) (param $expected i64) (param $message i64)
    (block $B1
      (call $support::test::verify_9 (call $system::core::u64.== (local.get $given) (local.get $expected)) (local.get $message))
      (if $IF2 (call $system::core::u64.!= (local.get $given) (local.get $expected))
          (then
            (block $B3
                (call $support::env::printf_6 (i64.const 0x0000000000000327) (call $system::core::u64.as_7 (call $system::core::u64.>> (local.get $given) (i32.const 32))))
                (call $support::env::printf_6 (i64.const 0x000000000000034a) (call $system::core::u64.as_7 (call $system::core::u64.>> (local.get $expected) (i32.const 32))))
                (call $support::env::printf_6 (i64.const 0x0000000000000373) (call $system::core::u64.&_2 (local.get $given) (call $system::core::i32.as_3 (i32.const 4294967295))))
                (call $support::env::printf_6 (i64.const 0x0000000000000396) (call $system::core::u64.&_2 (local.get $expected) (call $system::core::i32.as_3 (i32.const 4294967295))))
              )
          )
          (else)
        )
    )
  )
  (func $support::test::mustEqual_3 (param $given i64) (param $expected i64) (param $message i64)
    (block $B1
      (call $support::test::verify_9 (call $system::core::i64.== (local.get $given) (local.get $expected)) (local.get $message))
      (if $IF2 (call $system::core::i64.!= (local.get $given) (local.get $expected))
          (then
            (block $B3
                (call $support::env::printf_6 (i64.const 0x00000000000003bf) (call $system::core::u64.as_7 (call $system::core::u64.>> (call $system::core::i64.as_2 (local.get $given)) (i32.const 32))))
                (call $support::env::printf_6 (i64.const 0x00000000000003e2) (call $system::core::u64.as_7 (call $system::core::u64.>> (call $system::core::i64.as_2 (local.get $expected)) (i32.const 32))))
                (call $support::env::printf_6 (i64.const 0x000000000000040b) (call $system::core::i64.&_2 (local.get $given) (call $system::core::i32.as_3 (i32.const 4294967295))))
                (call $support::env::printf_6 (i64.const 0x000000000000042e) (call $system::core::i64.&_2 (local.get $expected) (call $system::core::i32.as_3 (i32.const 4294967295))))
              )
          )
          (else)
        )
    )
  )
  (func $support::test::mustEqual_4 (param $given i32) (param $expected i32) (param $message i64)
    (block $B1
      (call $support::test::verify_9 (call $system::core::u32.== (local.get $given) (local.get $expected)) (local.get $message))
      (if $IF2 (call $system::core::u32.!= (local.get $given) (local.get $expected))
          (then
            (block $B3
                (call $support::env::printf_6 (i64.const 0x0000000000000457) (local.get $given))
                (call $support::env::printf_6 (i64.const 0x0000000000000472) (local.get $expected))
              )
          )
          (else)
        )
    )
  )
  (func $support::test::mustEqual_5 (param $given i32) (param $expected i32) (param $message i64)
    (block $B1
      (call $support::test::verify_9 (call $system::core::i32.== (local.get $given) (local.get $expected)) (local.get $message))
      (if $IF2 (call $system::core::i32.!= (local.get $given) (local.get $expected))
          (then
            (block $B3
                (call $support::env::printf_4 (i64.const 0x0000000000000493) (local.get $given))
                (call $support::env::printf_4 (i64.const 0x00000000000004ae) (local.get $expected))
              )
          )
          (else)
        )
    )
  )
  (func $support::test::mustEqual_6 (param $given i32) (param $expected i32) (param $message i64)
    (block $B1
      (call $support::test::verify_9 (call $system::core::boolean.== (local.get $given) (local.get $expected)) (local.get $message))
    )
  )
  (func $support::test::mustEqual_7 (param $given i64) (param $expected i64) (param $message i64)
    (block $B1
      (call $support::test::verify_9 (call $system::core::bytes.== (local.get $given) (local.get $expected)) (local.get $message))
    )
  )
  (func $support::test::getLastErrorMessage (result i32)
    (local $var$0 i64)
    (block $B1 (result i32)
      (block $B2 (result i32)
          (local.set $var$0 (global.get $support::test::lastErrorMessage))
          (block $B2_0
              (block $B2_1
                  (br_if $B2_0 (call $support::test::Message.is (local.get $var$0)))
                )
              (call $system::core::i32.as_3 (i32.const 0))
              (br $B2)
            )
          (call $system::core::u32.- (call $system::core::bytes.property_ptr (call $support::test::Message.property_message (local.get $var$0))) (call $system::core::i32.as_3 (i32.const 4)))
          (br $B2)
        )
    )
  )
  (func $support::test::printString_1 (param $str i64)
    (call $support::test::printString (call $system::core::u32.- (call $system::core::bytes.property_ptr (local.get $str)) (call $system::core::i32.as_3 (i32.const 4))))
  )
  (func $support::test::START_1 (param $title i64)
    (call $support::test::START (call $system::core::u32.- (call $system::core::bytes.property_ptr (local.get $title)) (call $system::core::i32.as_3 (i32.const 4))))
  )
  (func $support::test::verify_9 (param $passed i32) (param $title i64)
    (call $support::test::verify_8 (local.get $passed) (call $system::core::u32.- (call $system::core::bytes.property_ptr (local.get $title)) (call $system::core::i32.as_3 (i32.const 4))))
  )
  (func $support::test::assert (param $condition i32)
    (call $support::test::assert_2 (local.get $condition) (i64.const 0x00000000000004cf))
  )
  (func $support::test::assert_2 (param $condition i32) (param $message i64)
    (block $B1
      (call $support::test::verify_9 (local.get $condition) (local.get $message))
      (if $IF2 (call $system::core::boolean.== (local.get $condition) (i32.const 0))
          (then
            (block $B3
                (global.set $support::test::lastErrorMessage (call $support::test::Message.apply (local.get $message)))
                (call $system::core::panic)
              )
          )
          (else)
        )
    )
  )
  (data 0 (i32.const 645) "\08\00\00\00t\00r\00u\00e\00\00")
  (data 0 (i32.const 658) "\0a\00\00\00f\00a\00l\00s\00e\00\00")
  (data 0 (i32.const 673) "\02\00\00\000\00\00")
  (data 0 (i32.const 680) "\02\00\00\000\00\00")
  (func $system::string::String.String$discriminant (result i64)
    (local $system::string::discriminant i32)
    (block $B1 (result i64)
      (local.set $system::string::discriminant (i32.const 10))
      (call $system::core::u64.<< (call $system::core::u32.as_1 (local.get $system::string::discriminant)) (i32.const 32))
    )
  )
  (func $system::string::String.apply (param $data i64) (result i64)
    (local $system::string::$ref i64)
    (block $B1 (result i64)
      (local.set $system::string::$ref (call $system::string::String.fromPointer (call $system::memory::calloc (call $system::core::i32.as_3 (i32.const 1)) (i32.const 8))))
      (call $system::string::String.property$0_1 (local.get $system::string::$ref) (local.get $data))
      (local.get $system::string::$ref)
    )
  )
  (func $system::string::String.fromPointer (param $ptr i32) (result i64)
    (i64.or (call $system::string::String.String$discriminant) (i64.extend_u/i32 (local.get $ptr)))
  )
  (func $system::string::String.== (param $a i64) (param $b i64) (result i32)
    (i64.eq (local.get $a) (local.get $b))
  )
  (func $system::string::String.!= (param $a i64) (param $b i64) (result i32)
    (i64.ne (local.get $a) (local.get $b))
  )
  (func $system::string::String.property_data (param $self i64) (result i64)
    (call $system::string::String.property$0 (local.get $self))
  )
  (func $system::string::String.property_data_1 (param $self i64) (param $value i64)
    (call $system::string::String.property$0_1 (local.get $self) (local.get $value))
  )
  (func $system::string::String.property$0 (param $self i64) (result i64)
    (call $system::core::bytes.load_1 (local.get $self) (i32.const 0))
  )
  (func $system::string::String.property$0_1 (param $self i64) (param $value i64)
    (call $system::core::bytes.store_1 (local.get $self) (local.get $value) (i32.const 0))
  )
  (func $system::string::String.is (param $a i64) (result i32)
    (i64.eq (i64.and (i64.const 0xffffffff00000000) (local.get $a)) (call $system::string::String.String$discriminant))
  )
  (func $system::string::String.store (param $lhs i64) (param $rhs i64) (param $offset i32)
    (i64.store (i32.add (local.get $offset) (call $system::core::addressFromRef (local.get $lhs))) (local.get $rhs))
  )
  (func $system::string::String.load (param $lhs i64) (param $offset i32) (result i64)
    (i64.load (i32.add (local.get $offset) (call $system::core::addressFromRef (local.get $lhs))))
  )
  (func $system::string::String.as (param $lhs i64) (result i64)
    (local.get $lhs)
  )
  (func $system::string::String.property_length (param $str i64) (result i32)
    (call $system::core::u32./ (call $system::core::bytes.property_length (call $system::string::String.property_data (local.get $str))) (call $system::core::i32.as_3 (i32.const 2)))
  )
  (func $system::string::String.+ (param $lhs i64) (param $rhs i64) (result i64)
    (call $system::string::String.apply (call $system::string::concatBytes_1 (call $system::string::String.property_data (local.get $lhs)) (call $system::string::String.property_data (local.get $rhs))))
  )
  (func $system::string::String.charAt (param $str i64) (param $at i32) (result i32)
    (block $B1 (result i32)
      (if $IF2 (call $system::core::u32.> (local.get $at) (call $system::string::String.property_length (local.get $str)))
          (then
            (block $B3
                (call $system::core::panic)
              )
          )
          (else)
        )
      (call $system::core::u16.load_1 (call $system::core::u32.as_7 (call $system::core::bytes.property_ptr (call $system::string::String.property_data (local.get $str)))) (call $system::core::u32.* (local.get $at) (call $system::core::i32.as_3 (i32.const 2))))
    )
  )
  (func $system::string::String.charAt_1 (param $str i64) (param $at i32) (result i32)
    (block $B1 (result i32)
      (if $IF2 (call $system::core::u32.> (local.get $at) (call $system::core::u32./ (call $system::core::bytes.property_length (local.get $str)) (call $system::core::i32.as_3 (i32.const 2))))
          (then
            (block $B3
                (call $system::core::panic)
              )
          )
          (else)
        )
      (call $system::core::u16.load_1 (call $system::core::u32.as_7 (call $system::core::bytes.property_ptr (local.get $str))) (call $system::core::u32.* (local.get $at) (call $system::core::i32.as_3 (i32.const 2))))
    )
  )
  (func $system::string::String.charLength (param $value i64) (result i32)
    (local $system::string::len i32)
    (local $system::string::i64_10 i64)
    (local $system::string::current i64)
    (block $B1 (result i32)
      (if $IF2 (result i32) (call $system::core::i64.== (local.get $value) (call $system::core::i32.as (i32.const 0)))
          (then
            (block $B3 (result i32)
                (call $system::core::i32.as_3 (i32.const 1))
              )
          )
          (else
            (block $B4 (result i32)
                (local.set $system::string::len (i32.const 0))
                (local.set $system::string::i64_10 (call $system::core::i32.as (i32.const 10)))
                (local.set $system::string::current (local.get $value))
                (if $IF5 (call $system::core::i64.< (local.get $value) (call $system::core::i32.as (i32.const 0)))
                    (then
                      (block $B6
                          (local.set $system::string::len (call $system::core::i32.+ (local.get $system::string::len) (i32.const 1)))
                          (local.set $system::string::current (call $system::core::i64.- (local.get $system::string::current)))
                        )
                    )
                    (else)
                  )
                (block $Break7
                    (loop $Loop7
                        (block $B8
                            (local.set $system::string::current (call $system::core::i64./ (local.get $system::string::current) (local.get $system::string::i64_10)))
                            (local.set $system::string::len (call $system::core::i32.+ (local.get $system::string::len) (i32.const 1)))
                            (if $IF9 (call $system::core::i64.> (local.get $system::string::current) (call $system::core::i32.as (i32.const 0)))
                                (then
                                  (block $B10
                                      (br $Loop7)
                                    )
                                )
                                (else
                                  (block $B11
                                      (br $Break7)
                                    )
                                )
                              )
                          )
                      )
                  )
                (call $system::core::i32.as_3 (local.get $system::string::len))
              )
          )
        )
    )
  )
  (func $system::string::String.charLength_1 (param $value i64) (result i32)
    (local $system::string::len_6 i32)
    (local $system::string::u64_10 i64)
    (local $system::string::current_6 i64)
    (block $B1 (result i32)
      (if $IF2 (result i32) (call $system::core::u64.== (local.get $value) (call $system::core::i32.as_4 (i32.const 0)))
          (then
            (block $B3 (result i32)
                (call $system::core::i32.as_3 (i32.const 1))
              )
          )
          (else
            (block $B4 (result i32)
                (local.set $system::string::len_6 (i32.const 0))
                (local.set $system::string::u64_10 (call $system::core::i32.as_4 (i32.const 10)))
                (local.set $system::string::current_6 (local.get $value))
                (block $Break5
                    (loop $Loop5
                        (block $B6
                            (local.set $system::string::current_6 (call $system::core::u64./ (local.get $system::string::current_6) (local.get $system::string::u64_10)))
                            (local.set $system::string::len_6 (call $system::core::i32.+ (local.get $system::string::len_6) (i32.const 1)))
                            (if $IF7 (call $system::core::u64.> (local.get $system::string::current_6) (call $system::core::i32.as_4 (i32.const 0)))
                                (then
                                  (block $B8
                                      (br $Loop5)
                                    )
                                )
                                (else
                                  (block $B9
                                      (br $Break5)
                                    )
                                )
                              )
                          )
                      )
                  )
                (call $system::core::i32.as_3 (local.get $system::string::len_6))
              )
          )
        )
    )
  )
  (func $system::string::String.printToBytes (param $dst i64) (param $value i64) (param $endChar i32)
    (local $system::string::ZERO_CHAR i32)
    (local $system::string::num i64)
    (local $system::string::offset i32)
    (local $system::string::u64_10_2 i64)
    (local $system::string::t i64)
    (local $system::string::r i32)
    (block $B1
      (local.set $system::string::ZERO_CHAR (call $system::core::i32.as_8 (i32.const 48)))
      (local.set $system::string::num (local.get $value))
      (local.set $system::string::offset (call $system::core::u32.as_4 (local.get $endChar)))
      (local.set $system::string::u64_10_2 (call $system::core::i32.as_4 (i32.const 10)))
      (block $Break2
          (loop $Loop2
              (block $B3
                  (local.set $system::string::t (call $system::core::u64./ (local.get $system::string::num) (local.get $system::string::u64_10_2)))
                  (local.set $system::string::r (call $system::core::u64.as_3 (call $system::core::u64.% (local.get $system::string::num) (local.get $system::string::u64_10_2))))
                  (local.set $system::string::num (local.get $system::string::t))
                  (local.set $system::string::offset (call $system::core::i32.- (local.get $system::string::offset) (i32.const 1)))
                  (call $system::core::bytes.set (local.get $dst) (call $system::core::i32.as_3 (call $system::core::i32.<< (local.get $system::string::offset) (i32.const 1))) (call $system::core::u16.+ (local.get $system::string::ZERO_CHAR) (local.get $system::string::r)))
                  (if $IF4 (call $system::core::u64.== (local.get $system::string::num) (call $system::core::i32.as_4 (i32.const 0)))
                      (then
                        (block $B5
                            (br $Break2)
                          )
                      )
                      (else
                        (block $B6
                            (br $Loop2)
                          )
                      )
                    )
                )
            )
        )
    )
  )
  (func $system::string::String.stringify (param $value i32) (result i64)
    (block $B1 (result i64)
      (if $IF2 (result i64) (local.get $value)
          (then
            (block $B3 (result i64)
                (i64.const 0x0000000000000285)
              )
          )
          (else
            (block $B4 (result i64)
                (i64.const 0x0000000000000292)
              )
          )
        )
    )
  )
  (func $system::string::String.stringify_1 (param $value i32) (result i64)
    (block $B1 (result i64)
      (call $system::string::String.stringify_7 (call $system::core::u8.as_5 (local.get $value)))
    )
  )
  (func $system::string::String.stringify_2 (param $value i32) (result i64)
    (block $B1 (result i64)
      (call $system::string::String.stringify_7 (call $system::core::u16.as_3 (local.get $value)))
    )
  )
  (func $system::string::String.stringify_3 (param $value i32) (result i64)
    (block $B1 (result i64)
      (call $system::string::String.stringify_6 (call $system::core::i16.as_1 (local.get $value)))
    )
  )
  (func $system::string::String.stringify_4 (param $value i32) (result i64)
    (block $B1 (result i64)
      (call $system::string::String.stringify_6 (call $system::core::i32.as (local.get $value)))
    )
  )
  (func $system::string::String.stringify_5 (param $value i32) (result i64)
    (block $B1 (result i64)
      (call $system::string::String.stringify_7 (call $system::core::u32.as_1 (local.get $value)))
    )
  )
  (func $system::string::String.stringify_6 (param $value i64) (result i64)
    (local $system::string::len_10 i32)
    (local $system::string::ret i64)
    (block $B1 (result i64)
      (if $IF2 (result i64) (call $system::core::i64.==_1 (local.get $value) (i32.const 0))
          (then
            (block $B3 (result i64)
                (i64.const 0x00000000000002a1)
              )
          )
          (else
            (block $B4 (result i64)
                (local.set $system::string::len_10 (call $system::string::String.charLength (local.get $value)))
                (local.set $system::string::ret (call $system::memory::allocBytes (call $system::core::u32.<< (local.get $system::string::len_10) (i32.const 1))))
                (if $IF5 (call $system::core::i64.> (local.get $value) (call $system::core::i32.as (i32.const 0)))
                    (then
                      (call $system::string::String.printToBytes (local.get $system::string::ret) (call $system::core::i64.as_2 (local.get $value)) (local.get $system::string::len_10))
                    )
                    (else
                      (call $system::string::String.printToBytes (local.get $system::string::ret) (call $system::core::i64.as_2 (call $system::core::i64.- (local.get $value))) (local.get $system::string::len_10))
                    )
                  )
                (if $IF6 (call $system::core::i64.< (local.get $value) (call $system::core::i32.as (i32.const 0)))
                    (then
                      (block $B7
                          (call $system::core::u16.store_1 (call $system::core::u32.as_7 (call $system::core::bytes.property_ptr (local.get $system::string::ret))) (call $system::core::i32.as_8 (i32.const 45)) (call $system::core::i32.as_3 (i32.const 0)))
                        )
                    )
                    (else)
                  )
                (local.get $system::string::ret)
              )
          )
        )
    )
  )
  (func $system::string::String.stringify_7 (param $value i64) (result i64)
    (local $system::string::len_14 i32)
    (local $system::string::ret_5 i64)
    (block $B1 (result i64)
      (if $IF2 (result i64) (call $system::core::u64.== (local.get $value) (call $system::core::i32.as_4 (i32.const 0)))
          (then
            (block $B3 (result i64)
                (i64.const 0x00000000000002a8)
              )
          )
          (else
            (block $B4 (result i64)
                (local.set $system::string::len_14 (call $system::string::String.charLength_1 (local.get $value)))
                (local.set $system::string::ret_5 (call $system::memory::allocBytes (call $system::core::u32.<< (local.get $system::string::len_14) (i32.const 1))))
                (call $system::string::String.printToBytes (local.get $system::string::ret_5) (local.get $value) (local.get $system::string::len_14))
                (local.get $system::string::ret_5)
              )
          )
        )
    )
  )
  (func $system::string::concatBytes_1 (param $lhs i64) (param $rhs i64) (result i64)
    (local $system::string::lhsLen i32)
    (local $system::string::rhsLen i32)
    (local $system::string::$ret i64)
    (block $B1 (result i64)
      (local.set $system::string::lhsLen (call $system::core::bytes.property_length (local.get $lhs)))
      (local.set $system::string::rhsLen (call $system::core::bytes.property_length (local.get $rhs)))
      (local.set $system::string::$ret (call $system::memory::allocBytes (call $system::core::u32.+ (local.get $system::string::lhsLen) (local.get $system::string::rhsLen))))
      (drop (call $system::memory::memcpy (call $system::core::bytes.property_ptr (local.get $rhs)) (call $system::memory::memcpy (call $system::core::bytes.property_ptr (local.get $lhs)) (call $system::core::bytes.property_ptr (local.get $system::string::$ret)) (local.get $system::string::lhsLen)) (local.get $system::string::rhsLen)))
      (local.get $system::string::$ret)
    )
  )
  (func $system::core::addressFromRef (param $pointer i64) (result i32)
    (i32.wrap_i64 (get_local $pointer))
  )
  (func $system::core::panic
    (unreachable)
  )
  (func $system::core::u8.as (param $lhs i32) (result i32)
    (get_local $lhs)
  )
  (func $system::core::u8.as_1 (param $lhs i32) (result i32)
    (get_local $lhs)
  )
  (func $system::core::u8.as_2 (param $lhs i32) (result i32)
    (get_local $lhs)
  )
  (func $system::core::u8.as_3 (param $lhs i32) (result i32)
    (get_local $lhs)
  )
  (func $system::core::u8.as_4 (param $lhs i32) (result i64)
    (i64.extend_i32_u (get_local $lhs))
  )
  (func $system::core::u8.as_5 (param $lhs i32) (result i64)
    (i64.extend_i32_s (get_local $lhs))
  )
  (func $system::core::u8.as_6 (param $lhs i32) (result f32)
    (f32.convert_i32_u (get_local $lhs))
  )
  (func $system::core::u8.as_7 (param $lhs i32) (result f64)
    (f64.convert_i32_u (get_local $lhs))
  )
  (func $system::core::u8.== (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u8.==_1 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u8.==_2 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u8.!= (param $lhs i32) (param $rhs i32) (result i32)
    (i32.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u8.!=_1 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u8.!=_2 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u8.store (param $lhs i64) (param $rhs i32)
    (i32.store8 (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::u8.store_1 (param $lhs i64) (param $rhs i32) (param $offset i32)
    (i32.store8 (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::u8.load (param $lhs i64) (result i32)
    (i32.load8_u (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::u8.load_1 (param $lhs i64) (param $offset i32) (result i32)
    (i32.load8_u (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::i16.as (param $lhs i32) (result i32)
    (get_local $lhs)
  )
  (func $system::core::i16.as_1 (param $lhs i32) (result i64)
    (i64.extend_i32_s (get_local $lhs))
  )
  (func $system::core::i16.as_2 (param $lhs i32) (result f32)
    (f32.convert_i32_s (get_local $lhs))
  )
  (func $system::core::i16.as_3 (param $lhs i32) (result f64)
    (f64.convert_i32_s (get_local $lhs))
  )
  (func $system::core::i16.as_4 (param $lhs i32) (result i32)
    (i32.and (i32.const 0xFF) (get_local $lhs))
  )
  (func $system::core::i16.as_5 (param $lhs i32) (result i32)
    (get_local $lhs)
  )
  (func $system::core::i16.== (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i16.==_1 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i16.!= (param $lhs i32) (param $rhs i32) (result i32)
    (i32.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i16.!=_1 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i16.& (param $lhs i32) (param $rhs i32) (result i32)
    (i32.and (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i16.| (param $lhs i32) (param $rhs i32) (result i32)
    (i32.or (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i16.^ (param $lhs i32) (param $rhs i32) (result i32)
    (i32.xor (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i16.^_1 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.xor (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i16.+ (param $lhs i32) (param $rhs i32) (result i32)
    (i32.shr_s (i32.shl (i32.add (get_local $lhs) (get_local $rhs)) (i32.const 16)) (i32.const 16))
  )
  (func $system::core::i16.- (param $lhs i32) (param $rhs i32) (result i32)
    (i32.shr_s (i32.shl (i32.sub (get_local $lhs) (get_local $rhs)) (i32.const 16)) (i32.const 16))
  )
  (func $system::core::i16.-_1 (param $rhs i32) (result i32)
    (i32.shr_s (i32.shl (i32.sub (i32.const 0) (get_local $rhs)) (i32.const 16)) (i32.const 16))
  )
  (func $system::core::i16.* (param $lhs i32) (param $rhs i32) (result i32)
    (i32.shr_s (i32.shl (i32.mul (get_local $lhs) (get_local $rhs)) (i32.const 16)) (i32.const 16))
  )
  (func $system::core::i16./ (param $lhs i32) (param $rhs i32) (result i32)
    (i32.div_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i16.~ (param $rhs i32) (result i32)
    (i32.xor (i32.const 0xFFFFFFFF) (get_local $rhs))
  )
  (func $system::core::i16.>> (param $lhs i32) (param $rhs i32) (result i32)
    (i32.shr_s (get_local $lhs) (i32.and (get_local $rhs) (i32.const 15)))
  )
  (func $system::core::i16.<< (param $lhs i32) (param $rhs i32) (result i32)
    (i32.shr_s (i32.shl (i32.shl (get_local $lhs) (i32.and (get_local $rhs) (i32.const 15))) (i32.const 16)) (i32.const 16))
  )
  (func $system::core::i16.>= (param $lhs i32) (param $rhs i32) (result i32)
    (i32.ge_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i16.<= (param $lhs i32) (param $rhs i32) (result i32)
    (i32.le_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i16.> (param $lhs i32) (param $rhs i32) (result i32)
    (i32.gt_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i16.< (param $lhs i32) (param $rhs i32) (result i32)
    (i32.lt_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i16.% (param $lhs i32) (param $rhs i32) (result i32)
    (i32.rem_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i16.store (param $lhs i64) (param $rhs i32)
    (i32.store16 (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::i16.store_1 (param $lhs i64) (param $rhs i32) (param $offset i32)
    (i32.store16 (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::i16.load (param $lhs i64) (result i32)
    (i32.load16_s (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::i16.load_1 (param $lhs i64) (param $offset i32) (result i32)
    (i32.load16_s (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::u16.as (param $lhs i32) (result i32)
    (get_local $lhs)
  )
  (func $system::core::u16.as_1 (param $lhs i32) (result i32)
    (get_local $lhs)
  )
  (func $system::core::u16.as_2 (param $lhs i32) (result i64)
    (i64.extend_i32_u (get_local $lhs))
  )
  (func $system::core::u16.as_3 (param $lhs i32) (result i64)
    (i64.extend_i32_u (get_local $lhs))
  )
  (func $system::core::u16.as_4 (param $lhs i32) (result f32)
    (f32.convert_i32_u (get_local $lhs))
  )
  (func $system::core::u16.as_5 (param $lhs i32) (result f64)
    (f64.convert_i32_u (get_local $lhs))
  )
  (func $system::core::u16.as_6 (param $lhs i32) (result i32)
    (i32.and (i32.const 0xFF) (get_local $lhs))
  )
  (func $system::core::u16.== (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u16.==_1 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u16.==_2 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u16.!= (param $lhs i32) (param $rhs i32) (result i32)
    (i32.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u16.!=_1 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u16.!=_2 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u16.& (param $lhs i32) (param $rhs i32) (result i32)
    (i32.and (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u16.| (param $lhs i32) (param $rhs i32) (result i32)
    (i32.or (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u16.^ (param $lhs i32) (param $rhs i32) (result i32)
    (i32.xor (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u16.^_1 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.xor (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u16.+ (param $lhs i32) (param $rhs i32) (result i32)
    (i32.and (i32.const 0xFFFF) (i32.add (get_local $lhs) (get_local $rhs)))
  )
  (func $system::core::u16.- (param $lhs i32) (param $rhs i32) (result i32)
    (i32.and (i32.const 0xFFFF) (i32.sub (get_local $lhs) (get_local $rhs)))
  )
  (func $system::core::u16.* (param $lhs i32) (param $rhs i32) (result i32)
    (i32.and (i32.const 0xFFFF) (i32.mul (get_local $lhs) (get_local $rhs)))
  )
  (func $system::core::u16./ (param $lhs i32) (param $rhs i32) (result i32)
    (i32.div_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u16.~ (param $rhs i32) (result i32)
    (i32.xor (i32.const 0xFFFF) (get_local $rhs))
  )
  (func $system::core::u16.>> (param $lhs i32) (param $rhs i32) (result i32)
    (i32.and (i32.const 0xFFFF) (i32.shr_u (get_local $lhs) (i32.and (get_local $rhs) (i32.const 15))))
  )
  (func $system::core::u16.<< (param $lhs i32) (param $rhs i32) (result i32)
    (i32.and (i32.const 0xFFFF) (i32.shl (get_local $lhs) (i32.and (get_local $rhs) (i32.const 15))))
  )
  (func $system::core::u16.>= (param $lhs i32) (param $rhs i32) (result i32)
    (i32.ge_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u16.<= (param $lhs i32) (param $rhs i32) (result i32)
    (i32.le_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u16.> (param $lhs i32) (param $rhs i32) (result i32)
    (i32.gt_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u16.< (param $lhs i32) (param $rhs i32) (result i32)
    (i32.lt_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u16.% (param $lhs i32) (param $rhs i32) (result i32)
    (i32.rem_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u16.store (param $lhs i64) (param $rhs i32)
    (i32.store16 (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::u16.store_1 (param $lhs i64) (param $rhs i32) (param $offset i32)
    (i32.store16 (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::u16.load (param $lhs i64) (result i32)
    (i32.load16_u (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::u16.load_1 (param $lhs i64) (param $offset i32) (result i32)
    (i32.load16_u (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::i32.as (param $lhs i32) (result i64)
    (i64.extend_i32_s (get_local $lhs))
  )
  (func $system::core::i32.as_1 (param $lhs i32) (result f32)
    (f32.convert_i32_s (get_local $lhs))
  )
  (func $system::core::i32.as_2 (param $lhs i32) (result f64)
    (f64.convert_i32_s (get_local $lhs))
  )
  (func $system::core::i32.as_3 (param $lhs i32) (result i32)
    (get_local $lhs)
  )
  (func $system::core::i32.as_4 (param $lhs i32) (result i64)
    (i64.extend_i32_s (get_local $lhs))
  )
  (func $system::core::i32.as_5 (param $lhs i32) (result f32)
    (f32.convert_i32_s (get_local $lhs))
  )
  (func $system::core::i32.as_6 (param $lhs i32) (result i64)
    (i64.extend_i32_s (get_local $lhs))
  )
  (func $system::core::i32.as_7 (param $lhs i32) (result i32)
    (i32.and (i32.const 0xFF) (get_local $lhs))
  )
  (func $system::core::i32.as_8 (param $lhs i32) (result i32)
    (i32.and (i32.const 0xFFFF) (get_local $lhs))
  )
  (func $system::core::i32.as_9 (param $lhs i32) (result i32)
    (i32.shr_s (i32.shl (get_local $lhs) (i32.const 16)) (i32.const 16))
  )
  (func $system::core::i32.== (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.==_1 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.==_2 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.!= (param $lhs i32) (param $rhs i32) (result i32)
    (i32.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.!=_1 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.& (param $lhs i32) (param $rhs i32) (result i32)
    (i32.and (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.| (param $lhs i32) (param $rhs i32) (result i32)
    (i32.or (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.^ (param $lhs i32) (param $rhs i32) (result i32)
    (i32.xor (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.+ (param $lhs i32) (param $rhs i32) (result i32)
    (i32.add (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.- (param $lhs i32) (param $rhs i32) (result i32)
    (i32.sub (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.-_1 (param $rhs i32) (result i32)
    (i32.sub (i32.const 0) (get_local $rhs))
  )
  (func $system::core::i32.* (param $lhs i32) (param $rhs i32) (result i32)
    (i32.mul (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32./ (param $lhs i32) (param $rhs i32) (result i32)
    (i32.div_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.~ (param $rhs i32) (result i32)
    (i32.xor (i32.const 0xFFFFFFFF) (get_local $rhs))
  )
  (func $system::core::i32.>>> (param $lhs i32) (param $rhs i32) (result i32)
    (i32.shr_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.>> (param $lhs i32) (param $rhs i32) (result i32)
    (i32.shr_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.<< (param $lhs i32) (param $rhs i32) (result i32)
    (i32.shl (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.>= (param $lhs i32) (param $rhs i32) (result i32)
    (i32.ge_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.<= (param $lhs i32) (param $rhs i32) (result i32)
    (i32.le_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.> (param $lhs i32) (param $rhs i32) (result i32)
    (i32.gt_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.< (param $lhs i32) (param $rhs i32) (result i32)
    (i32.lt_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.% (param $lhs i32) (param $rhs i32) (result i32)
    (i32.rem_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i32.store (param $lhs i64) (param $rhs i32)
    (i32.store (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::i32.store_1 (param $lhs i64) (param $rhs i32) (param $offset i32)
    (i32.store (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::i32.load (param $lhs i64) (result i32)
    (i32.load (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::i32.load_1 (param $lhs i64) (param $offset i32) (result i32)
    (i32.load (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::u32.as (param $lhs i32) (result i64)
    (i64.extend_i32_u (get_local $lhs))
  )
  (func $system::core::u32.as_1 (param $lhs i32) (result i64)
    (i64.extend_i32_u (get_local $lhs))
  )
  (func $system::core::u32.as_2 (param $lhs i32) (result f32)
    (f32.convert_i32_u (get_local $lhs))
  )
  (func $system::core::u32.as_3 (param $lhs i32) (result f64)
    (f64.convert_i32_u (get_local $lhs))
  )
  (func $system::core::u32.as_4 (param $lhs i32) (result i32)
    (get_local $lhs)
  )
  (func $system::core::u32.as_5 (param $lhs i32) (result i32)
    (i32.shr_s (i32.shl (get_local $lhs) (i32.const 16)) (i32.const 16))
  )
  (func $system::core::u32.as_6 (param $lhs i32) (result i32)
    (i32.and (i32.const 0xFF) (get_local $lhs))
  )
  (func $system::core::u32.as_7 (param $lhs i32) (result i64)
    (i64.extend_i32_s (get_local $lhs))
  )
  (func $system::core::u32.== (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.==_1 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.==_2 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.!= (param $lhs i32) (param $rhs i32) (result i32)
    (i32.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.& (param $lhs i32) (param $rhs i32) (result i32)
    (i32.and (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.| (param $lhs i32) (param $rhs i32) (result i32)
    (i32.or (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.^ (param $lhs i32) (param $rhs i32) (result i32)
    (i32.xor (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.^_1 (param $lhs i32) (param $rhs i32) (result i32)
    (i32.xor (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.+ (param $lhs i32) (param $rhs i32) (result i32)
    (i32.add (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.- (param $lhs i32) (param $rhs i32) (result i32)
    (i32.sub (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.* (param $lhs i32) (param $rhs i32) (result i32)
    (i32.mul (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32./ (param $lhs i32) (param $rhs i32) (result i32)
    (i32.div_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.~ (param $rhs i32) (result i32)
    (i32.xor (i32.const 0xFFFFFFFF) (get_local $rhs))
  )
  (func $system::core::u32.>>> (param $lhs i32) (param $rhs i32) (result i32)
    (i32.shr_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.>> (param $lhs i32) (param $rhs i32) (result i32)
    (i32.shr_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.<< (param $lhs i32) (param $rhs i32) (result i32)
    (i32.shl (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.>= (param $lhs i32) (param $rhs i32) (result i32)
    (i32.ge_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.<= (param $lhs i32) (param $rhs i32) (result i32)
    (i32.le_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.> (param $lhs i32) (param $rhs i32) (result i32)
    (i32.gt_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.< (param $lhs i32) (param $rhs i32) (result i32)
    (i32.lt_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.% (param $lhs i32) (param $rhs i32) (result i32)
    (i32.rem_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u32.store (param $lhs i64) (param $rhs i32)
    (i32.store (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::u32.store_1 (param $lhs i64) (param $rhs i32) (param $offset i32)
    (i32.store (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::u32.load (param $lhs i64) (result i32)
    (i32.load (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::u32.load_1 (param $lhs i64) (param $offset i32) (result i32)
    (i32.load (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::i64.as (param $lhs i64) (result f32)
    (f32.convert_i64_s (get_local $lhs))
  )
  (func $system::core::i64.as_1 (param $lhs i64) (result f64)
    (f64.convert_i64_s (get_local $lhs))
  )
  (func $system::core::i64.as_2 (param $lhs i64) (result i64)
    (get_local $lhs)
  )
  (func $system::core::i64.as_3 (param $lhs i64) (result i32)
    (i32.wrap_i64 (get_local $lhs))
  )
  (func $system::core::i64.as_4 (param $lhs i64) (result i32)
    (i32.wrap_i64 (get_local $lhs))
  )
  (func $system::core::i64.== (param $lhs i64) (param $rhs i64) (result i32)
    (i64.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.==_1 (param $lhs i64) (param $rhs i32) (result i32)
    (i64.eq (get_local $lhs) (i64.extend_i32_s (get_local $rhs)))
  )
  (func $system::core::i64.==_2 (param $lhs i64) (param $rhs i32) (result i32)
    (i64.eq (get_local $lhs) (i64.extend_i32_u (get_local $rhs)))
  )
  (func $system::core::i64.!= (param $lhs i64) (param $rhs i64) (result i32)
    (i64.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.+ (param $lhs i64) (param $rhs i64) (result i64)
    (i64.add (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.- (param $lhs i64) (result i64)
    (i64.mul (get_local $lhs) (i64.const -1))
  )
  (func $system::core::i64.-_1 (param $lhs i64) (param $rhs i64) (result i64)
    (i64.sub (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.* (param $lhs i64) (param $rhs i64) (result i64)
    (i64.mul (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64./ (param $lhs i64) (param $rhs i64) (result i64)
    (i64.div_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.~ (param $rhs i64) (result i64)
    (i64.xor (i64.const 0xFFFFFFFFFFFFFFFF) (get_local $rhs))
  )
  (func $system::core::i64.>>> (param $lhs i64) (param $rhs i32) (result i64)
    (call $system::core::i64.>>>_1 (local.get $lhs) (call $system::core::i32.as (local.get $rhs)))
  )
  (func $system::core::i64.>>>_1 (param $lhs i64) (param $rhs i64) (result i64)
    (i64.shr_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.>> (param $lhs i64) (param $rhs i32) (result i64)
    (call $system::core::i64.>>_1 (local.get $lhs) (call $system::core::i32.as (local.get $rhs)))
  )
  (func $system::core::i64.>>_1 (param $lhs i64) (param $rhs i64) (result i64)
    (i64.shr_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.<< (param $lhs i64) (param $rhs i32) (result i64)
    (call $system::core::i64.<<_1 (local.get $lhs) (call $system::core::i32.as (local.get $rhs)))
  )
  (func $system::core::i64.<<_1 (param $lhs i64) (param $rhs i64) (result i64)
    (i64.shl (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.>= (param $lhs i64) (param $rhs i64) (result i32)
    (i64.ge_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.<= (param $lhs i64) (param $rhs i64) (result i32)
    (i64.le_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.> (param $lhs i64) (param $rhs i64) (result i32)
    (i64.gt_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.< (param $lhs i64) (param $rhs i64) (result i32)
    (i64.lt_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.% (param $lhs i64) (param $rhs i64) (result i64)
    (i64.rem_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.& (param $lhs i64) (param $rhs i64) (result i64)
    (i64.and (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.&_1 (param $lhs i64) (param $rhs i32) (result i32)
    (call $system::core::i32.& (call $system::core::i64.as_3 (local.get $lhs)) (local.get $rhs))
  )
  (func $system::core::i64.&_2 (param $lhs i64) (param $rhs i32) (result i32)
    (call $system::core::u32.& (call $system::core::i64.as_4 (local.get $lhs)) (local.get $rhs))
  )
  (func $system::core::i64.| (param $lhs i64) (param $rhs i64) (result i64)
    (i64.or (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.^ (param $lhs i64) (param $rhs i64) (result i64)
    (i64.xor (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::i64.store (param $lhs i64) (param $rhs i64)
    (i64.store (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::i64.store_1 (param $lhs i64) (param $rhs i64) (param $offset i32)
    (i64.store (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::i64.load (param $lhs i64) (result i64)
    (i64.load (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::i64.load_1 (param $lhs i64) (param $offset i32) (result i64)
    (i64.load (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::u64.as (param $lhs i64) (result f32)
    (f32.convert_i64_u (get_local $lhs))
  )
  (func $system::core::u64.as_1 (param $lhs i64) (result f64)
    (f64.convert_i64_u (get_local $lhs))
  )
  (func $system::core::u64.as_2 (param $lhs i64) (result i32)
    (i32.and (i32.const 0xFF) (i32.wrap_i64 (get_local $lhs)))
  )
  (func $system::core::u64.as_3 (param $lhs i64) (result i32)
    (i32.and (i32.const 0xFFFF) (i32.wrap_i64 (get_local $lhs)))
  )
  (func $system::core::u64.as_4 (param $lhs i64) (result i64)
    (get_local $lhs)
  )
  (func $system::core::u64.as_5 (param $lhs i64) (result f32)
    (f32.convert_i64_u (get_local $lhs))
  )
  (func $system::core::u64.as_6 (param $lhs i64) (result i32)
    (i32.wrap_i64 (get_local $lhs))
  )
  (func $system::core::u64.as_7 (param $lhs i64) (result i32)
    (i32.wrap_i64 (get_local $lhs))
  )
  (func $system::core::u64.== (param $lhs i64) (param $rhs i64) (result i32)
    (i64.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.==_1 (param $lhs i64) (param $rhs i32) (result i32)
    (i64.eq (get_local $lhs) (i64.extend_i32_u (get_local $rhs)))
  )
  (func $system::core::u64.==_2 (param $lhs i64) (param $rhs i32) (result i32)
    (i64.eq (get_local $lhs) (i64.extend_i32_u (get_local $rhs)))
  )
  (func $system::core::u64.==_3 (param $lhs i64) (param $rhs i32) (result i32)
    (i64.eq (get_local $lhs) (i64.extend_i32_u (get_local $rhs)))
  )
  (func $system::core::u64.!= (param $lhs i64) (param $rhs i64) (result i32)
    (i64.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.+ (param $lhs i64) (param $rhs i64) (result i64)
    (i64.add (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.- (param $lhs i64) (param $rhs i64) (result i64)
    (i64.sub (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.* (param $lhs i64) (param $rhs i64) (result i64)
    (i64.mul (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64./ (param $lhs i64) (param $rhs i64) (result i64)
    (i64.div_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.~ (param $rhs i64) (result i64)
    (i64.xor (i64.const 0xFFFFFFFFFFFFFFFF) (get_local $rhs))
  )
  (func $system::core::u64.>>> (param $lhs i64) (param $rhs i32) (result i64)
    (call $system::core::u64.>>>_1 (local.get $lhs) (call $system::core::i32.as (local.get $rhs)))
  )
  (func $system::core::u64.>>>_1 (param $lhs i64) (param $rhs i64) (result i64)
    (i64.shr_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.>> (param $lhs i64) (param $rhs i32) (result i64)
    (call $system::core::u64.>>_1 (local.get $lhs) (call $system::core::i32.as (local.get $rhs)))
  )
  (func $system::core::u64.>>_1 (param $lhs i64) (param $rhs i64) (result i64)
    (i64.shr_s (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.<< (param $lhs i64) (param $rhs i32) (result i64)
    (call $system::core::u64.<<_1 (local.get $lhs) (call $system::core::i32.as (local.get $rhs)))
  )
  (func $system::core::u64.<<_1 (param $lhs i64) (param $rhs i64) (result i64)
    (i64.shl (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.>= (param $lhs i64) (param $rhs i64) (result i32)
    (i64.ge_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.<= (param $lhs i64) (param $rhs i64) (result i32)
    (i64.le_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.> (param $lhs i64) (param $rhs i64) (result i32)
    (i64.gt_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.< (param $lhs i64) (param $rhs i64) (result i32)
    (i64.lt_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.% (param $lhs i64) (param $rhs i64) (result i64)
    (i64.rem_u (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.& (param $lhs i64) (param $rhs i64) (result i64)
    (i64.and (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.&_1 (param $lhs i64) (param $rhs i32) (result i32)
    (call $system::core::i32.& (call $system::core::u64.as_6 (local.get $lhs)) (local.get $rhs))
  )
  (func $system::core::u64.&_2 (param $lhs i64) (param $rhs i32) (result i32)
    (call $system::core::u32.& (call $system::core::u64.as_7 (local.get $lhs)) (local.get $rhs))
  )
  (func $system::core::u64.| (param $lhs i64) (param $rhs i64) (result i64)
    (i64.or (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.^ (param $lhs i64) (param $rhs i64) (result i64)
    (i64.xor (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::u64.store (param $lhs i64) (param $rhs i64)
    (i64.store (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::u64.store_1 (param $lhs i64) (param $rhs i64) (param $offset i32)
    (i64.store (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::u64.load (param $lhs i64) (result i64)
    (i64.load (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::u64.load_1 (param $lhs i64) (param $offset i32) (result i64)
    (i64.load (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::f32.as (param $lhs f32) (result f64)
    (f64.promote/f32 (get_local $lhs))
  )
  (func $system::core::f32.as_1 (param $lhs f32) (result i64)
    (i64.trunc_s/f32 (get_local $lhs))
  )
  (func $system::core::f32.as_2 (param $lhs f32) (result i64)
    (i64.trunc_u/f32 (get_local $lhs))
  )
  (func $system::core::f32.as_3 (param $lhs f32) (result i32)
    (i32.trunc_s/f32 (get_local $lhs))
  )
  (func $system::core::f32.as_4 (param $lhs f32) (result i32)
    (i32.trunc_u/f32 (get_local $lhs))
  )
  (func $system::core::f32.+ (param $lhs f32) (param $rhs f32) (result f32)
    (f32.add (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f32.- (param $lhs f32) (param $rhs f32) (result f32)
    (f32.sub (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f32.-_1 (param $rhs f32) (result f32)
    (f32.neg (get_local $rhs))
  )
  (func $system::core::f32.* (param $lhs f32) (param $rhs f32) (result f32)
    (f32.mul (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f32./ (param $lhs f32) (param $rhs f32) (result f32)
    (f32.div (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f32.== (param $lhs f32) (param $rhs f32) (result i32)
    (f32.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f32.>= (param $lhs f32) (param $rhs f32) (result i32)
    (f32.ge (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f32.<= (param $lhs f32) (param $rhs f32) (result i32)
    (f32.le (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f32.> (param $lhs f32) (param $rhs f32) (result i32)
    (f32.gt (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f32.< (param $lhs f32) (param $rhs f32) (result i32)
    (f32.lt (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f32.!= (param $lhs f32) (param $rhs f32) (result i32)
    (f32.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f32.store (param $lhs i64) (param $rhs f32)
    (f32.store (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::f32.store_1 (param $lhs i64) (param $rhs f32) (param $offset i32)
    (f32.store (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::f32.load (param $lhs i64) (result f32)
    (f32.load (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::f32.load_1 (param $lhs i64) (param $offset i32) (result f32)
    (f32.load (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::f64.as (param $lhs f64) (result f32)
    (f32.demote/f64 (get_local $lhs))
  )
  (func $system::core::f64.as_1 (param $lhs f64) (result i64)
    (i64.trunc_s/f64 (get_local $lhs))
  )
  (func $system::core::f64.as_2 (param $lhs f64) (result i64)
    (i64.trunc_u/f64 (get_local $lhs))
  )
  (func $system::core::f64.as_3 (param $lhs f64) (result i32)
    (i32.trunc_s/f64 (get_local $lhs))
  )
  (func $system::core::f64.as_4 (param $lhs f64) (result i32)
    (i32.trunc_u/f64 (get_local $lhs))
  )
  (func $system::core::f64.+ (param $lhs f64) (param $rhs f64) (result f64)
    (f64.add (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f64.- (param $lhs f64) (param $rhs f64) (result f64)
    (f64.sub (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f64.-_1 (param $rhs f64) (result f64)
    (f64.neg (get_local $rhs))
  )
  (func $system::core::f64.* (param $lhs f64) (param $rhs f64) (result f64)
    (f64.mul (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f64./ (param $lhs f64) (param $rhs f64) (result f64)
    (f64.div (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f64.== (param $lhs f64) (param $rhs f64) (result i32)
    (f64.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f64.>= (param $lhs f64) (param $rhs f64) (result i32)
    (f64.ge (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f64.<= (param $lhs f64) (param $rhs f64) (result i32)
    (f64.le (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f64.> (param $lhs f64) (param $rhs f64) (result i32)
    (f64.gt (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f64.< (param $lhs f64) (param $rhs f64) (result i32)
    (f64.lt (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f64.!= (param $lhs f64) (param $rhs f64) (result i32)
    (f64.ne (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::f64.store (param $lhs i64) (param $rhs f64)
    (f64.store (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::f64.store_1 (param $lhs i64) (param $rhs f64) (param $offset i32)
    (f64.store (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::f64.load (param $lhs i64) (result f64)
    (f64.load (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::f64.load_1 (param $lhs i64) (param $offset i32) (result f64)
    (f64.load (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::never.apply
    (unreachable)
  )
  (func $system::core::boolean.&& (param $lhs i32) (param $rhs i32) (result i32)
    (i32.and (i32.ne (get_local $lhs) (i32.const 0)) (i32.ne (get_local $rhs) (i32.const 0)))
  )
  (func $system::core::boolean.== (param $lhs i32) (param $rhs i32) (result i32)
    (i32.eq (i32.eqz (get_local $lhs)) (i32.eqz (get_local $rhs)))
  )
  (func $system::core::boolean.|| (param $lhs i32) (param $rhs i32) (result i32)
    (i32.or (i32.ne (get_local $lhs) (i32.const 0)) (i32.ne (get_local $rhs) (i32.const 0)))
  )
  (func $system::core::boolean.! (param $rhs i32) (result i32)
    (if $IF1 (result i32) (local.get $rhs)
      (then
        (i32.const 0)
      )
      (else
        (i32.const 1)
      )
    )
  )
  (func $system::core::boolean.store (param $lhs i64) (param $rhs i32)
    (i32.store8 (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::boolean.store_1 (param $lhs i64) (param $rhs i32) (param $offset i32)
    (i32.store8 (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::boolean.load (param $lhs i64) (result i32)
    (i32.load8_u (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::boolean.load_1 (param $lhs i64) (param $offset i32) (result i32)
    (i32.load8_u (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::ref.is (param $lhs i64) (result i32)
    (i32.const 1)
  )
  (func $system::core::ref.== (param $lhs i64) (param $rhs i64) (result i32)
    (i64.eq (get_local $lhs) (get_local $rhs))
  )
  (func $system::core::ref.!= (param $lhs i64) (param $rhs i64) (result i32)
    (call $system::core::boolean.! (call $system::core::ref.== (local.get $lhs) (local.get $rhs)))
  )
  (func $system::core::ref.store (param $lhs i64) (param $rhs i64)
    (i64.store (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::ref.store_1 (param $lhs i64) (param $rhs i64) (param $offset i32)
    (i64.store (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::ref.load (param $lhs i64) (result i64)
    (i64.load (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::ref.load_1 (param $lhs i64) (param $offset i32) (result i64)
    (i64.load (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::bytes.toAddr (param $str i64) (result i32)
    (call $system::core::addressFromRef (get_local $str))
  )
  (func $system::core::bytes.as (param $lhs i64) (result i64)
    (get_local $lhs)
  )
  (func $system::core::bytes.property_length (param $str i64) (result i32)
    (call $system::core::u32.load (call $system::core::bytes.as (local.get $str)))
  )
  (func $system::core::bytes.property_ptr (param $str i64) (result i32)
    (block $B1 (result i32)
      (call $system::core::u32.+ (call $system::core::bytes.toAddr (local.get $str)) (call $system::core::i32.as_3 (i32.const 4)))
    )
  )
  (func $system::core::bytes.get (param $data i64) (param $at i32) (result i32)
    (block $B1 (result i32)
      (if $IF2 (call $system::core::u32.> (local.get $at) (call $system::core::bytes.property_length (local.get $data)))
          (then
            (block $B3
                (call $system::core::panic)
              )
          )
          (else)
        )
      (call $system::core::u8.load_1 (call $system::core::u32.as_7 (call $system::core::bytes.property_ptr (local.get $data))) (local.get $at))
    )
  )
  (func $system::core::bytes.set (param $data i64) (param $at i32) (param $value i32)
    (block $B1
      (if $IF2 (call $system::core::u32.> (call $system::core::u32.+ (local.get $at) (call $system::core::i32.as_3 (i32.const 1))) (call $system::core::bytes.property_length (local.get $data)))
          (then
            (block $B3
                (call $system::core::panic)
              )
          )
          (else)
        )
      (call $system::core::u16.store_1 (call $system::core::u32.as_7 (call $system::core::bytes.property_ptr (local.get $data))) (local.get $value) (local.get $at))
    )
  )
  (func $system::core::bytes.set_1 (param $data i64) (param $at i32) (param $value i32)
    (block $B1
      (if $IF2 (call $system::core::u32.> (local.get $at) (call $system::core::bytes.property_length (local.get $data)))
          (then
            (block $B3
                (call $system::core::panic)
              )
          )
          (else)
        )
      (call $system::core::u8.store_1 (call $system::core::u32.as_7 (call $system::core::bytes.property_ptr (local.get $data))) (local.get $value) (local.get $at))
    )
  )
  (func $system::core::bytes.store (param $lhs i64) (param $rhs i64)
    (i64.store (call $system::core::addressFromRef (get_local $lhs)) (get_local $rhs))
  )
  (func $system::core::bytes.store_1 (param $lhs i64) (param $rhs i64) (param $offset i32)
    (i64.store (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))) (get_local $rhs))
  )
  (func $system::core::bytes.load (param $lhs i64) (result i64)
    (i64.load (call $system::core::addressFromRef (get_local $lhs)))
  )
  (func $system::core::bytes.load_1 (param $lhs i64) (param $offset i32) (result i64)
    (i64.load (i32.add (get_local $offset) (call $system::core::addressFromRef (get_local $lhs))))
  )
  (func $system::core::bytes.!= (param $lhs i64) (param $rhs i64) (result i32)
    (call $system::core::boolean.! (call $system::core::bytes.== (local.get $lhs) (local.get $rhs)))
  )
  (func $system::core::bytes.== (param $lhs i64) (param $rhs i64) (result i32)
    (local $system::core::len i32)
    (local $system::core::equals i32)
    (block $B1 (result i32)
      (if $IF2 (result i32) (call $system::core::u32.== (call $system::core::bytes.property_length (local.get $lhs)) (call $system::core::bytes.property_length (local.get $rhs)))
          (then
            (block $B3 (result i32)
                (if $IF4 (result i32) (call $system::core::u32.== (call $system::core::bytes.property_ptr (local.get $lhs)) (call $system::core::bytes.property_ptr (local.get $rhs)))
                    (then
                      (block $B5 (result i32)
                          (i32.const 1)
                        )
                    )
                    (else
                      (block $B6 (result i32)
                          (local.set $system::core::len (call $system::core::bytes.property_length (local.get $lhs)))
                          (local.set $system::core::equals (i32.const 1))
                          (block $Break7
                              (loop $Loop7
                                  (block $B8
                                      (local.set $system::core::len (call $system::core::u32.- (local.get $system::core::len) (call $system::core::i32.as_3 (i32.const 1))))
                                      (if $IF9 (call $system::core::u8.!=_2 (call $system::core::bytes.get (local.get $lhs) (local.get $system::core::len)) (call $system::core::bytes.get (local.get $rhs) (local.get $system::core::len)))
                                          (then
                                            (block $B10
                                                (local.set $system::core::equals (i32.const 0))
                                                (br $Break7)
                                              )
                                          )
                                          (else)
                                        )
                                      (if $IF11 (call $system::core::u32.> (local.get $system::core::len) (call $system::core::i32.as_3 (i32.const 0)))
                                          (then
                                            (br $Loop7)
                                          )
                                          (else)
                                        )
                                    )
                                )
                            )
                          (local.get $system::core::equals)
                        )
                    )
                  )
              )
          )
          (else
            (block $B12 (result i32)
                (i32.const 0)
              )
          )
        )
    )
  )
  (data 0 (i32.const 16) "\1c\00\00\00 \00 \00 \00 \00n\00u\00m\00b\00e\00r\00:\00 \00%\00d\00\00")
  (data 0 (i32.const 49) "\1c\00\00\00 \00 \00 \00 \00 \00g\00i\00v\00e\00n\00:\00 \00%\00d\00\00")
  (data 0 (i32.const 82) "\1c\00\00\00 \00 \00e\00x\00p\00e\00c\00t\00e\00d\00:\00 \00%\00d\00\00")
  (data 0 (i32.const 115) "$\00\00\00a\00s\00s\00e\00r\00t\00N\00u\00m\00b\00e\00r\00L\00e\00n\00g\00t\00h\00\00")
  (data 0 (i32.const 156) "\10\00\00\00G\00i\00v\00e\00n\00:\00 \00'\00\00")
  (data 0 (i32.const 177) "\1a\00\00\00'\00 \00E\00x\00p\00e\00c\00t\00e\00d\00:\00 \00'\00\00")
  (data 0 (i32.const 208) "\02\00\00\00'\00\00")
  (data 0 (i32.const 215) "\0c\00\00\00g\00i\00v\00e\00n\00:\00\00")
  (data 0 (i32.const 232) "\12\00\00\00e\00x\00p\00e\00c\00t\00e\00d\00:\00\00")
  (data 0 (i32.const 255) "4\00\00\00s\00t\00r\00i\00n\00g\00i\00f\00y\00c\00a\00t\00i\00o\00n\00 \00o\00f\00 \00n\00u\00m\00b\00e\00r\00s\00\00")
  (data 0 (i32.const 312) "(\00\00\00t\00e\00s\00t\00 \00s\00t\00r\00i\00n\00g\00 \00e\00q\00u\00a\00l\00i\00t\00y\00\00")
  (data 0 (i32.const 357) "\08\00\00\00a\00b\00c\00d\00\00")
  (data 0 (i32.const 370) "\08\00\00\00a\00b\00c\00d\00\00")
  (data 0 (i32.const 383) "8\00\00\00g\00e\00t\00 \00n\00u\00m\00b\00e\00r\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00s\00 \00l\00e\00n\00g\00t\00h\00\00")
  (data 0 (i32.const 444) "(\00\00\00n\00u\00m\00b\00e\00r\00 \00s\00e\00r\00i\00a\00l\00i\00z\00a\00t\00i\00o\00n\00\00")
  (data 0 (i32.const 489) "\02\00\00\001\00\00")
  (data 0 (i32.const 496) "\04\00\00\00-\001\00\00")
  (data 0 (i32.const 505) "\0e\00\00\002\002\002\002\002\002\002\00\00")
  (data 0 (i32.const 524) "\0e\00\00\003\003\003\003\003\003\003\00\00")
  (data 0 (i32.const 543) "\0e\00\00\00-\004\004\004\004\004\004\00\00")
  (data 0 (i32.const 562) "\12\00\00\001\002\003\004\005\006\007\008\009\00\00")
  (data 0 (i32.const 585) "\0c\00\00\001\000\000\000\000\000\00\00")
  (data 0 (i32.const 602) "\08\00\00\002\000\000\000\00\00")
  (data 0 (i32.const 615) "\0c\00\00\003\000\000\000\000\000\00\00")
  (data 0 (i32.const 632) "\08\00\00\004\000\000\000\00\00")
  (export "main" (func $test/fixtures/execution/stringifyNumbers.lys::main))
  (func $test/fixtures/execution/stringifyNumbers.lys::assertNumber (param $numberToSerialize i64) (param $expected i64)
    (call $test/fixtures/execution/stringifyNumbers.lys::assertEquals_2 (call $system::string::String.stringify_7 (local.get $numberToSerialize)) (local.get $expected))
  )
  (func $test/fixtures/execution/stringifyNumbers.lys::assertNumber_1 (param $numberToSerialize i64) (param $expected i64)
    (call $test/fixtures/execution/stringifyNumbers.lys::assertEquals_2 (call $system::string::String.stringify_6 (local.get $numberToSerialize)) (local.get $expected))
  )
  (func $test/fixtures/execution/stringifyNumbers.lys::assertNumber_2 (param $numberToSerialize i32) (param $expected i64)
    (call $test/fixtures/execution/stringifyNumbers.lys::assertNumber_1 (call $system::core::i32.as (local.get $numberToSerialize)) (local.get $expected))
  )
  (func $test/fixtures/execution/stringifyNumbers.lys::assertNumber_4 (param $numberToSerialize i32) (param $expected i64)
    (call $test/fixtures/execution/stringifyNumbers.lys::assertNumber (call $system::core::u32.as_1 (local.get $numberToSerialize)) (local.get $expected))
  )
  (func $test/fixtures/execution/stringifyNumbers.lys::assertNumberLength (param $numberToSerialize i64) (param $expected i32)
    (local $test/fixtures/execution/stringifyNumbers.lys::size i32)
    (local $test/fixtures/execution/stringifyNumbers.lys::result i32)
    (block $B1
      (local.set $test/fixtures/execution/stringifyNumbers.lys::size (call $system::string::String.charLength (local.get $numberToSerialize)))
      (local.set $test/fixtures/execution/stringifyNumbers.lys::result (call $system::core::i32.== (call $system::core::u32.as_4 (local.get $test/fixtures/execution/stringifyNumbers.lys::size)) (local.get $expected)))
      (if $IF2 (call $system::core::boolean.! (local.get $test/fixtures/execution/stringifyNumbers.lys::result))
          (then
            (block $B3
                (call $support::env::printf_4 (i64.const 0x0000000000000010) (call $system::core::i64.as_3 (local.get $numberToSerialize)))
                (call $support::env::printf_4 (i64.const 0x0000000000000031) (call $system::core::u32.as_4 (local.get $test/fixtures/execution/stringifyNumbers.lys::size)))
                (call $support::env::printf_4 (i64.const 0x0000000000000052) (local.get $expected))
              )
          )
          (else)
        )
      (call $support::test::verify_9 (local.get $test/fixtures/execution/stringifyNumbers.lys::result) (i64.const 0x0000000000000073))
    )
  )
  (func $test/fixtures/execution/stringifyNumbers.lys::assertEquals_2 (param $given i64) (param $expected i64)
    (local $test/fixtures/execution/stringifyNumbers.lys::msg i64)
    (local $test/fixtures/execution/stringifyNumbers.lys::result_3 i32)
    (block $B1
      (local.set $test/fixtures/execution/stringifyNumbers.lys::msg (call $system::string::concatBytes_1 (call $system::string::concatBytes_1 (call $system::string::concatBytes_1 (call $system::string::concatBytes_1 (i64.const 0x000000000000009c) (local.get $given)) (i64.const 0x00000000000000b1)) (local.get $expected)) (i64.const 0x00000000000000d0)))
      (local.set $test/fixtures/execution/stringifyNumbers.lys::result_3 (call $system::core::bytes.== (local.get $given) (local.get $expected)))
      (if $IF2 (call $system::core::boolean.! (local.get $test/fixtures/execution/stringifyNumbers.lys::result_3))
          (then
            (block $B3
                (call $support::env::printf_12 (i64.const 0x00000000000000d7))
                (call $support::env::printf_12 (local.get $given))
                (call $support::env::printf_12 (i64.const 0x00000000000000e8))
                (call $support::env::printf_12 (local.get $expected))
              )
          )
          (else)
        )
      (call $support::test::verify_9 (local.get $test/fixtures/execution/stringifyNumbers.lys::result_3) (local.get $test/fixtures/execution/stringifyNumbers.lys::msg))
    )
  )
  (func $test/fixtures/execution/stringifyNumbers.lys::main
    (block $B1
      (call $support::test::START_1 (i64.const 0x00000000000000ff))
      (block $B2
          (call $support::test::START_1 (i64.const 0x0000000000000138))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertEquals_2 (i64.const 0x0000000000000165) (i64.const 0x0000000000000172))
          (call $support::test::END)
        )
      (block $B3
          (call $support::test::START_1 (i64.const 0x000000000000017f))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumberLength (call $system::core::i32.as (i32.const 2)) (i32.const 1))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumberLength (call $system::core::i32.as (i32.const 4444)) (i32.const 4))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumberLength (call $system::core::i32.as (call $system::core::i32.-_1 (i32.const 2))) (i32.const 2))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumberLength (call $system::core::i32.as (call $system::core::i32.-_1 (i32.const 33))) (i32.const 3))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumberLength (call $system::core::i32.as (call $system::core::i32.-_1 (i32.const 1))) (i32.const 2))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumberLength (call $system::core::i32.as (i32.const 0)) (i32.const 1))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumberLength (call $system::core::i32.as (i32.const 2222222)) (i32.const 7))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumberLength (call $system::core::i32.as (i32.const 3333333)) (i32.const 7))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumberLength (call $system::core::i32.as (call $system::core::i32.-_1 (i32.const 444444))) (i32.const 7))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumberLength (call $system::core::u32.as (call $system::core::i32.as_3 (i32.const 123456789))) (i32.const 9))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumberLength (call $system::core::f32.as_1 (f32.const 100000)) (i32.const 6))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumberLength (call $system::core::f32.as_1 (f32.const 2000)) (i32.const 4))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumberLength (call $system::core::f32.as_1 (f32.const 300000)) (i32.const 6))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumberLength (call $system::core::f32.as_1 (f32.const 4000)) (i32.const 4))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumberLength (call $system::core::f32.as_1 (call $system::core::f32.-_1 (f32.const 4000))) (i32.const 5))
          (call $support::test::END)
        )
      (block $B4
          (call $support::test::START_1 (i64.const 0x00000000000001bc))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumber_2 (i32.const 1) (i64.const 0x00000000000001e9))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumber_2 (call $system::core::i32.-_1 (i32.const 1)) (i64.const 0x00000000000001f0))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumber (call $system::core::i32.as_4 (i32.const 2222222)) (i64.const 0x00000000000001f9))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumber_2 (i32.const 3333333) (i64.const 0x000000000000020c))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumber_2 (call $system::core::i32.-_1 (i32.const 444444)) (i64.const 0x000000000000021f))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumber_4 (call $system::core::i32.as_3 (i32.const 123456789)) (i64.const 0x0000000000000232))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumber_4 (call $system::core::f32.as_4 (f32.const 100000)) (i64.const 0x0000000000000249))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumber_4 (call $system::core::f32.as_4 (f32.const 2000)) (i64.const 0x000000000000025a))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumber_2 (call $system::core::f32.as_3 (f32.const 300000)) (i64.const 0x0000000000000267))
          (call $test/fixtures/execution/stringifyNumbers.lys::assertNumber_2 (call $system::core::f32.as_3 (f32.const 4000)) (i64.const 0x0000000000000278))
          (call $support::test::END)
        )
      (call $support::test::END)
    )
  )
  (func $%%START%%
    (global.set $system::memory::AL_BITS (i32.const 3))
    (global.set $system::memory::AL_SIZE (call $system::core::u32.<< (call $system::core::i32.as_3 (i32.const 1)) (global.get $system::memory::AL_BITS)))
    (global.set $system::memory::AL_MASK (call $system::core::u32.- (global.get $system::memory::AL_SIZE) (call $system::core::i32.as_3 (i32.const 1))))
    (global.set $system::memory::MAX_SIZE_32 (call $system::core::i32.as_3 (call $system::core::i32.<< (i32.const 1) (i32.const 30))))
    (global.set $system::memory::HEAP_BASE (call $system::core::i32.as_3 (call $system::core::i32.* (i32.const 64) (i32.const 1024))))
    (global.set $system::memory::startOffset (call $system::core::u32.& (call $system::core::u32.+ (global.get $system::memory::HEAP_BASE) (global.get $system::memory::AL_MASK)) (call $system::core::u32.~ (global.get $system::memory::AL_MASK))))
    (global.set $system::memory::offset (global.get $system::memory::startOffset))
    (global.set $support::test::lastErrorMessage (call $support::test::EmptyMessage.apply))
  )
  (start $%%START%%)
)
