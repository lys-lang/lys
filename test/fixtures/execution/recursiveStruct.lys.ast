
|-DocumentNode
  |-ImportDirectiveNode
    |-QNameNode=system::core::string
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="string"
  |-ImportDirectiveNode
    |-QNameNode=system::core::bytes
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="bytes"
  |-ImportDirectiveNode
    |-QNameNode=system::core::f64
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="f64"
  |-ImportDirectiveNode
    |-QNameNode=system::core::f32
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="f32"
  |-ImportDirectiveNode
    |-QNameNode=system::core::i64
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="i64"
  |-ImportDirectiveNode
    |-QNameNode=system::core::i32
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="i32"
  |-ImportDirectiveNode
    |-QNameNode=system::core::i16
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="i16"
  |-ImportDirectiveNode
    |-QNameNode=system::core::u64
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="u64"
  |-ImportDirectiveNode
    |-QNameNode=system::core::u32
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="u32"
  |-ImportDirectiveNode
    |-QNameNode=system::core::u16
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="u16"
  |-ImportDirectiveNode
    |-QNameNode=system::core::u8
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="u8"
  |-ImportDirectiveNode
    |-QNameNode=system::core::boolean
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="boolean"
  |-ImportDirectiveNode
    |-QNameNode=system::core::native
      |-NameIdentifierNode="system"
      |-NameIdentifierNode="core"
      |-NameIdentifierNode="native"
  |-ImportDirectiveNode
    |-QNameNode=support::test
      |-NameIdentifierNode="support"
      |-NameIdentifierNode="test"
  |-TypeDirectiveNode
    |-NameIdentifierNode="Tree" type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
    |-UnionTypeNode type=(union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
      |-ReferenceNode resolvedReference=Empty type=(type (alias Empty (struct)))
        |-QNameNode=Empty
          |-NameIdentifierNode="Empty"
      |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
        |-QNameNode=Node
          |-NameIdentifierNode="Node"
  |-ImplDirective
    |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
      |-QNameNode=Tree
        |-NameIdentifierNode="Tree"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="is" type=(intersection (fun "is" ((union (alias Tree) (alias ref))) (alias boolean)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="is" type=(fun "is" ((union (alias Tree) (alias ref))) (alias boolean))
          |-ParameterNode annotations=Local(a:<no-type>#0)
            |-NameIdentifierNode="a" type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias ref (ref ?)))
            |-UnionTypeNode type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias ref (ref ?)))
              |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Tree
                  |-NameIdentifierNode="Tree"
              |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-ReferenceNode resolvedReference=system::core::boolean::boolean type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-BlockNode type=(alias boolean (native boolean)) annotations=IsValueNode
            |-BinaryExpressionNode=(fun "||" ((alias boolean) (alias boolean)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
              |-IsExpressionNode=(fun "is" ((union (alias Empty) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-ReferenceNode resolvedReference=a type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias ref (ref ?))) annotations=IsValueNode,Local(a:<no-type>#0)
                  |-QNameNode=a
                    |-NameIdentifierNode="a"
                |-ReferenceNode resolvedReference=Empty type=(type (alias Empty (struct)))
                  |-QNameNode=Empty
                    |-NameIdentifierNode="Empty"
              |-NameIdentifierNode="||"
              |-IsExpressionNode=(fun "is" ((union (alias Node) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-ReferenceNode resolvedReference=a type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias ref (ref ?))) annotations=IsValueNode,Local(a:<no-type>#0)
                  |-QNameNode=a
                    |-NameIdentifierNode="a"
                |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
                  |-QNameNode=Node
                    |-NameIdentifierNode="Node"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((alias Tree)) (alias ref)))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="as" type=(fun "as" ((alias Tree)) (alias ref)) annotations=Explicit
          |-ParameterNode annotations=Local(a:<no-type>#0)
            |-NameIdentifierNode="a" type=(alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree) (alias Forest)))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree) (alias Forest)))))))))))
            |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-QNameNode=Tree
                |-NameIdentifierNode="Tree"
          |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="==" type=(intersection (fun "==" ((alias ref) (alias ref)) (alias boolean)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="==" type=(fun "==" ((alias ref) (alias ref)) (alias boolean))
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:<no-type>#1)
            |-NameIdentifierNode="rhs" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode resolvedReference=system::core::boolean::boolean type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-BinaryExpressionNode=(fun "==" ((alias ref) (alias ref)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode resolvedReference=lhs type=(alias ref (ref ?)) annotations=IsValueNode,Local(lhs:<no-type>#0)
              |-QNameNode=lhs
                |-NameIdentifierNode="lhs"
            |-NameIdentifierNode="=="
            |-ReferenceNode resolvedReference=rhs type=(alias ref (ref ?)) annotations=IsValueNode,Local(rhs:<no-type>#1)
              |-QNameNode=rhs
                |-NameIdentifierNode="rhs"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="!=" type=(intersection (fun "!=" ((alias ref) (alias ref)) (alias boolean)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="!=" type=(fun "!=" ((alias ref) (alias ref)) (alias boolean))
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:<no-type>#1)
            |-NameIdentifierNode="rhs" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode resolvedReference=system::core::boolean::boolean type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-BinaryExpressionNode=(fun "!=" ((alias ref) (alias ref)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode resolvedReference=lhs type=(alias ref (ref ?)) annotations=IsValueNode,Local(lhs:<no-type>#0)
              |-QNameNode=lhs
                |-NameIdentifierNode="lhs"
            |-NameIdentifierNode="!="
            |-ReferenceNode resolvedReference=rhs type=(alias ref (ref ?)) annotations=IsValueNode,Local(rhs:<no-type>#1)
              |-QNameNode=rhs
                |-NameIdentifierNode="rhs"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="store" type=(intersection (fun "store" ((alias ref) (alias Tree) (alias u32)) (alias void)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Tree) (alias u32)) (alias void))
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:<no-type>#1)
            |-NameIdentifierNode="rhs" type=(alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree) (alias Forest)))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree) (alias Forest)))))))))))
            |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-QNameNode=Tree
                |-NameIdentifierNode="Tree"
          |-ParameterNode annotations=Local(offset:<no-type>#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode resolvedReference=system::core::native::void type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode resolvedReference=system::core::native::addressFromRef type=(intersection (fun "addressFromRef" ((alias ref)) (alias u32)))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="load" type=(intersection (fun "load" ((alias ref) (alias u32)) (alias Tree)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Tree))
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:<no-type>#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-QNameNode=Tree
              |-NameIdentifierNode="Tree"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode resolvedReference=system::core::native::addressFromRef type=(intersection (fun "addressFromRef" ((alias ref)) (alias u32)))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
  |-ImplDirective
    |-ReferenceNode resolvedReference=Empty type=(type (alias Empty (struct)))
      |-QNameNode=Empty
        |-NameIdentifierNode="Empty"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((alias Empty)) (alias Tree)) (fun "as" ((alias Empty)) (alias ref)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="as" type=(fun "as" ((alias Empty)) (alias Tree))
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias Empty (struct))
            |-ReferenceNode resolvedReference=Empty type=(type (alias Empty (struct)))
              |-QNameNode=Empty
                |-NameIdentifierNode="Empty"
          |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-QNameNode=Tree
              |-NameIdentifierNode="Tree"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="as" type=(fun "as" ((alias Empty)) (alias ref)) annotations=Explicit
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias Empty (struct))
            |-ReferenceNode resolvedReference=Empty type=(type (alias Empty (struct)))
              |-QNameNode=Empty
                |-NameIdentifierNode="Empty"
          |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="Empty$discriminant" type=(intersection (fun "Empty$discriminant" () (alias i64)))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="Empty$discriminant" type=(fun "Empty$discriminant" () (alias i64)) annotations=Inline
          |-ReferenceNode resolvedReference=system::core::i64::i64 type=(type (alias i64 (native i64)))
            |-QNameNode=i64
              |-NameIdentifierNode="i64"
          |-BlockNode type=(alias i64 (native i64)) annotations=IsValueNode
            |-VarDeclarationNode annotations=Local(test::fixtures::execution::recursiveStruct::discriminant:u32#0)
              |-NameIdentifierNode="discriminant" type=(alias u32 (native u32))
              |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
              |-MemberNode type=(native u32) annotations=IsValueNode
                |-ReferenceNode resolvedReference=Empty type=(type (alias Empty (struct)))
                  |-QNameNode=Empty
                    |-NameIdentifierNode="Empty"
                |-NameIdentifierNode="discriminant"
            |-BinaryExpressionNode=(fun "<<" ((alias i64) (alias i32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode,IsReturnExpression
              |-AsExpressionNode=(fun "as" ((alias u32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode
                |-ReferenceNode resolvedReference=discriminant type=(alias u32 (native u32)) annotations=IsValueNode,Local(test::fixtures::execution::recursiveStruct::discriminant:u32#0)
                  |-QNameNode=discriminant
                    |-NameIdentifierNode="discriminant"
                |-ReferenceNode resolvedReference=system::core::i64::i64 type=(type (alias i64 (native i64)))
                  |-QNameNode=i64
                    |-NameIdentifierNode="i64"
              |-NameIdentifierNode="<<"
              |-IntegerLiteral=32 type=(alias i32 (native i32)) annotations=IsValueNode
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="apply" type=(intersection (fun "apply" () (alias Empty)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="apply" type=(fun "apply" () (alias Empty))
          |-ReferenceNode resolvedReference=Empty type=(type (alias Empty (struct)))
            |-QNameNode=Empty
              |-NameIdentifierNode="Empty"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-ReferenceNode resolvedReference=Empty$discriminant type=(intersection (fun "Empty$discriminant" () (alias i64)))
                |-QNameNode=Empty$discriminant
                  |-NameIdentifierNode="Empty$discriminant"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="is" type=(intersection (fun "is" ((union (alias Empty) (alias ref))) (alias boolean)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="is" type=(fun "is" ((union (alias Empty) (alias ref))) (alias boolean))
          |-ParameterNode annotations=Local(a:<no-type>#0)
            |-NameIdentifierNode="a" type=(union (alias Empty (struct)) (alias ref (ref ?)))
            |-UnionTypeNode type=(union (alias Empty (struct)) (alias ref (ref ?)))
              |-ReferenceNode resolvedReference=Empty type=(type (alias Empty (struct)))
                |-QNameNode=Empty
                  |-NameIdentifierNode="Empty"
              |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-ReferenceNode resolvedReference=system::core::boolean::boolean type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-HexLiteral=18446744069414584000 type=(alias u64 (native u64))
                |-WasmAtomNode
                  |-QNameNode=$a
                    |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-ReferenceNode resolvedReference=Empty$discriminant type=(intersection (fun "Empty$discriminant" () (alias i64)))
                  |-QNameNode=Empty$discriminant
                    |-NameIdentifierNode="Empty$discriminant"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="==" type=(intersection (fun "==" ((alias Empty) (alias ref)) (alias boolean)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="==" type=(fun "==" ((alias Empty) (alias ref)) (alias boolean))
          |-ParameterNode annotations=Local(a:<no-type>#0)
            |-NameIdentifierNode="a" type=(alias Empty (struct))
            |-ReferenceNode resolvedReference=Empty type=(type (alias Empty (struct)))
              |-QNameNode=Empty
                |-NameIdentifierNode="Empty"
          |-ParameterNode annotations=Local(b:<no-type>#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode resolvedReference=system::core::boolean::boolean type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="!=" type=(intersection (fun "!=" ((alias Empty) (alias ref)) (alias boolean)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="!=" type=(fun "!=" ((alias Empty) (alias ref)) (alias boolean))
          |-ParameterNode annotations=Local(a:<no-type>#0)
            |-NameIdentifierNode="a" type=(alias Empty (struct))
            |-ReferenceNode resolvedReference=Empty type=(type (alias Empty (struct)))
              |-QNameNode=Empty
                |-NameIdentifierNode="Empty"
          |-ParameterNode annotations=Local(b:<no-type>#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode resolvedReference=system::core::boolean::boolean type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="store" type=(intersection (fun "store" ((alias ref) (alias Empty) (alias u32)) (alias void)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Empty) (alias u32)) (alias void))
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:<no-type>#1)
            |-NameIdentifierNode="rhs" type=(alias Empty (struct))
            |-ReferenceNode resolvedReference=Empty type=(type (alias Empty (struct)))
              |-QNameNode=Empty
                |-NameIdentifierNode="Empty"
          |-ParameterNode annotations=Local(offset:<no-type>#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode resolvedReference=system::core::native::void type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode resolvedReference=system::core::native::addressFromRef type=(intersection (fun "addressFromRef" ((alias ref)) (alias u32)))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="load" type=(intersection (fun "load" ((alias ref) (alias u32)) (alias Empty)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Empty))
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:<no-type>#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode resolvedReference=Empty type=(type (alias Empty (struct)))
            |-QNameNode=Empty
              |-NameIdentifierNode="Empty"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode resolvedReference=system::core::native::addressFromRef type=(intersection (fun "addressFromRef" ((alias ref)) (alias u32)))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
  |-ImplDirective
    |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
      |-QNameNode=Node
        |-NameIdentifierNode="Node"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((alias Node)) (alias Tree)) (fun "as" ((alias Node)) (alias UnsafeCPointer)) (fun "as" ((alias Node)) (alias ref)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="as" type=(fun "as" ((alias Node)) (alias Tree))
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Node
                |-NameIdentifierNode="Node"
          |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-QNameNode=Tree
              |-NameIdentifierNode="Tree"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="as" type=(fun "as" ((alias Node)) (alias UnsafeCPointer))
          |-ParameterNode annotations=Local(self:<no-type>#0)
            |-NameIdentifierNode="self" type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Node
                |-NameIdentifierNode="Node"
          |-ReferenceNode resolvedReference=system::core::native::UnsafeCPointer type=(type (alias UnsafeCPointer (native UnsafeCPointer)))
            |-QNameNode=UnsafeCPointer
              |-NameIdentifierNode="UnsafeCPointer"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-ReferenceNode resolvedReference=system::core::native::addressFromRef type=(intersection (fun "addressFromRef" ((alias ref)) (alias u32)))
                |-QNameNode=addressFromRef
                  |-NameIdentifierNode="addressFromRef"
              |-WasmAtomNode
                |-QNameNode=$self
                  |-NameIdentifierNode="$self"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="as" type=(fun "as" ((alias Node)) (alias ref)) annotations=Explicit
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Node
                |-NameIdentifierNode="Node"
          |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="Node$discriminant" type=(intersection (fun "Node$discriminant" () (alias u64)))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="Node$discriminant" type=(fun "Node$discriminant" () (alias u64)) annotations=Inline
          |-ReferenceNode resolvedReference=system::core::u64::u64 type=(type (alias u64 (native u64)))
            |-QNameNode=u64
              |-NameIdentifierNode="u64"
          |-BlockNode type=(alias u64 (native u64)) annotations=IsValueNode
            |-VarDeclarationNode annotations=Local(test::fixtures::execution::recursiveStruct::discriminant_1:u32#0)
              |-NameIdentifierNode="discriminant" type=(alias u32 (native u32))
              |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
              |-MemberNode type=(native u32) annotations=IsValueNode
                |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
                  |-QNameNode=Node
                    |-NameIdentifierNode="Node"
                |-NameIdentifierNode="discriminant"
            |-BinaryExpressionNode=(fun "<<" ((alias u64) (alias i32)) (alias u64)) type=(alias u64 (native u64)) annotations=IsValueNode,IsReturnExpression
              |-AsExpressionNode=(fun "as" ((alias u32)) (alias u64)) type=(alias u64 (native u64)) annotations=IsValueNode
                |-ReferenceNode resolvedReference=discriminant type=(alias u32 (native u32)) annotations=IsValueNode,Local(test::fixtures::execution::recursiveStruct::discriminant_1:u32#0)
                  |-QNameNode=discriminant
                    |-NameIdentifierNode="discriminant"
                |-ReferenceNode resolvedReference=system::core::u64::u64 type=(type (alias u64 (native u64)))
                  |-QNameNode=u64
                    |-NameIdentifierNode="u64"
              |-NameIdentifierNode="<<"
              |-IntegerLiteral=32 type=(alias i32 (native i32)) annotations=IsValueNode
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="apply" type=(intersection (fun "apply" ((union (alias Tree) (alias Forest))) (alias Node)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="apply" type=(fun "apply" ((union (alias Tree) (alias Forest))) (alias Node))
          |-ParameterNode annotations=Local(a:<no-type>#0)
            |-NameIdentifierNode="a" type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-UnionTypeNode type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Tree
                  |-NameIdentifierNode="Tree"
              |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Forest
                  |-NameIdentifierNode="Forest"
          |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
            |-QNameNode=Node
              |-NameIdentifierNode="Node"
          |-BlockNode type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode
            |-VarDeclarationNode annotations=Local(test::fixtures::execution::recursiveStruct::$ref:Node#1)
              |-NameIdentifierNode="$ref" type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=MutableDeclaration
              |-FunctionCallNode=(fun "fromPointer" ((alias u32)) (alias Node)) type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode
                |-ReferenceNode resolvedReference=fromPointer type=(intersection (fun "fromPointer" ((alias u32)) (alias Node)))
                  |-QNameNode=fromPointer
                    |-NameIdentifierNode="fromPointer"
                |-FunctionCallNode=(fun "calloc" ((alias u32) (alias u32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
                  |-ReferenceNode resolvedReference=system::core::memory::calloc type=(intersection (fun "calloc" ((alias u32) (alias u32)) (alias u32)))
                    |-QNameNode=system::core::memory::calloc
                      |-NameIdentifierNode="system"
                      |-NameIdentifierNode="core"
                      |-NameIdentifierNode="memory"
                      |-NameIdentifierNode="calloc"
                  |-AsExpressionNode=(fun "as" ((alias i32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
                    |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
                    |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
                      |-QNameNode=u32
                        |-NameIdentifierNode="u32"
                  |-MemberNode type=(native u32) annotations=IsValueNode
                    |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
                      |-QNameNode=Node
                        |-NameIdentifierNode="Node"
                    |-NameIdentifierNode="allocationSize"
            |-FunctionCallNode=(fun "property$0" ((alias Node) (union (alias Tree) (alias Forest))) (alias void)) type=(alias void (native void))
              |-ReferenceNode resolvedReference=property$0 type=(intersection (fun "property$0" ((alias Node)) (union (alias Tree) (alias Forest))) (fun "property$0" ((alias Node) (union (alias Tree) (alias Forest))) (alias void)))
                |-QNameNode=property$0
                  |-NameIdentifierNode="property$0"
              |-ReferenceNode resolvedReference=$ref type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode,Local(test::fixtures::execution::recursiveStruct::$ref:Node#1)
                |-QNameNode=$ref
                  |-NameIdentifierNode="$ref"
              |-ReferenceNode resolvedReference=a type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct)))))))))) annotations=IsValueNode,Local(a:<no-type>#0)
                |-QNameNode=a
                  |-NameIdentifierNode="a"
            |-ReferenceNode resolvedReference=$ref type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode,IsReturnExpression,Local(test::fixtures::execution::recursiveStruct::$ref:Node#1)
              |-QNameNode=$ref
                |-NameIdentifierNode="$ref"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="fromPointer" type=(intersection (fun "fromPointer" ((alias u32)) (alias Node)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="fromPointer" type=(fun "fromPointer" ((alias u32)) (alias Node))
          |-ParameterNode annotations=Local(ptr:<no-type>#0)
            |-NameIdentifierNode="ptr" type=(alias u32 (native u32))
            |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
            |-QNameNode=Node
              |-NameIdentifierNode="Node"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-ReferenceNode resolvedReference=Node$discriminant type=(intersection (fun "Node$discriminant" () (alias u64)))
                  |-QNameNode=Node$discriminant
                    |-NameIdentifierNode="Node$discriminant"
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$ptr
                    |-NameIdentifierNode="$ptr"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="==" type=(intersection (fun "==" ((alias Node) (alias Node)) (alias boolean)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="==" type=(fun "==" ((alias Node) (alias Node)) (alias boolean))
          |-ParameterNode annotations=Local(a:<no-type>#0)
            |-NameIdentifierNode="a" type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Node
                |-NameIdentifierNode="Node"
          |-ParameterNode annotations=Local(b:<no-type>#1)
            |-NameIdentifierNode="b" type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Node
                |-NameIdentifierNode="Node"
          |-ReferenceNode resolvedReference=system::core::boolean::boolean type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="!=" type=(intersection (fun "!=" ((alias Node) (alias Node)) (alias boolean)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="!=" type=(fun "!=" ((alias Node) (alias Node)) (alias boolean))
          |-ParameterNode annotations=Local(a:<no-type>#0)
            |-NameIdentifierNode="a" type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Node
                |-NameIdentifierNode="Node"
          |-ParameterNode annotations=Local(b:<no-type>#1)
            |-NameIdentifierNode="b" type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Node
                |-NameIdentifierNode="Node"
          |-ReferenceNode resolvedReference=system::core::boolean::boolean type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="property_a" type=(intersection (fun "property_a" ((alias Node)) (union (alias Tree) (alias Forest))) (fun "property_a" ((alias Node) (union (alias Tree) (alias Forest))) (alias void)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="property_a" type=(fun "property_a" ((alias Node)) (union (alias Tree) (alias Forest)))
          |-ParameterNode annotations=Local(self:<no-type>#0)
            |-NameIdentifierNode="self" type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Node
                |-NameIdentifierNode="Node"
          |-UnionTypeNode type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-QNameNode=Tree
                |-NameIdentifierNode="Tree"
            |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-QNameNode=Forest
                |-NameIdentifierNode="Forest"
          |-FunctionCallNode=(fun "property$0" ((alias Node)) (union (alias Tree) (alias Forest))) type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct)))))))))) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode resolvedReference=property$0 type=(intersection (fun "property$0" ((alias Node)) (union (alias Tree) (alias Forest))) (fun "property$0" ((alias Node) (union (alias Tree) (alias Forest))) (alias void)))
              |-QNameNode=property$0
                |-NameIdentifierNode="property$0"
            |-ReferenceNode resolvedReference=self type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode,Local(self:<no-type>#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="property_a" type=(fun "property_a" ((alias Node) (union (alias Tree) (alias Forest))) (alias void))
          |-ParameterNode annotations=Local(self:<no-type>#0)
            |-NameIdentifierNode="self" type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Node
                |-NameIdentifierNode="Node"
          |-ParameterNode annotations=Local(value:<no-type>#1)
            |-NameIdentifierNode="value" type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-UnionTypeNode type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Tree
                  |-NameIdentifierNode="Tree"
              |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Forest
                  |-NameIdentifierNode="Forest"
          |-ReferenceNode resolvedReference=system::core::native::void type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "property$0" ((alias Node) (union (alias Tree) (alias Forest))) (alias void)) type=(alias void (native void))
            |-ReferenceNode resolvedReference=property$0 type=(intersection (fun "property$0" ((alias Node)) (union (alias Tree) (alias Forest))) (fun "property$0" ((alias Node) (union (alias Tree) (alias Forest))) (alias void)))
              |-QNameNode=property$0
                |-NameIdentifierNode="property$0"
            |-ReferenceNode resolvedReference=self type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode,Local(self:<no-type>#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode resolvedReference=value type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct)))))))))) annotations=IsValueNode,Local(value:<no-type>#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="property$0" type=(intersection (fun "property$0" ((alias Node)) (union (alias Tree) (alias Forest))) (fun "property$0" ((alias Node) (union (alias Tree) (alias Forest))) (alias void)))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="property$0" type=(fun "property$0" ((alias Node)) (union (alias Tree) (alias Forest))) annotations=Inline
          |-ParameterNode annotations=Local(self:<no-type>#0)
            |-NameIdentifierNode="self" type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Node
                |-NameIdentifierNode="Node"
          |-UnionTypeNode type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-QNameNode=Tree
                |-NameIdentifierNode="Tree"
            |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-QNameNode=Forest
                |-NameIdentifierNode="Forest"
          |-FunctionCallNode=(fun "loadPropertyWithOffset$0" ((alias Node) (alias u32)) (union (alias Tree) (alias Forest))) type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct)))))))))) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode resolvedReference=loadPropertyWithOffset$0 type=(intersection (fun "loadPropertyWithOffset$0" ((alias Node) (alias u32)) (union (alias Tree) (alias Forest))))
              |-QNameNode=loadPropertyWithOffset$0
                |-NameIdentifierNode="loadPropertyWithOffset$0"
            |-ReferenceNode resolvedReference=self type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode,Local(self:<no-type>#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
                |-QNameNode=Node
                  |-NameIdentifierNode="Node"
              |-NameIdentifierNode="property$0_offset"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="property$0" type=(fun "property$0" ((alias Node) (union (alias Tree) (alias Forest))) (alias void)) annotations=Inline
          |-ParameterNode annotations=Local(self:<no-type>#0)
            |-NameIdentifierNode="self" type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Node
                |-NameIdentifierNode="Node"
          |-ParameterNode annotations=Local(value:<no-type>#1)
            |-NameIdentifierNode="value" type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-UnionTypeNode type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Tree
                  |-NameIdentifierNode="Tree"
              |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Forest
                  |-NameIdentifierNode="Forest"
          |-ReferenceNode resolvedReference=system::core::native::void type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "storePropertyWithOffset$0" ((alias Node) (union (alias Tree) (alias Forest)) (alias u32)) (alias void)) type=(alias void (native void))
            |-ReferenceNode resolvedReference=storePropertyWithOffset$0 type=(intersection (fun "storePropertyWithOffset$0" ((alias Node) (union (alias Tree) (alias Forest)) (alias u32)) (alias void)))
              |-QNameNode=storePropertyWithOffset$0
                |-NameIdentifierNode="storePropertyWithOffset$0"
            |-ReferenceNode resolvedReference=self type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode,Local(self:<no-type>#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode resolvedReference=value type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct)))))))))) annotations=IsValueNode,Local(value:<no-type>#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
                |-QNameNode=Node
                  |-NameIdentifierNode="Node"
              |-NameIdentifierNode="property$0_offset"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="loadPropertyWithOffset$0" type=(intersection (fun "loadPropertyWithOffset$0" ((alias Node) (alias u32)) (union (alias Tree) (alias Forest))))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="loadPropertyWithOffset$0" type=(fun "loadPropertyWithOffset$0" ((alias Node) (alias u32)) (union (alias Tree) (alias Forest))) annotations=Inline
          |-ParameterNode annotations=Local(self:<no-type>#0)
            |-NameIdentifierNode="self" type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Node
                |-NameIdentifierNode="Node"
          |-ParameterNode annotations=Local(offset:<no-type>#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-UnionTypeNode type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-QNameNode=Tree
                |-NameIdentifierNode="Tree"
            |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-QNameNode=Forest
                |-NameIdentifierNode="Forest"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode resolvedReference=system::core::native::addressFromRef type=(intersection (fun "addressFromRef" ((alias ref)) (alias u32)))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$self
                      |-NameIdentifierNode="$self"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="storePropertyWithOffset$0" type=(intersection (fun "storePropertyWithOffset$0" ((alias Node) (union (alias Tree) (alias Forest)) (alias u32)) (alias void)))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="storePropertyWithOffset$0" type=(fun "storePropertyWithOffset$0" ((alias Node) (union (alias Tree) (alias Forest)) (alias u32)) (alias void)) annotations=Inline
          |-ParameterNode annotations=Local(self:<no-type>#0)
            |-NameIdentifierNode="self" type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Node
                |-NameIdentifierNode="Node"
          |-ParameterNode annotations=Local(value:<no-type>#1)
            |-NameIdentifierNode="value" type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-UnionTypeNode type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Tree
                  |-NameIdentifierNode="Tree"
              |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Forest
                  |-NameIdentifierNode="Forest"
          |-ParameterNode annotations=Local(offset:<no-type>#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode resolvedReference=system::core::native::void type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode resolvedReference=system::core::native::addressFromRef type=(intersection (fun "addressFromRef" ((alias ref)) (alias u32)))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$self
                      |-NameIdentifierNode="$self"
              |-WasmAtomNode
                |-QNameNode=$value
                  |-NameIdentifierNode="$value"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="is" type=(intersection (fun "is" ((union (alias Node) (alias ref))) (alias boolean)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="is" type=(fun "is" ((union (alias Node) (alias ref))) (alias boolean))
          |-ParameterNode annotations=Local(a:<no-type>#0)
            |-NameIdentifierNode="a" type=(union (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) (alias ref (ref ?)))
            |-UnionTypeNode type=(union (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) (alias ref (ref ?)))
              |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
                |-QNameNode=Node
                  |-NameIdentifierNode="Node"
              |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-ReferenceNode resolvedReference=system::core::boolean::boolean type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-HexLiteral=18446744069414584000 type=(alias u64 (native u64))
                |-WasmAtomNode
                  |-QNameNode=$a
                    |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-ReferenceNode resolvedReference=Node$discriminant type=(intersection (fun "Node$discriminant" () (alias u64)))
                  |-QNameNode=Node$discriminant
                    |-NameIdentifierNode="Node$discriminant"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="store" type=(intersection (fun "store" ((alias ref) (alias Node) (alias u32)) (alias void)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Node) (alias u32)) (alias void))
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:<no-type>#1)
            |-NameIdentifierNode="rhs" type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Node
                |-NameIdentifierNode="Node"
          |-ParameterNode annotations=Local(offset:<no-type>#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode resolvedReference=system::core::native::void type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode resolvedReference=system::core::native::addressFromRef type=(intersection (fun "addressFromRef" ((alias ref)) (alias u32)))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="load" type=(intersection (fun "load" ((alias ref) (alias u32)) (alias Node)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Node))
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:<no-type>#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
            |-QNameNode=Node
              |-NameIdentifierNode="Node"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode resolvedReference=system::core::native::addressFromRef type=(intersection (fun "addressFromRef" ((alias ref)) (alias u32)))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Empty" type=(type (alias Empty (struct)))
    |-StructTypeNode type=(struct)
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Node" type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
    |-StructTypeNode type=(struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct)))))))))))
      |-ParameterNode
        |-NameIdentifierNode="a" type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
        |-UnionTypeNode type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
          |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-QNameNode=Tree
              |-NameIdentifierNode="Tree"
          |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-QNameNode=Forest
              |-NameIdentifierNode="Forest"
  |-TypeDirectiveNode
    |-NameIdentifierNode="Forest" type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
    |-UnionTypeNode type=(union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
      |-ReferenceNode resolvedReference=Nil type=(type (alias Nil (struct)))
        |-QNameNode=Nil
          |-NameIdentifierNode="Nil"
      |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
        |-QNameNode=Cons
          |-NameIdentifierNode="Cons"
  |-ImplDirective
    |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
      |-QNameNode=Forest
        |-NameIdentifierNode="Forest"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="is" type=(intersection (fun "is" ((union (alias Forest) (alias ref))) (alias boolean)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="is" type=(fun "is" ((union (alias Forest) (alias ref))) (alias boolean))
          |-ParameterNode annotations=Local(a:<no-type>#0)
            |-NameIdentifierNode="a" type=(union (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias ref (ref ?)))
            |-UnionTypeNode type=(union (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias ref (ref ?)))
              |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Forest
                  |-NameIdentifierNode="Forest"
              |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-ReferenceNode resolvedReference=system::core::boolean::boolean type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-BlockNode type=(alias boolean (native boolean)) annotations=IsValueNode
            |-BinaryExpressionNode=(fun "||" ((alias boolean) (alias boolean)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
              |-IsExpressionNode=(fun "is" ((union (alias Nil) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-ReferenceNode resolvedReference=a type=(union (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias ref (ref ?))) annotations=IsValueNode,Local(a:<no-type>#0)
                  |-QNameNode=a
                    |-NameIdentifierNode="a"
                |-ReferenceNode resolvedReference=Nil type=(type (alias Nil (struct)))
                  |-QNameNode=Nil
                    |-NameIdentifierNode="Nil"
              |-NameIdentifierNode="||"
              |-IsExpressionNode=(fun "is" ((union (alias Cons) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
                |-ReferenceNode resolvedReference=a type=(union (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias ref (ref ?))) annotations=IsValueNode,Local(a:<no-type>#0)
                  |-QNameNode=a
                    |-NameIdentifierNode="a"
                |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
                  |-QNameNode=Cons
                    |-NameIdentifierNode="Cons"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((alias Forest)) (alias ref)))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="as" type=(fun "as" ((alias Forest)) (alias ref)) annotations=Explicit
          |-ParameterNode annotations=Local(a:<no-type>#0)
            |-NameIdentifierNode="a" type=(alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree) (alias Forest)))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree) (alias Forest)))))))))))
            |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-QNameNode=Forest
                |-NameIdentifierNode="Forest"
          |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$a
                |-NameIdentifierNode="$a"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="==" type=(intersection (fun "==" ((alias ref) (alias ref)) (alias boolean)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="==" type=(fun "==" ((alias ref) (alias ref)) (alias boolean))
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:<no-type>#1)
            |-NameIdentifierNode="rhs" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode resolvedReference=system::core::boolean::boolean type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-BinaryExpressionNode=(fun "==" ((alias ref) (alias ref)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode resolvedReference=lhs type=(alias ref (ref ?)) annotations=IsValueNode,Local(lhs:<no-type>#0)
              |-QNameNode=lhs
                |-NameIdentifierNode="lhs"
            |-NameIdentifierNode="=="
            |-ReferenceNode resolvedReference=rhs type=(alias ref (ref ?)) annotations=IsValueNode,Local(rhs:<no-type>#1)
              |-QNameNode=rhs
                |-NameIdentifierNode="rhs"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="!=" type=(intersection (fun "!=" ((alias ref) (alias ref)) (alias boolean)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="!=" type=(fun "!=" ((alias ref) (alias ref)) (alias boolean))
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:<no-type>#1)
            |-NameIdentifierNode="rhs" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode resolvedReference=system::core::boolean::boolean type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-BinaryExpressionNode=(fun "!=" ((alias ref) (alias ref)) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode resolvedReference=lhs type=(alias ref (ref ?)) annotations=IsValueNode,Local(lhs:<no-type>#0)
              |-QNameNode=lhs
                |-NameIdentifierNode="lhs"
            |-NameIdentifierNode="!="
            |-ReferenceNode resolvedReference=rhs type=(alias ref (ref ?)) annotations=IsValueNode,Local(rhs:<no-type>#1)
              |-QNameNode=rhs
                |-NameIdentifierNode="rhs"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="store" type=(intersection (fun "store" ((alias ref) (alias Forest) (alias u32)) (alias void)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Forest) (alias u32)) (alias void))
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:<no-type>#1)
            |-NameIdentifierNode="rhs" type=(alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree) (alias Forest)))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree) (alias Forest)))))))))))
            |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-QNameNode=Forest
                |-NameIdentifierNode="Forest"
          |-ParameterNode annotations=Local(offset:<no-type>#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode resolvedReference=system::core::native::void type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode resolvedReference=system::core::native::addressFromRef type=(intersection (fun "addressFromRef" ((alias ref)) (alias u32)))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="load" type=(intersection (fun "load" ((alias ref) (alias u32)) (alias Forest)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Forest))
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:<no-type>#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-QNameNode=Forest
              |-NameIdentifierNode="Forest"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode resolvedReference=system::core::native::addressFromRef type=(intersection (fun "addressFromRef" ((alias ref)) (alias u32)))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
  |-ImplDirective
    |-ReferenceNode resolvedReference=Nil type=(type (alias Nil (struct)))
      |-QNameNode=Nil
        |-NameIdentifierNode="Nil"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((alias Nil)) (alias Forest)) (fun "as" ((alias Nil)) (alias ref)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="as" type=(fun "as" ((alias Nil)) (alias Forest))
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias Nil (struct))
            |-ReferenceNode resolvedReference=Nil type=(type (alias Nil (struct)))
              |-QNameNode=Nil
                |-NameIdentifierNode="Nil"
          |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-QNameNode=Forest
              |-NameIdentifierNode="Forest"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="as" type=(fun "as" ((alias Nil)) (alias ref)) annotations=Explicit
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias Nil (struct))
            |-ReferenceNode resolvedReference=Nil type=(type (alias Nil (struct)))
              |-QNameNode=Nil
                |-NameIdentifierNode="Nil"
          |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="Nil$discriminant" type=(intersection (fun "Nil$discriminant" () (alias i64)))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="Nil$discriminant" type=(fun "Nil$discriminant" () (alias i64)) annotations=Inline
          |-ReferenceNode resolvedReference=system::core::i64::i64 type=(type (alias i64 (native i64)))
            |-QNameNode=i64
              |-NameIdentifierNode="i64"
          |-BlockNode type=(alias i64 (native i64)) annotations=IsValueNode
            |-VarDeclarationNode annotations=Local(test::fixtures::execution::recursiveStruct::discriminant_2:u32#0)
              |-NameIdentifierNode="discriminant" type=(alias u32 (native u32))
              |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
              |-MemberNode type=(native u32) annotations=IsValueNode
                |-ReferenceNode resolvedReference=Nil type=(type (alias Nil (struct)))
                  |-QNameNode=Nil
                    |-NameIdentifierNode="Nil"
                |-NameIdentifierNode="discriminant"
            |-BinaryExpressionNode=(fun "<<" ((alias i64) (alias i32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode,IsReturnExpression
              |-AsExpressionNode=(fun "as" ((alias u32)) (alias i64)) type=(alias i64 (native i64)) annotations=IsValueNode
                |-ReferenceNode resolvedReference=discriminant type=(alias u32 (native u32)) annotations=IsValueNode,Local(test::fixtures::execution::recursiveStruct::discriminant_2:u32#0)
                  |-QNameNode=discriminant
                    |-NameIdentifierNode="discriminant"
                |-ReferenceNode resolvedReference=system::core::i64::i64 type=(type (alias i64 (native i64)))
                  |-QNameNode=i64
                    |-NameIdentifierNode="i64"
              |-NameIdentifierNode="<<"
              |-IntegerLiteral=32 type=(alias i32 (native i32)) annotations=IsValueNode
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="apply" type=(intersection (fun "apply" () (alias Nil)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="apply" type=(fun "apply" () (alias Nil))
          |-ReferenceNode resolvedReference=Nil type=(type (alias Nil (struct)))
            |-QNameNode=Nil
              |-NameIdentifierNode="Nil"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-ReferenceNode resolvedReference=Nil$discriminant type=(intersection (fun "Nil$discriminant" () (alias i64)))
                |-QNameNode=Nil$discriminant
                  |-NameIdentifierNode="Nil$discriminant"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="is" type=(intersection (fun "is" ((union (alias Nil) (alias ref))) (alias boolean)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="is" type=(fun "is" ((union (alias Nil) (alias ref))) (alias boolean))
          |-ParameterNode annotations=Local(a:<no-type>#0)
            |-NameIdentifierNode="a" type=(union (alias Nil (struct)) (alias ref (ref ?)))
            |-UnionTypeNode type=(union (alias Nil (struct)) (alias ref (ref ?)))
              |-ReferenceNode resolvedReference=Nil type=(type (alias Nil (struct)))
                |-QNameNode=Nil
                  |-NameIdentifierNode="Nil"
              |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-ReferenceNode resolvedReference=system::core::boolean::boolean type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-HexLiteral=18446744069414584000 type=(alias u64 (native u64))
                |-WasmAtomNode
                  |-QNameNode=$a
                    |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-ReferenceNode resolvedReference=Nil$discriminant type=(intersection (fun "Nil$discriminant" () (alias i64)))
                  |-QNameNode=Nil$discriminant
                    |-NameIdentifierNode="Nil$discriminant"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="==" type=(intersection (fun "==" ((alias Nil) (alias ref)) (alias boolean)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="==" type=(fun "==" ((alias Nil) (alias ref)) (alias boolean))
          |-ParameterNode annotations=Local(a:<no-type>#0)
            |-NameIdentifierNode="a" type=(alias Nil (struct))
            |-ReferenceNode resolvedReference=Nil type=(type (alias Nil (struct)))
              |-QNameNode=Nil
                |-NameIdentifierNode="Nil"
          |-ParameterNode annotations=Local(b:<no-type>#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode resolvedReference=system::core::boolean::boolean type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="!=" type=(intersection (fun "!=" ((alias Nil) (alias ref)) (alias boolean)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="!=" type=(fun "!=" ((alias Nil) (alias ref)) (alias boolean))
          |-ParameterNode annotations=Local(a:<no-type>#0)
            |-NameIdentifierNode="a" type=(alias Nil (struct))
            |-ReferenceNode resolvedReference=Nil type=(type (alias Nil (struct)))
              |-QNameNode=Nil
                |-NameIdentifierNode="Nil"
          |-ParameterNode annotations=Local(b:<no-type>#1)
            |-NameIdentifierNode="b" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ReferenceNode resolvedReference=system::core::boolean::boolean type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="store" type=(intersection (fun "store" ((alias ref) (alias Nil) (alias u32)) (alias void)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Nil) (alias u32)) (alias void))
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:<no-type>#1)
            |-NameIdentifierNode="rhs" type=(alias Nil (struct))
            |-ReferenceNode resolvedReference=Nil type=(type (alias Nil (struct)))
              |-QNameNode=Nil
                |-NameIdentifierNode="Nil"
          |-ParameterNode annotations=Local(offset:<no-type>#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode resolvedReference=system::core::native::void type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode resolvedReference=system::core::native::addressFromRef type=(intersection (fun "addressFromRef" ((alias ref)) (alias u32)))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="load" type=(intersection (fun "load" ((alias ref) (alias u32)) (alias Nil)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Nil))
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:<no-type>#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode resolvedReference=Nil type=(type (alias Nil (struct)))
            |-QNameNode=Nil
              |-NameIdentifierNode="Nil"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode resolvedReference=system::core::native::addressFromRef type=(intersection (fun "addressFromRef" ((alias ref)) (alias u32)))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
  |-ImplDirective
    |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
      |-QNameNode=Cons
        |-NameIdentifierNode="Cons"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="as" type=(intersection (fun "as" ((alias Cons)) (alias Forest)) (fun "as" ((alias Cons)) (alias UnsafeCPointer)) (fun "as" ((alias Cons)) (alias ref)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="as" type=(fun "as" ((alias Cons)) (alias Forest))
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Cons
                |-NameIdentifierNode="Cons"
          |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-QNameNode=Forest
              |-NameIdentifierNode="Forest"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="as" type=(fun "as" ((alias Cons)) (alias UnsafeCPointer))
          |-ParameterNode annotations=Local(self:<no-type>#0)
            |-NameIdentifierNode="self" type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Cons
                |-NameIdentifierNode="Cons"
          |-ReferenceNode resolvedReference=system::core::native::UnsafeCPointer type=(type (alias UnsafeCPointer (native UnsafeCPointer)))
            |-QNameNode=UnsafeCPointer
              |-NameIdentifierNode="UnsafeCPointer"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-ReferenceNode resolvedReference=system::core::native::addressFromRef type=(intersection (fun "addressFromRef" ((alias ref)) (alias u32)))
                |-QNameNode=addressFromRef
                  |-NameIdentifierNode="addressFromRef"
              |-WasmAtomNode
                |-QNameNode=$self
                  |-NameIdentifierNode="$self"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="explicit"
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="as" type=(fun "as" ((alias Cons)) (alias ref)) annotations=Explicit
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Cons
                |-NameIdentifierNode="Cons"
          |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
            |-QNameNode=ref
              |-NameIdentifierNode="ref"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-QNameNode=$lhs
                |-NameIdentifierNode="$lhs"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="Cons$discriminant" type=(intersection (fun "Cons$discriminant" () (alias u64)))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="Cons$discriminant" type=(fun "Cons$discriminant" () (alias u64)) annotations=Inline
          |-ReferenceNode resolvedReference=system::core::u64::u64 type=(type (alias u64 (native u64)))
            |-QNameNode=u64
              |-NameIdentifierNode="u64"
          |-BlockNode type=(alias u64 (native u64)) annotations=IsValueNode
            |-VarDeclarationNode annotations=Local(test::fixtures::execution::recursiveStruct::discriminant_3:u32#0)
              |-NameIdentifierNode="discriminant" type=(alias u32 (native u32))
              |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
                |-QNameNode=u32
                  |-NameIdentifierNode="u32"
              |-MemberNode type=(native u32) annotations=IsValueNode
                |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
                  |-QNameNode=Cons
                    |-NameIdentifierNode="Cons"
                |-NameIdentifierNode="discriminant"
            |-BinaryExpressionNode=(fun "<<" ((alias u64) (alias i32)) (alias u64)) type=(alias u64 (native u64)) annotations=IsValueNode,IsReturnExpression
              |-AsExpressionNode=(fun "as" ((alias u32)) (alias u64)) type=(alias u64 (native u64)) annotations=IsValueNode
                |-ReferenceNode resolvedReference=discriminant type=(alias u32 (native u32)) annotations=IsValueNode,Local(test::fixtures::execution::recursiveStruct::discriminant_3:u32#0)
                  |-QNameNode=discriminant
                    |-NameIdentifierNode="discriminant"
                |-ReferenceNode resolvedReference=system::core::u64::u64 type=(type (alias u64 (native u64)))
                  |-QNameNode=u64
                    |-NameIdentifierNode="u64"
              |-NameIdentifierNode="<<"
              |-IntegerLiteral=32 type=(alias i32 (native i32)) annotations=IsValueNode
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="apply" type=(intersection (fun "apply" ((union (alias Tree) (alias Forest))) (alias Cons)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="apply" type=(fun "apply" ((union (alias Tree) (alias Forest))) (alias Cons))
          |-ParameterNode annotations=Local(tree:<no-type>#0)
            |-NameIdentifierNode="tree" type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-UnionTypeNode type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Tree
                  |-NameIdentifierNode="Tree"
              |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Forest
                  |-NameIdentifierNode="Forest"
          |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
            |-QNameNode=Cons
              |-NameIdentifierNode="Cons"
          |-BlockNode type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode
            |-VarDeclarationNode annotations=Local(test::fixtures::execution::recursiveStruct::$ref_1:Cons#1)
              |-NameIdentifierNode="$ref" type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=MutableDeclaration
              |-FunctionCallNode=(fun "fromPointer" ((alias u32)) (alias Cons)) type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode
                |-ReferenceNode resolvedReference=fromPointer type=(intersection (fun "fromPointer" ((alias u32)) (alias Cons)))
                  |-QNameNode=fromPointer
                    |-NameIdentifierNode="fromPointer"
                |-FunctionCallNode=(fun "calloc" ((alias u32) (alias u32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
                  |-ReferenceNode resolvedReference=system::core::memory::calloc type=(intersection (fun "calloc" ((alias u32) (alias u32)) (alias u32)))
                    |-QNameNode=system::core::memory::calloc
                      |-NameIdentifierNode="system"
                      |-NameIdentifierNode="core"
                      |-NameIdentifierNode="memory"
                      |-NameIdentifierNode="calloc"
                  |-AsExpressionNode=(fun "as" ((alias i32)) (alias u32)) type=(alias u32 (native u32)) annotations=IsValueNode
                    |-IntegerLiteral=1 type=(alias i32 (native i32)) annotations=IsValueNode
                    |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
                      |-QNameNode=u32
                        |-NameIdentifierNode="u32"
                  |-MemberNode type=(native u32) annotations=IsValueNode
                    |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
                      |-QNameNode=Cons
                        |-NameIdentifierNode="Cons"
                    |-NameIdentifierNode="allocationSize"
            |-FunctionCallNode=(fun "property$0" ((alias Cons) (union (alias Tree) (alias Forest))) (alias void)) type=(alias void (native void))
              |-ReferenceNode resolvedReference=property$0 type=(intersection (fun "property$0" ((alias Cons)) (union (alias Tree) (alias Forest))) (fun "property$0" ((alias Cons) (union (alias Tree) (alias Forest))) (alias void)))
                |-QNameNode=property$0
                  |-NameIdentifierNode="property$0"
              |-ReferenceNode resolvedReference=$ref type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode,Local(test::fixtures::execution::recursiveStruct::$ref_1:Cons#1)
                |-QNameNode=$ref
                  |-NameIdentifierNode="$ref"
              |-ReferenceNode resolvedReference=tree type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct)))))))))) annotations=IsValueNode,Local(tree:<no-type>#0)
                |-QNameNode=tree
                  |-NameIdentifierNode="tree"
            |-ReferenceNode resolvedReference=$ref type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode,IsReturnExpression,Local(test::fixtures::execution::recursiveStruct::$ref_1:Cons#1)
              |-QNameNode=$ref
                |-NameIdentifierNode="$ref"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="fromPointer" type=(intersection (fun "fromPointer" ((alias u32)) (alias Cons)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="fromPointer" type=(fun "fromPointer" ((alias u32)) (alias Cons))
          |-ParameterNode annotations=Local(ptr:<no-type>#0)
            |-NameIdentifierNode="ptr" type=(alias u32 (native u32))
            |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
            |-QNameNode=Cons
              |-NameIdentifierNode="Cons"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-ReferenceNode resolvedReference=Cons$discriminant type=(intersection (fun "Cons$discriminant" () (alias u64)))
                  |-QNameNode=Cons$discriminant
                    |-NameIdentifierNode="Cons$discriminant"
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$ptr
                    |-NameIdentifierNode="$ptr"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="==" type=(intersection (fun "==" ((alias Cons) (alias Cons)) (alias boolean)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="==" type=(fun "==" ((alias Cons) (alias Cons)) (alias boolean))
          |-ParameterNode annotations=Local(a:<no-type>#0)
            |-NameIdentifierNode="a" type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Cons
                |-NameIdentifierNode="Cons"
          |-ParameterNode annotations=Local(b:<no-type>#1)
            |-NameIdentifierNode="b" type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Cons
                |-NameIdentifierNode="Cons"
          |-ReferenceNode resolvedReference=system::core::boolean::boolean type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="!=" type=(intersection (fun "!=" ((alias Cons) (alias Cons)) (alias boolean)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="!=" type=(fun "!=" ((alias Cons) (alias Cons)) (alias boolean))
          |-ParameterNode annotations=Local(a:<no-type>#0)
            |-NameIdentifierNode="a" type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Cons
                |-NameIdentifierNode="Cons"
          |-ParameterNode annotations=Local(b:<no-type>#1)
            |-NameIdentifierNode="b" type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Cons
                |-NameIdentifierNode="Cons"
          |-ReferenceNode resolvedReference=system::core::boolean::boolean type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-QNameNode=$a
                  |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-QNameNode=$b
                  |-NameIdentifierNode="$b"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="property_tree" type=(intersection (fun "property_tree" ((alias Cons)) (union (alias Tree) (alias Forest))) (fun "property_tree" ((alias Cons) (union (alias Tree) (alias Forest))) (alias void)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="property_tree" type=(fun "property_tree" ((alias Cons)) (union (alias Tree) (alias Forest)))
          |-ParameterNode annotations=Local(self:<no-type>#0)
            |-NameIdentifierNode="self" type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Cons
                |-NameIdentifierNode="Cons"
          |-UnionTypeNode type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-QNameNode=Tree
                |-NameIdentifierNode="Tree"
            |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-QNameNode=Forest
                |-NameIdentifierNode="Forest"
          |-FunctionCallNode=(fun "property$0" ((alias Cons)) (union (alias Tree) (alias Forest))) type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct)))))))))) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode resolvedReference=property$0 type=(intersection (fun "property$0" ((alias Cons)) (union (alias Tree) (alias Forest))) (fun "property$0" ((alias Cons) (union (alias Tree) (alias Forest))) (alias void)))
              |-QNameNode=property$0
                |-NameIdentifierNode="property$0"
            |-ReferenceNode resolvedReference=self type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode,Local(self:<no-type>#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="property_tree" type=(fun "property_tree" ((alias Cons) (union (alias Tree) (alias Forest))) (alias void))
          |-ParameterNode annotations=Local(self:<no-type>#0)
            |-NameIdentifierNode="self" type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Cons
                |-NameIdentifierNode="Cons"
          |-ParameterNode annotations=Local(value:<no-type>#1)
            |-NameIdentifierNode="value" type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-UnionTypeNode type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Tree
                  |-NameIdentifierNode="Tree"
              |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Forest
                  |-NameIdentifierNode="Forest"
          |-ReferenceNode resolvedReference=system::core::native::void type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "property$0" ((alias Cons) (union (alias Tree) (alias Forest))) (alias void)) type=(alias void (native void))
            |-ReferenceNode resolvedReference=property$0 type=(intersection (fun "property$0" ((alias Cons)) (union (alias Tree) (alias Forest))) (fun "property$0" ((alias Cons) (union (alias Tree) (alias Forest))) (alias void)))
              |-QNameNode=property$0
                |-NameIdentifierNode="property$0"
            |-ReferenceNode resolvedReference=self type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode,Local(self:<no-type>#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode resolvedReference=value type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct)))))))))) annotations=IsValueNode,Local(value:<no-type>#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="property$0" type=(intersection (fun "property$0" ((alias Cons)) (union (alias Tree) (alias Forest))) (fun "property$0" ((alias Cons) (union (alias Tree) (alias Forest))) (alias void)))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="property$0" type=(fun "property$0" ((alias Cons)) (union (alias Tree) (alias Forest))) annotations=Inline
          |-ParameterNode annotations=Local(self:<no-type>#0)
            |-NameIdentifierNode="self" type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Cons
                |-NameIdentifierNode="Cons"
          |-UnionTypeNode type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-QNameNode=Tree
                |-NameIdentifierNode="Tree"
            |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-QNameNode=Forest
                |-NameIdentifierNode="Forest"
          |-FunctionCallNode=(fun "loadPropertyWithOffset$0" ((alias Cons) (alias u32)) (union (alias Tree) (alias Forest))) type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct)))))))))) annotations=IsValueNode,IsReturnExpression
            |-ReferenceNode resolvedReference=loadPropertyWithOffset$0 type=(intersection (fun "loadPropertyWithOffset$0" ((alias Cons) (alias u32)) (union (alias Tree) (alias Forest))))
              |-QNameNode=loadPropertyWithOffset$0
                |-NameIdentifierNode="loadPropertyWithOffset$0"
            |-ReferenceNode resolvedReference=self type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode,Local(self:<no-type>#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
                |-QNameNode=Cons
                  |-NameIdentifierNode="Cons"
              |-NameIdentifierNode="property$0_offset"
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="property$0" type=(fun "property$0" ((alias Cons) (union (alias Tree) (alias Forest))) (alias void)) annotations=Inline
          |-ParameterNode annotations=Local(self:<no-type>#0)
            |-NameIdentifierNode="self" type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Cons
                |-NameIdentifierNode="Cons"
          |-ParameterNode annotations=Local(value:<no-type>#1)
            |-NameIdentifierNode="value" type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-UnionTypeNode type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Tree
                  |-NameIdentifierNode="Tree"
              |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Forest
                  |-NameIdentifierNode="Forest"
          |-ReferenceNode resolvedReference=system::core::native::void type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-FunctionCallNode=(fun "storePropertyWithOffset$0" ((alias Cons) (union (alias Tree) (alias Forest)) (alias u32)) (alias void)) type=(alias void (native void))
            |-ReferenceNode resolvedReference=storePropertyWithOffset$0 type=(intersection (fun "storePropertyWithOffset$0" ((alias Cons) (union (alias Tree) (alias Forest)) (alias u32)) (alias void)))
              |-QNameNode=storePropertyWithOffset$0
                |-NameIdentifierNode="storePropertyWithOffset$0"
            |-ReferenceNode resolvedReference=self type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode,Local(self:<no-type>#0)
              |-QNameNode=self
                |-NameIdentifierNode="self"
            |-ReferenceNode resolvedReference=value type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct)))))))))) annotations=IsValueNode,Local(value:<no-type>#1)
              |-QNameNode=value
                |-NameIdentifierNode="value"
            |-MemberNode type=(native u32) annotations=IsValueNode
              |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
                |-QNameNode=Cons
                  |-NameIdentifierNode="Cons"
              |-NameIdentifierNode="property$0_offset"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="loadPropertyWithOffset$0" type=(intersection (fun "loadPropertyWithOffset$0" ((alias Cons) (alias u32)) (union (alias Tree) (alias Forest))))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="loadPropertyWithOffset$0" type=(fun "loadPropertyWithOffset$0" ((alias Cons) (alias u32)) (union (alias Tree) (alias Forest))) annotations=Inline
          |-ParameterNode annotations=Local(self:<no-type>#0)
            |-NameIdentifierNode="self" type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Cons
                |-NameIdentifierNode="Cons"
          |-ParameterNode annotations=Local(offset:<no-type>#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-UnionTypeNode type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-QNameNode=Tree
                |-NameIdentifierNode="Tree"
            |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-QNameNode=Forest
                |-NameIdentifierNode="Forest"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode resolvedReference=system::core::native::addressFromRef type=(intersection (fun "addressFromRef" ((alias ref)) (alias u32)))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$self
                      |-NameIdentifierNode="$self"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="storePropertyWithOffset$0" type=(intersection (fun "storePropertyWithOffset$0" ((alias Cons) (union (alias Tree) (alias Forest)) (alias u32)) (alias void)))
      |-FunDirectiveNode
        |-DecoratorNode
          |-NameIdentifierNode="inline"
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="storePropertyWithOffset$0" type=(fun "storePropertyWithOffset$0" ((alias Cons) (union (alias Tree) (alias Forest)) (alias u32)) (alias void)) annotations=Inline
          |-ParameterNode annotations=Local(self:<no-type>#0)
            |-NameIdentifierNode="self" type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Cons
                |-NameIdentifierNode="Cons"
          |-ParameterNode annotations=Local(value:<no-type>#1)
            |-NameIdentifierNode="value" type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-UnionTypeNode type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
              |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Tree
                  |-NameIdentifierNode="Tree"
              |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Forest
                  |-NameIdentifierNode="Forest"
          |-ParameterNode annotations=Local(offset:<no-type>#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode resolvedReference=system::core::native::void type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode resolvedReference=system::core::native::addressFromRef type=(intersection (fun "addressFromRef" ((alias ref)) (alias u32)))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$self
                      |-NameIdentifierNode="$self"
              |-WasmAtomNode
                |-QNameNode=$value
                  |-NameIdentifierNode="$value"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="is" type=(intersection (fun "is" ((union (alias Cons) (alias ref))) (alias boolean)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="is" type=(fun "is" ((union (alias Cons) (alias ref))) (alias boolean))
          |-ParameterNode annotations=Local(a:<no-type>#0)
            |-NameIdentifierNode="a" type=(union (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) (alias ref (ref ?)))
            |-UnionTypeNode type=(union (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) (alias ref (ref ?)))
              |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
                |-QNameNode=Cons
                  |-NameIdentifierNode="Cons"
              |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
                |-QNameNode=ref
                  |-NameIdentifierNode="ref"
          |-ReferenceNode resolvedReference=system::core::boolean::boolean type=(type (alias boolean (native boolean)))
            |-QNameNode=boolean
              |-NameIdentifierNode="boolean"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-HexLiteral=18446744069414584000 type=(alias u64 (native u64))
                |-WasmAtomNode
                  |-QNameNode=$a
                    |-NameIdentifierNode="$a"
              |-WasmAtomNode
                |-ReferenceNode resolvedReference=Cons$discriminant type=(intersection (fun "Cons$discriminant" () (alias u64)))
                  |-QNameNode=Cons$discriminant
                    |-NameIdentifierNode="Cons$discriminant"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="store" type=(intersection (fun "store" ((alias ref) (alias Cons) (alias u32)) (alias void)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="store" type=(fun "store" ((alias ref) (alias Cons) (alias u32)) (alias void))
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(rhs:<no-type>#1)
            |-NameIdentifierNode="rhs" type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))))))
            |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
              |-QNameNode=Cons
                |-NameIdentifierNode="Cons"
          |-ParameterNode annotations=Local(offset:<no-type>#2)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode resolvedReference=system::core::native::void type=(type (alias void (native void)))
            |-QNameNode=void
              |-NameIdentifierNode="void"
          |-WasmExpressionNode type=(never)
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode resolvedReference=system::core::native::addressFromRef type=(intersection (fun "addressFromRef" ((alias ref)) (alias u32)))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
              |-WasmAtomNode
                |-QNameNode=$rhs
                  |-NameIdentifierNode="$rhs"
    |-OverloadedFunctionNode annotations=Injected
      |-NameIdentifierNode="load" type=(intersection (fun "load" ((alias ref) (alias u32)) (alias Cons)))
      |-FunDirectiveNode
        |-FunctionNode annotations=IsOverloaded
          |-NameIdentifierNode="load" type=(fun "load" ((alias ref) (alias u32)) (alias Cons))
          |-ParameterNode annotations=Local(lhs:<no-type>#0)
            |-NameIdentifierNode="lhs" type=(alias ref (ref ?))
            |-ReferenceNode resolvedReference=system::core::native::ref type=(type (alias ref (ref ?)))
              |-QNameNode=ref
                |-NameIdentifierNode="ref"
          |-ParameterNode annotations=Local(offset:<no-type>#1)
            |-NameIdentifierNode="offset" type=(alias u32 (native u32))
            |-ReferenceNode resolvedReference=system::core::u32::u32 type=(type (alias u32 (native u32)))
              |-QNameNode=u32
                |-NameIdentifierNode="u32"
          |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
            |-QNameNode=Cons
              |-NameIdentifierNode="Cons"
          |-WasmExpressionNode type=(never) annotations=IsValueNode,IsReturnExpression
            |-WasmAtomNode
              |-WasmAtomNode
                |-WasmAtomNode
                  |-QNameNode=$offset
                    |-NameIdentifierNode="$offset"
                |-WasmAtomNode
                  |-ReferenceNode resolvedReference=system::core::native::addressFromRef type=(intersection (fun "addressFromRef" ((alias ref)) (alias u32)))
                    |-QNameNode=addressFromRef
                      |-NameIdentifierNode="addressFromRef"
                  |-WasmAtomNode
                    |-QNameNode=$lhs
                      |-NameIdentifierNode="$lhs"
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Nil" type=(type (alias Nil (struct)))
    |-StructTypeNode type=(struct)
  |-TypeDirectiveNode annotations=Injected
    |-NameIdentifierNode="Cons" type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
    |-StructTypeNode type=(struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct)))))))))))
      |-ParameterNode
        |-NameIdentifierNode="tree" type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
        |-UnionTypeNode type=(union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
          |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-QNameNode=Tree
              |-NameIdentifierNode="Tree"
          |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
            |-QNameNode=Forest
              |-NameIdentifierNode="Forest"
  |-OverloadedFunctionNode annotations=Injected
    |-NameIdentifierNode="main" type=(intersection (fun "main" () (alias void)))
    |-FunDirectiveNode
      |-DecoratorNode
        |-NameIdentifierNode="export"
      |-FunctionNode annotations=IsOverloaded
        |-NameIdentifierNode="main" type=(fun "main" () (alias void)) annotations=Export
        |-ReferenceNode resolvedReference=system::core::native::void type=(type (alias void (native void)))
          |-QNameNode=void
            |-NameIdentifierNode="void"
        |-BlockNode type=(native void)
          |-FunctionCallNode=(fun "START" ((alias string)) (alias void)) type=(alias void (native void))
            |-ReferenceNode resolvedReference=support::test::START type=(intersection (fun "START" ((alias u32)) (alias void)) (fun "START" ((alias string)) (alias void)))
              |-QNameNode=START
                |-NameIdentifierNode="START"
            |-StringLiteral="Forest & Tree tests" type=(alias string (native string)) annotations=IsValueNode
          |-VarDeclarationNode annotations=Local(test::fixtures::execution::recursiveStruct::a_17:Nil#0)
            |-NameIdentifierNode="a" type=(alias Nil (struct)) annotations=MutableDeclaration
            |-ReferenceNode resolvedReference=Nil type=(alias Nil (struct)) annotations=IsValueNode,ImplicitCall(fun "apply" () (alias Nil))
              |-QNameNode=Nil
                |-NameIdentifierNode="Nil"
          |-VarDeclarationNode annotations=Local(test::fixtures::execution::recursiveStruct::b_8:Cons#1)
            |-NameIdentifierNode="b" type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=MutableDeclaration
            |-FunctionCallNode=(fun "apply" ((union (alias Tree) (alias Forest))) (alias Cons)) type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode
              |-MemberNode type=(intersection (fun "apply" ((union (alias Tree) (alias Forest))) (alias Cons)))
                |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
                  |-QNameNode=Cons
                    |-NameIdentifierNode="Cons"
                |-NameIdentifierNode="apply"
              |-ReferenceNode resolvedReference=Empty type=(alias Empty (struct)) annotations=IsValueNode,ImplicitCall(fun "apply" () (alias Empty))
                |-QNameNode=Empty
                  |-NameIdentifierNode="Empty"
          |-VarDeclarationNode annotations=Local(test::fixtures::execution::recursiveStruct::c:Cons#2)
            |-NameIdentifierNode="c" type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=MutableDeclaration
            |-FunctionCallNode=(fun "apply" ((union (alias Tree) (alias Forest))) (alias Cons)) type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode
              |-MemberNode type=(intersection (fun "apply" ((union (alias Tree) (alias Forest))) (alias Cons)))
                |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
                  |-QNameNode=Cons
                    |-NameIdentifierNode="Cons"
                |-NameIdentifierNode="apply"
              |-ReferenceNode resolvedReference=Nil type=(alias Nil (struct)) annotations=IsValueNode,ImplicitCall(fun "apply" () (alias Nil))
                |-QNameNode=Nil
                  |-NameIdentifierNode="Nil"
          |-VarDeclarationNode annotations=Local(test::fixtures::execution::recursiveStruct::d:Cons#3)
            |-NameIdentifierNode="d" type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=MutableDeclaration
            |-FunctionCallNode=(fun "apply" ((union (alias Tree) (alias Forest))) (alias Cons)) type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode
              |-MemberNode type=(intersection (fun "apply" ((union (alias Tree) (alias Forest))) (alias Cons)))
                |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
                  |-QNameNode=Cons
                    |-NameIdentifierNode="Cons"
                |-NameIdentifierNode="apply"
              |-FunctionCallNode=(fun "apply" ((union (alias Tree) (alias Forest))) (alias Node)) type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode
                |-MemberNode type=(intersection (fun "apply" ((union (alias Tree) (alias Forest))) (alias Node)))
                  |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
                    |-QNameNode=Node
                      |-NameIdentifierNode="Node"
                  |-NameIdentifierNode="apply"
                |-ReferenceNode resolvedReference=Empty type=(alias Empty (struct)) annotations=IsValueNode,ImplicitCall(fun "apply" () (alias Empty))
                  |-QNameNode=Empty
                    |-NameIdentifierNode="Empty"
          |-VarDeclarationNode annotations=Local(test::fixtures::execution::recursiveStruct::e:Node#4)
            |-NameIdentifierNode="e" type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=MutableDeclaration
            |-FunctionCallNode=(fun "apply" ((union (alias Tree) (alias Forest))) (alias Node)) type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode
              |-MemberNode type=(intersection (fun "apply" ((union (alias Tree) (alias Forest))) (alias Node)))
                |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
                  |-QNameNode=Node
                    |-NameIdentifierNode="Node"
                |-NameIdentifierNode="apply"
              |-ReferenceNode resolvedReference=Nil type=(alias Nil (struct)) annotations=IsValueNode,ImplicitCall(fun "apply" () (alias Nil))
                |-QNameNode=Nil
                  |-NameIdentifierNode="Nil"
          |-FunctionCallNode=(fun "verify" ((alias boolean) (alias string)) (alias void)) type=(alias void (native void))
            |-ReferenceNode resolvedReference=support::test::verify type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias string)) (alias void)))
              |-QNameNode=verify
                |-NameIdentifierNode="verify"
            |-IsExpressionNode=(fun "is" ((union (alias Nil) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode resolvedReference=a type=(alias Nil (struct)) annotations=IsValueNode,Local(test::fixtures::execution::recursiveStruct::a_17:Nil#0)
                |-QNameNode=a
                  |-NameIdentifierNode="a"
              |-ReferenceNode resolvedReference=Nil type=(type (alias Nil (struct)))
                |-QNameNode=Nil
                  |-NameIdentifierNode="Nil"
            |-StringLiteral="a is Nil" type=(alias string (native string)) annotations=IsValueNode
          |-FunctionCallNode=(fun "verify" ((alias boolean) (alias string)) (alias void)) type=(alias void (native void))
            |-ReferenceNode resolvedReference=support::test::verify type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias string)) (alias void)))
              |-QNameNode=verify
                |-NameIdentifierNode="verify"
            |-IsExpressionNode=(fun "is" ((union (alias Forest) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode resolvedReference=a type=(alias Nil (struct)) annotations=IsValueNode,Local(test::fixtures::execution::recursiveStruct::a_17:Nil#0)
                |-QNameNode=a
                  |-NameIdentifierNode="a"
              |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Forest
                  |-NameIdentifierNode="Forest"
            |-StringLiteral="a is Fores" type=(alias string (native string)) annotations=IsValueNode
          |-FunctionCallNode=(fun "verify" ((alias boolean) (alias string)) (alias void)) type=(alias void (native void))
            |-ReferenceNode resolvedReference=support::test::verify type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias string)) (alias void)))
              |-QNameNode=verify
                |-NameIdentifierNode="verify"
            |-IsExpressionNode=(fun "is" ((union (alias Forest) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode resolvedReference=b type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode,Local(test::fixtures::execution::recursiveStruct::b_8:Cons#1)
                |-QNameNode=b
                  |-NameIdentifierNode="b"
              |-ReferenceNode resolvedReference=Forest type=(type (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Forest
                  |-NameIdentifierNode="Forest"
            |-StringLiteral="b is Fores" type=(alias string (native string)) annotations=IsValueNode
          |-FunctionCallNode=(fun "verify" ((alias boolean) (alias string)) (alias void)) type=(alias void (native void))
            |-ReferenceNode resolvedReference=support::test::verify type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias string)) (alias void)))
              |-QNameNode=verify
                |-NameIdentifierNode="verify"
            |-IsExpressionNode=(fun "is" ((union (alias Cons) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode resolvedReference=c type=(alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode,Local(test::fixtures::execution::recursiveStruct::c:Cons#2)
                |-QNameNode=c
                  |-NameIdentifierNode="c"
              |-ReferenceNode resolvedReference=Cons type=(type (alias Cons (struct tree: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
                |-QNameNode=Cons
                  |-NameIdentifierNode="Cons"
            |-StringLiteral="c is Cons" type=(alias string (native string)) annotations=IsValueNode
          |-FunctionCallNode=(fun "verify" ((alias boolean) (alias string)) (alias void)) type=(alias void (native void))
            |-ReferenceNode resolvedReference=support::test::verify type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias string)) (alias void)))
              |-QNameNode=verify
                |-NameIdentifierNode="verify"
            |-IsExpressionNode=(fun "is" ((union (alias Node) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode resolvedReference=e type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode,Local(test::fixtures::execution::recursiveStruct::e:Node#4)
                |-QNameNode=e
                  |-NameIdentifierNode="e"
              |-ReferenceNode resolvedReference=Node type=(type (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))))
                |-QNameNode=Node
                  |-NameIdentifierNode="Node"
            |-StringLiteral="e is Node" type=(alias string (native string)) annotations=IsValueNode
          |-FunctionCallNode=(fun "verify" ((alias boolean) (alias string)) (alias void)) type=(alias void (native void))
            |-ReferenceNode resolvedReference=support::test::verify type=(intersection (fun "verify" ((alias boolean) (alias u32)) (alias void)) (fun "verify" ((alias boolean) (alias string)) (alias void)))
              |-QNameNode=verify
                |-NameIdentifierNode="verify"
            |-IsExpressionNode=(fun "is" ((union (alias Tree) (alias ref))) (alias boolean)) type=(alias boolean (native boolean)) annotations=IsValueNode
              |-ReferenceNode resolvedReference=e type=(alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons)))))))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct tree: (union (alias Tree (union (alias Empty) (alias Node))) (alias Forest (union (alias Nil) (alias Cons))))))))))) annotations=IsValueNode,Local(test::fixtures::execution::recursiveStruct::e:Node#4)
                |-QNameNode=e
                  |-NameIdentifierNode="e"
              |-ReferenceNode resolvedReference=Tree type=(type (alias Tree (union (alias Empty (struct)) (alias Node (struct a: (union (alias Tree (union (alias Empty (struct)) (alias Node (struct)))) (alias Forest (union (alias Nil (struct)) (alias Cons (struct))))))))))
                |-QNameNode=Tree
                  |-NameIdentifierNode="Tree"
            |-StringLiteral="e is Tree" type=(alias string (native string)) annotations=IsValueNode
          |-FunctionCallNode=(fun "END" () (alias void)) type=(alias void (native void))
            |-ReferenceNode resolvedReference=support::test::END type=(intersection (fun "END" () (alias void)))
              |-QNameNode=END
                |-NameIdentifierNode="END"